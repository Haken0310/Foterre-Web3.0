{"id":"abdbe257b725980f9e8270e79f1527bc","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Capped.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\n\n/**\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\n */\nabstract contract ERC20Capped is ERC20 {\n    uint256 private immutable _cap;\n\n    /**\n     * @dev Total supply cap has been exceeded.\n     */\n    error ERC20ExceededCap(uint256 increasedSupply, uint256 cap);\n\n    /**\n     * @dev The supplied cap is not a valid cap.\n     */\n    error ERC20InvalidCap(uint256 cap);\n\n    /**\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\n     * set once during construction.\n     */\n    constructor(uint256 cap_) {\n        if (cap_ == 0) {\n            revert ERC20InvalidCap(0);\n        }\n        _cap = cap_;\n    }\n\n    /**\n     * @dev Returns the cap on the token's total supply.\n     */\n    function cap() public view virtual returns (uint256) {\n        return _cap;\n    }\n\n    /**\n     * @dev See {ERC20-_update}.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override {\n        super._update(from, to, value);\n\n        if (from == address(0)) {\n            uint256 maxSupply = cap();\n            uint256 supply = totalSupply();\n            if (supply > maxSupply) {\n                revert ERC20ExceededCap(supply, maxSupply);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"contracts/FoterreToken.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\";\n\n//Error Handling Section\nerror notOwner(string message);\nerror restrictAccess(string message);\n\ncontract FoterreToken is ERC20Capped {\n    address public immutable _owner;\n\n    //Token Supply Pool\n    uint256 public ownerToken;\n    uint256 public marketSupply;\n    uint256 public reverseTransactionSupply;\n\n    uint256 transactionCount;\n\n    event AccountFrozenEvent(address indexed account, string message);\n    //To store scammer address in the smart contract\n    address[] public fraudulentUserAddresses;\n    address[] public frozenAddresses;\n    uint256 penaltyAmount;\n    uint256 fraudulentUserCount;\n\n    //To store transaction details\n    event Transfer(\n        address sender,\n        address recipient,\n        uint amount,\n        string message,\n        uint256 datetime\n    );\n\n    struct TransactionDetail {\n        address sender;\n        address recipient;\n        uint256 amount;\n        string message;\n        uint256 datetime;\n    }\n\n    TransactionDetail[] transactionStruct;\n\n    //Modifier Section\n    modifier ownerAccess() {\n        if (msg.sender != _owner) {\n            revert notOwner(\"You are not the owner\");\n        }\n        _;\n    }\n    modifier notFrozen() {\n        for (uint256 i = 0; i < frozenAddresses.length; i++) {\n            if (frozenAddresses[i] == msg.sender) {\n                emit AccountFrozenEvent(\n                    msg.sender,\n                    \"Your account has been frozen\"\n                );\n                revert restrictAccess(\"Your account has been frozen\");\n            }\n        }\n        _;\n    }\n\n    constructor(\n        uint256 max_supply\n    ) ERC20(\"Foterre\", \"FOTE\") ERC20Capped(max_supply * 1e18) {\n        _owner = msg.sender;\n        uint256 initialTokenSupply = 120000000000 * 1e18; //50% of total supply\n        uint256 initial_reversePool = 30000000000 * 1e18;\n\n        ownerToken = initialTokenSupply;\n        reverseTransactionSupply = initial_reversePool;\n\n        _mint(_owner, initialTokenSupply);\n        _mint(_owner, initial_reversePool);\n    }\n\n    //Deduct contract token to User\n    function userDeposit(uint256 amount) public notFrozen {\n        amount = amount * 1e18;\n        if (isFraudulentUser(msg.sender)) {\n            require(amount <= ownerToken, \"Insufficient token supply\");\n            penaltyAmount = (amount * 20) / 100;\n            amount = (amount * 80) / 100;\n            ownerToken -= amount;\n            marketSupply += amount;\n            reverseTransactionSupply += penaltyAmount;\n            _transfer(_owner, msg.sender, amount);\n        } else {\n            require(amount <= ownerToken, \"Insufficient token supply\");\n            ownerToken -= amount;\n            marketSupply += amount;\n            _transfer(_owner, msg.sender, amount);\n        }\n    }\n\n    //User withdraw by sending token back to contract\n    function userWithdrawal(uint256 amount) public notFrozen {\n        amount = amount * 1e18;\n        if (isFraudulentUser(msg.sender)) {\n            penaltyAmount = (amount * 20) / 100;\n            amount = (amount * 80) / 100;\n            marketSupply -= amount;\n            ownerToken += amount;\n            reverseTransactionSupply += penaltyAmount;\n        } else {\n            marketSupply -= amount;\n            ownerToken += amount;\n            _transfer(msg.sender, _owner, amount);\n        }\n    }\n\n    //Override transfer for having different supply pool\n    function transfer(\n        address to,\n        uint256 amount\n    ) public override notFrozen returns (bool) {\n        amount = amount * 1e18;\n        super.transfer(to, amount);\n        return true;\n    }\n\n    //Owner called this function to send fund from reverse transaction pool\n    function reverseTransfer(address victim, uint256 amount) internal {\n        require(\n            amount <= reverseTransactionSupply,\n            \"Insufficient fund in the pool\"\n        );\n        reverseTransactionSupply -= amount;\n        _transfer(_owner, victim, amount);\n    }\n\n    //User report scammer for reverse transaction\n    function reportForReverse(address target, uint256 amount) public notFrozen {\n        amount = amount * 1e18;\n        require(\n            amount <= reverseTransactionSupply,\n            \"Insufficient fund in the pool\"\n        );\n        fraudulentUserAddresses.push(target);\n        fraudulentUserCount += 1;\n        reverseTransfer(msg.sender, amount);\n\n        restrictAccountAccess(target);\n    }\n\n    //Check if target address existed in frauduser\n    function restrictAccountAccess(address target) public {\n        // Check if the user has been reported more than 3 times\n        uint256 reportCount = getFraudulentUserReportCount(target);\n        if (reportCount >= 3) {\n            frozenAddresses.push(target);\n        }\n    }\n\n    //To check if the user is fraudulent user\n    function isFraudulentUser(address target) public view returns (bool) {\n        for (uint256 i = 0; i < fraudulentUserAddresses.length; i++) {\n            if (fraudulentUserAddresses[i] == target) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    //To show fraudulent usser address\n    function getAllFraudulentUsers() public view returns (address[] memory) {\n        return fraudulentUserAddresses;\n    }\n\n    function getAllFrozenUsers() public view returns (address[] memory) {\n        return frozenAddresses;\n    }\n\n    //To check if the reported user existed before\n    function getFraudulentUserReportCount(\n        address target\n    ) public view returns (uint256) {\n        uint256 count = 0;\n        for (uint256 i = 0; i < fraudulentUserAddresses.length; i++) {\n            if (fraudulentUserAddresses[i] == target) {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    //Donation to the help victims\n    function addToReversePool(uint256 amount) public {\n        amount = amount * 1e18;\n        marketSupply -= amount;\n        reverseTransactionSupply += amount;\n        _transfer(msg.sender, _owner, amount);\n    }\n\n    //Add transaction history to Blockchain\n    function deployToBlockchain(\n        address payable recipient,\n        uint amount,\n        string memory message\n    ) public notFrozen {\n        transactionCount += 1;\n        transactionStruct.push(\n            TransactionDetail(\n                msg.sender,\n                recipient,\n                amount,\n                message,\n                block.timestamp\n            )\n        );\n\n        emit Transfer(msg.sender, recipient, amount, message, block.timestamp);\n    }\n\n    function getAllTransactions()\n        public\n        view\n        returns (TransactionDetail[] memory)\n    {\n        return transactionStruct;\n    }\n\n    function getTransactionCount() public view returns (uint256) {\n        return transactionCount;\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[136],"IERC20Errors":[41],"IERC721Errors":[89]},"id":137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"138:139:0","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":41,"linearizedBaseContracts":[41],"name":"IERC20Errors","nameLocation":"288:12:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"307:309:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":11,"name":"ERC20InsufficientBalance","nameLocation":"627:24:0","nodeType":"ErrorDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"sender","nameLocation":"660:6:0","nodeType":"VariableDeclaration","scope":11,"src":"652:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"balance","nameLocation":"676:7:0","nodeType":"VariableDeclaration","scope":11,"src":"668:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"needed","nameLocation":"693:6:0","nodeType":"VariableDeclaration","scope":11,"src":"685:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:0"},"src":"621:80:0"},{"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"707:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":16,"name":"ERC20InvalidSender","nameLocation":"870:18:0","nodeType":"ErrorDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"sender","nameLocation":"897:6:0","nodeType":"VariableDeclaration","scope":16,"src":"889:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:0"},"src":"864:41:0"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"911:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":21,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:0","nodeType":"ErrorDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:0","nodeType":"VariableDeclaration","scope":21,"src":"1102:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:0"},"src":"1075:45:0"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"1126:345:0","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":30,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"spender","nameLocation":"1517:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1509:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:0","nodeType":"VariableDeclaration","scope":30,"src":"1526:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"needed","nameLocation":"1553:6:0","nodeType":"VariableDeclaration","scope":30,"src":"1545:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:0"},"src":"1476:85:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1567:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":35,"name":"ERC20InvalidApprover","nameLocation":"1752:20:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"approver","nameLocation":"1781:8:0","nodeType":"VariableDeclaration","scope":35,"src":"1773:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:0"},"src":"1746:45:0"},{"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"1797:195:0","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":40,"name":"ERC20InvalidSpender","nameLocation":"2003:19:0","nodeType":"ErrorDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"spender","nameLocation":"2031:7:0","nodeType":"VariableDeclaration","scope":40,"src":"2023:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:0"},"src":"1997:43:0"}],"scope":137,"src":"278:1764:0","usedErrors":[11,16,21,30,35,40],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2044:141:0","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":89,"linearizedBaseContracts":[89],"name":"IERC721Errors","nameLocation":"2196:13:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"2216:219:0","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":47,"name":"ERC721InvalidOwner","nameLocation":"2446:18:0","nodeType":"ErrorDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"owner","nameLocation":"2473:5:0","nodeType":"VariableDeclaration","scope":47,"src":"2465:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:0"},"src":"2440:40:0"},{"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"2486:132:0","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":52,"name":"ERC721NonexistentToken","nameLocation":"2629:22:0","nodeType":"ErrorDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:0","nodeType":"VariableDeclaration","scope":52,"src":"2652:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:0"},"src":"2623:46:0"},{"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2675:289:0","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":61,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:0","nodeType":"ErrorDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"sender","nameLocation":"3004:6:0","nodeType":"VariableDeclaration","scope":61,"src":"2996:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:0","nodeType":"VariableDeclaration","scope":61,"src":"3012:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"owner","nameLocation":"3037:5:0","nodeType":"VariableDeclaration","scope":61,"src":"3029:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:0"},"src":"2969:75:0"},{"documentation":{"id":62,"nodeType":"StructuredDocumentation","src":"3050:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":66,"name":"ERC721InvalidSender","nameLocation":"3213:19:0","nodeType":"ErrorDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"sender","nameLocation":"3241:6:0","nodeType":"VariableDeclaration","scope":66,"src":"3233:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:0"},"src":"3207:42:0"},{"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"3255:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":71,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:0","nodeType":"ErrorDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:0","nodeType":"VariableDeclaration","scope":71,"src":"3447:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:0"},"src":"3419:46:0"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3471:247:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":78,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:0","nodeType":"ErrorDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"operator","nameLocation":"3764:8:0","nodeType":"VariableDeclaration","scope":78,"src":"3756:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:0","nodeType":"VariableDeclaration","scope":78,"src":"3774:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:0"},"src":"3723:68:0"},{"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"3797:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":83,"name":"ERC721InvalidApprover","nameLocation":"3982:21:0","nodeType":"ErrorDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"approver","nameLocation":"4012:8:0","nodeType":"VariableDeclaration","scope":83,"src":"4004:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:0"},"src":"3976:46:0"},{"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"4028:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":88,"name":"ERC721InvalidOperator","nameLocation":"4236:21:0","nodeType":"ErrorDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"operator","nameLocation":"4266:8:0","nodeType":"VariableDeclaration","scope":88,"src":"4258:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:0"},"src":"4230:46:0"}],"scope":137,"src":"2186:2092:0","usedErrors":[47,52,61,66,71,78,83,88],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"4280:143:0","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":136,"linearizedBaseContracts":[136],"name":"IERC1155Errors","nameLocation":"4434:14:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"4455:361:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":101,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:0","nodeType":"ErrorDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"sender","nameLocation":"4862:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4854:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"balance","nameLocation":"4878:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4870:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"needed","nameLocation":"4895:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4887:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4903:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:0"},"src":"4821:99:0"},{"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"4926:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":106,"name":"ERC1155InvalidSender","nameLocation":"5089:20:0","nodeType":"ErrorDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"sender","nameLocation":"5118:6:0","nodeType":"VariableDeclaration","scope":106,"src":"5110:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:0"},"src":"5083:43:0"},{"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"5132:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":111,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:0","nodeType":"ErrorDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:0","nodeType":"VariableDeclaration","scope":111,"src":"5325:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:0"},"src":"5296:47:0"},{"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"5349:256:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":118,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:0","nodeType":"ErrorDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"operator","nameLocation":"5653:8:0","nodeType":"VariableDeclaration","scope":118,"src":"5645:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"owner","nameLocation":"5671:5:0","nodeType":"VariableDeclaration","scope":118,"src":"5663:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":115,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:0"},"src":"5610:68:0"},{"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"5684:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":123,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:0","nodeType":"ErrorDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"approver","nameLocation":"5900:8:0","nodeType":"VariableDeclaration","scope":123,"src":"5892:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:0"},"src":"5863:47:0"},{"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"5916:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":128,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:0","nodeType":"ErrorDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"operator","nameLocation":"6155:8:0","nodeType":"VariableDeclaration","scope":128,"src":"6147:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:0"},"src":"6118:47:0"},{"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"6171:280:0","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":135,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:0","nodeType":"ErrorDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:0","nodeType":"VariableDeclaration","scope":135,"src":"6488:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:0","nodeType":"VariableDeclaration","scope":135,"src":"6507:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:0"},"src":"6456:73:0"}],"scope":137,"src":"4424:2107:0","usedErrors":[101,106,111,118,123,128,135],"usedEvents":[]}],"src":"112:6420:0"},"id":0},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[884],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[854]},"id":652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":730,"src":"131:36:1","symbolAliases":[{"foreign":{"id":139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"139:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":855,"src":"168:63:1","symbolAliases":[{"foreign":{"id":141,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"176:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":885,"src":"232:48:1","symbolAliases":[{"foreign":{"id":143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"240:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":137,"src":"281:65:1","symbolAliases":[{"foreign":{"id":145,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"289:12:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":148,"name":"Context","nameLocations":["1428:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":884,"src":"1428:7:1"},"id":149,"nodeType":"InheritanceSpecifier","src":"1428:7:1"},{"baseName":{"id":150,"name":"IERC20","nameLocations":["1437:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"1437:6:1"},"id":151,"nodeType":"InheritanceSpecifier","src":"1437:6:1"},{"baseName":{"id":152,"name":"IERC20Metadata","nameLocations":["1445:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"1445:14:1"},"id":153,"nodeType":"InheritanceSpecifier","src":"1445:14:1"},{"baseName":{"id":154,"name":"IERC20Errors","nameLocations":["1461:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"1461:12:1"},"id":155,"nodeType":"InheritanceSpecifier","src":"1461:12:1"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"348:1052:1","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":651,"linearizedBaseContracts":[651,41,854,729,884],"name":"ERC20","nameLocation":"1419:5:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":159,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:1","nodeType":"VariableDeclaration","scope":651,"src":"1480:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":158,"keyName":"account","keyNameLocation":"1496:7:1","keyType":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":165,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:1","nodeType":"VariableDeclaration","scope":651,"src":"1540:83:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":164,"keyName":"account","keyNameLocation":"1556:7:1","keyType":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":163,"keyName":"spender","keyNameLocation":"1583:7:1","keyType":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":167,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:1","nodeType":"VariableDeclaration","scope":651,"src":"1630:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":169,"mutability":"mutable","name":"_name","nameLocation":"1680:5:1","nodeType":"VariableDeclaration","scope":651,"src":"1665:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":168,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":171,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:1","nodeType":"VariableDeclaration","scope":651,"src":"1691:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":170,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":187,"nodeType":"Block","src":"1952:57:1","statements":[{"expression":{"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":179,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"1962:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":180,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"1970:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":182,"nodeType":"ExpressionStatement","src":"1962:13:1"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":183,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"1985:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1995:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":186,"nodeType":"ExpressionStatement","src":"1985:17:1"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"1720:171:1","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":188,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"name_","nameLocation":"1922:5:1","nodeType":"VariableDeclaration","scope":188,"src":"1908:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":173,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:1","nodeType":"VariableDeclaration","scope":188,"src":"1929:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":175,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:1"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"1952:0:1"},"scope":651,"src":"1896:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[841],"body":{"id":196,"nodeType":"Block","src":"2134:29:1","statements":[{"expression":{"id":194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"2151:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":193,"id":195,"nodeType":"Return","src":"2144:12:1"}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"2015:54:1","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":197,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:1","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"2087:2:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"2119:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":191,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:1"},"scope":651,"src":"2074:89:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[847],"body":{"id":205,"nodeType":"Block","src":"2338:31:1","statements":[{"expression":{"id":203,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2355:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":202,"id":204,"nodeType":"Return","src":"2348:14:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2169:102:1","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":206,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:1","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"2291:2:1"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"2323:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":200,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:1"},"scope":651,"src":"2276:93:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[853],"body":{"id":214,"nodeType":"Block","src":"3058:26:1","statements":[{"expression":{"hexValue":"3138","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":211,"id":213,"nodeType":"Return","src":"3068:9:1"}]},"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"2375:622:1","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:1","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"3019:2:1"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":215,"src":"3051:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":209,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:1"},"scope":651,"src":"3002:82:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[678],"body":{"id":223,"nodeType":"Block","src":"3205:36:1","statements":[{"expression":{"id":221,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3222:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":220,"id":222,"nodeType":"Return","src":"3215:19:1"}]},"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"3090:49:1","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":224,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:1","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[],"src":"3164:2:1"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"3196:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:1"},"scope":651,"src":"3144:97:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[686],"body":{"id":236,"nodeType":"Block","src":"3373:42:1","statements":[{"expression":{"baseExpression":{"id":232,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"3390:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":234,"indexExpression":{"id":233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3400:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":231,"id":235,"nodeType":"Return","src":"3383:25:1"}]},"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"3247:47:1","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":237,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:1","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"account","nameLocation":"3326:7:1","nodeType":"VariableDeclaration","scope":237,"src":"3318:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:1"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"3364:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:1"},"scope":651,"src":"3299:116:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[696],"body":{"id":260,"nodeType":"Block","src":"3685:103:1","statements":[{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"owner","nameLocation":"3703:5:1","nodeType":"VariableDeclaration","scope":260,"src":"3695:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"3711:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:1"},{"expression":{"arguments":[{"id":253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3743:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"3750:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3754:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"3733:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":257,"nodeType":"ExpressionStatement","src":"3733:27:1"},{"expression":{"hexValue":"74727565","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":246,"id":259,"nodeType":"Return","src":"3770:11:1"}]},"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"3421:184:1","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:1","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"to","nameLocation":"3636:2:1","nodeType":"VariableDeclaration","scope":261,"src":"3628:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"value","nameLocation":"3648:5:1","nodeType":"VariableDeclaration","scope":261,"src":"3640:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:1"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":261,"src":"3679:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":244,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:1"},"scope":651,"src":"3610:178:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[706],"body":{"id":277,"nodeType":"Block","src":"3935:51:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":271,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"3952:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":273,"indexExpression":{"id":272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3964:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":275,"indexExpression":{"id":274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3971:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":270,"id":276,"nodeType":"Return","src":"3945:34:1"}]},"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"3794:47:1","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":278,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:1","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"3873:5:1","nodeType":"VariableDeclaration","scope":278,"src":"3865:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"spender","nameLocation":"3888:7:1","nodeType":"VariableDeclaration","scope":278,"src":"3880:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:1"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":278,"src":"3926:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:1"},"scope":651,"src":"3846:140:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[716],"body":{"id":301,"nodeType":"Block","src":"4372:107:1","statements":[{"assignments":[289],"declarations":[{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"4390:5:1","nodeType":"VariableDeclaration","scope":301,"src":"4382:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":290,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"4398:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:1"},{"expression":{"arguments":[{"id":294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"4429:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4436:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4445:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":293,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":542,"src":"4420:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"4420:31:1"},{"expression":{"hexValue":"74727565","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":287,"id":300,"nodeType":"Return","src":"4461:11:1"}]},"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"3992:296:1","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:1","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"spender","nameLocation":"4318:7:1","nodeType":"VariableDeclaration","scope":302,"src":"4310:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"value","nameLocation":"4335:5:1","nodeType":"VariableDeclaration","scope":302,"src":"4327:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:1"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":302,"src":"4366:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":285,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:1"},"scope":651,"src":"4293:186:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[728],"body":{"id":333,"nodeType":"Block","src":"5132:151:1","statements":[{"assignments":[315],"declarations":[{"constant":false,"id":315,"mutability":"mutable","name":"spender","nameLocation":"5150:7:1","nodeType":"VariableDeclaration","scope":333,"src":"5142:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"5160:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:1"},{"expression":{"arguments":[{"id":320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"5198:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5204:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5213:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":319,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"5182:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"5182:37:1"},{"expression":{"arguments":[{"id":326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"5239:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"5245:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5249:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":325,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"5229:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":330,"nodeType":"ExpressionStatement","src":"5229:26:1"},{"expression":{"hexValue":"74727565","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":313,"id":332,"nodeType":"Return","src":"5265:11:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"4485:549:1","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:1","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"from","nameLocation":"5069:4:1","nodeType":"VariableDeclaration","scope":334,"src":"5061:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"to","nameLocation":"5083:2:1","nodeType":"VariableDeclaration","scope":334,"src":"5075:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"value","nameLocation":"5095:5:1","nodeType":"VariableDeclaration","scope":334,"src":"5087:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:1"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"5126:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":311,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:1"},"scope":651,"src":"5039:244:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":380,"nodeType":"Block","src":"5725:231:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5739:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:1","typeDescriptions":{}}},"id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":358,"nodeType":"IfStatement","src":"5735:86:1","trueBody":{"id":357,"nodeType":"Block","src":"5759:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:1","typeDescriptions":{}}},"id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":350,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"5780:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"RevertStatement","src":"5773:37:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5834:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:1","typeDescriptions":{}}},"id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":373,"nodeType":"IfStatement","src":"5830:86:1","trueBody":{"id":372,"nodeType":"Block","src":"5852:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:1","typeDescriptions":{}}},"id":369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":365,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"5873:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":371,"nodeType":"RevertStatement","src":"5866:39:1"}]}},{"expression":{"arguments":[{"id":375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5933:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5939:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5943:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":374,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"5925:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":379,"nodeType":"ExpressionStatement","src":"5925:24:1"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"5289:362:1","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":381,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"from","nameLocation":"5683:4:1","nodeType":"VariableDeclaration","scope":381,"src":"5675:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"to","nameLocation":"5697:2:1","nodeType":"VariableDeclaration","scope":381,"src":"5689:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"value","nameLocation":"5709:5:1","nodeType":"VariableDeclaration","scope":381,"src":"5701:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:1"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"5725:0:1"},"scope":651,"src":"5656:300:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"6346:1032:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6360:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:1","typeDescriptions":{}}},"id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":428,"nodeType":"Block","src":"6534:362:1","statements":[{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:1","nodeType":"VariableDeclaration","scope":428,"src":"6548:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":407,"initialValue":{"baseExpression":{"id":404,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6570:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":406,"indexExpression":{"id":405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6580:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":408,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6603:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6617:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":418,"nodeType":"IfStatement","src":"6599:115:1","trueBody":{"id":417,"nodeType":"Block","src":"6624:90:1","statements":[{"errorCall":{"arguments":[{"id":412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6674:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":413,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6680:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6693:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":411,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"6649:24:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":416,"nodeType":"RevertStatement","src":"6642:57:1"}]}},{"id":427,"nodeType":"UncheckedBlock","src":"6727:159:1","statements":[{"expression":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":419,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6834:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":421,"indexExpression":{"id":420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6844:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6852:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6866:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":426,"nodeType":"ExpressionStatement","src":"6834:37:1"}]}]},"id":429,"nodeType":"IfStatement","src":"6356:540:1","trueBody":{"id":401,"nodeType":"Block","src":"6380:148:1","statements":[{"expression":{"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":397,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"6496:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6512:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":400,"nodeType":"ExpressionStatement","src":"6496:21:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"6910:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:1","typeDescriptions":{}}},"id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":449,"nodeType":"Block","src":"7125:206:1","statements":[{"id":448,"nodeType":"UncheckedBlock","src":"7139:182:1","statements":[{"expression":{"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"7284:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":444,"indexExpression":{"id":443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7294:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7301:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":447,"nodeType":"ExpressionStatement","src":"7284:22:1"}]}]},"id":450,"nodeType":"IfStatement","src":"6906:425:1","trueBody":{"id":441,"nodeType":"Block","src":"6928:191:1","statements":[{"id":440,"nodeType":"UncheckedBlock","src":"6942:167:1","statements":[{"expression":{"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":436,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"7073:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7089:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ExpressionStatement","src":"7073:21:1"}]}]}},{"eventCall":{"arguments":[{"id":452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7355:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7361:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7365:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":451,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"7346:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":456,"nodeType":"EmitStatement","src":"7341:30:1"}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"5962:304:1","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":458,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"from","nameLocation":"6296:4:1","nodeType":"VariableDeclaration","scope":458,"src":"6288:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"to","nameLocation":"6310:2:1","nodeType":"VariableDeclaration","scope":458,"src":"6302:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"value","nameLocation":"6322:5:1","nodeType":"VariableDeclaration","scope":458,"src":"6314:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"6346:0:1"},"scope":651,"src":"6271:1107:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":490,"nodeType":"Block","src":"7777:152:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7791:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:1","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":480,"nodeType":"IfStatement","src":"7787:91:1","trueBody":{"id":479,"nodeType":"Block","src":"7814:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:1","typeDescriptions":{}}},"id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":472,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"7835:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"RevertStatement","src":"7828:39:1"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:1","typeDescriptions":{}}},"id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7907:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7916:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":481,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"7887:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"7887:35:1"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"7384:332:1","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":491,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:1","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"account","nameLocation":"7744:7:1","nodeType":"VariableDeclaration","scope":491,"src":"7736:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"value","nameLocation":"7761:5:1","nodeType":"VariableDeclaration","scope":491,"src":"7753:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:1"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"7777:0:1"},"scope":651,"src":"7721:208:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":523,"nodeType":"Block","src":"8303:150:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8317:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:1","typeDescriptions":{}}},"id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":513,"nodeType":"IfStatement","src":"8313:89:1","trueBody":{"id":512,"nodeType":"Block","src":"8340:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:1","typeDescriptions":{}}},"id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":505,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"8361:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"RevertStatement","src":"8354:37:1"}]}},{"expression":{"arguments":[{"id":515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8419:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:1","typeDescriptions":{}}},"id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"8440:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":514,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"8411:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"8411:35:1"}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"7935:307:1","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":524,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:1","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"account","nameLocation":"8270:7:1","nodeType":"VariableDeclaration","scope":524,"src":"8262:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"value","nameLocation":"8287:5:1","nodeType":"VariableDeclaration","scope":524,"src":"8279:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:1"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[],"src":"8303:0:1"},"scope":651,"src":"8247:206:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":541,"nodeType":"Block","src":"9063:54:1","statements":[{"expression":{"arguments":[{"id":535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"9082:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"9089:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"9098:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":534,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"9073:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"ExpressionStatement","src":"9073:37:1"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"8459:525:1","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":542,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:1","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"owner","nameLocation":"9015:5:1","nodeType":"VariableDeclaration","scope":542,"src":"9007:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"spender","nameLocation":"9030:7:1","nodeType":"VariableDeclaration","scope":542,"src":"9022:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"value","nameLocation":"9047:5:1","nodeType":"VariableDeclaration","scope":542,"src":"9039:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:1"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"9063:0:1"},"scope":651,"src":"8989:128:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":601,"nodeType":"Block","src":"10047:334:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10061:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:1","typeDescriptions":{}}},"id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":568,"nodeType":"IfStatement","src":"10057:89:1","trueBody":{"id":567,"nodeType":"Block","src":"10082:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:1","typeDescriptions":{}}},"id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":560,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"10103:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":566,"nodeType":"RevertStatement","src":"10096:39:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10159:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:1","typeDescriptions":{}}},"id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":583,"nodeType":"IfStatement","src":"10155:90:1","trueBody":{"id":582,"nodeType":"Block","src":"10182:63:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:1","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"10203:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"RevertStatement","src":"10196:38:1"}]}},{"expression":{"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":584,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"10254:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":587,"indexExpression":{"id":585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10266:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":588,"indexExpression":{"id":586,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10273:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10284:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":591,"nodeType":"ExpressionStatement","src":"10254:35:1"},{"condition":{"id":592,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"10303:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":600,"nodeType":"IfStatement","src":"10299:76:1","trueBody":{"id":599,"nodeType":"Block","src":"10314:61:1","statements":[{"eventCall":{"arguments":[{"id":594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10342:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10349:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10358:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":593,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10333:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"EmitStatement","src":"10328:36:1"}]}}]},"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"9123:821:1","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:1","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"owner","nameLocation":"9975:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9967:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"spender","nameLocation":"9990:7:1","nodeType":"VariableDeclaration","scope":602,"src":"9982:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"value","nameLocation":"10007:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9999:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:1","nodeType":"VariableDeclaration","scope":602,"src":"10014:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:1"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"10047:0:1"},"scope":651,"src":"9949:432:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":649,"nodeType":"Block","src":"10752:388:1","statements":[{"assignments":[613],"declarations":[{"constant":false,"id":613,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:1","nodeType":"VariableDeclaration","scope":649,"src":"10762:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":618,"initialValue":{"arguments":[{"id":615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"10799:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10806:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":614,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"10789:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10828:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:1","memberName":"max","nodeType":"MemberAccess","src":"10848:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":648,"nodeType":"IfStatement","src":"10824:310:1","trueBody":{"id":647,"nodeType":"Block","src":"10867:267:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":626,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10885:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10904:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"10881:130:1","trueBody":{"id":635,"nodeType":"Block","src":"10911:100:1","statements":[{"errorCall":{"arguments":[{"id":630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10963:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10972:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10990:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"10936:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"RevertStatement","src":"10929:67:1"}]}},{"id":646,"nodeType":"UncheckedBlock","src":"11024:100:1","statements":[{"expression":{"arguments":[{"id":638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"11061:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"11068:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"11077:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"11096:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":637,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"11052:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"11052:57:1"}]}]}}]},"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"10387:271:1","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":650,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:1","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"owner","nameLocation":"10696:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10688:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"spender","nameLocation":"10711:7:1","nodeType":"VariableDeclaration","scope":650,"src":"10703:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"value","nameLocation":"10728:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10720:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:1"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"10752:0:1"},"scope":651,"src":"10663:477:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":652,"src":"1401:9741:1","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]}],"src":"105:11038:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[729]},"id":730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"132:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":729,"linearizedBaseContracts":[729],"name":"IERC20","nameLocation":"213:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"226:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":663,"name":"Transfer","nameLocation":"395:8:2","nodeType":"EventDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:2","nodeType":"VariableDeclaration","scope":663,"src":"404:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:2","nodeType":"VariableDeclaration","scope":663,"src":"426:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:2","nodeType":"VariableDeclaration","scope":663,"src":"446:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:2"},"src":"389:72:2"},{"anonymous":false,"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"467:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":672,"name":"Approval","nameLocation":"626:8:2","nodeType":"EventDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:2","nodeType":"VariableDeclaration","scope":672,"src":"635:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:2","nodeType":"VariableDeclaration","scope":672,"src":"658:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:2","nodeType":"VariableDeclaration","scope":672,"src":"683:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:2"},"src":"620:78:2"},{"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"704:65:2","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":729,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"835:71:2","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:2","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"account","nameLocation":"938:7:2","nodeType":"VariableDeclaration","scope":686,"src":"930:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:2"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"970:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:2"},"scope":729,"src":"911:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"985:213:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:2","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"to","nameLocation":"1229:2:2","nodeType":"VariableDeclaration","scope":696,"src":"1221:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"value","nameLocation":"1241:5:2","nodeType":"VariableDeclaration","scope":696,"src":"1233:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:2"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":696,"src":"1266:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":693,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:2"},"scope":729,"src":"1203:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"1278:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:2","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"owner","nameLocation":"1574:5:2","nodeType":"VariableDeclaration","scope":706,"src":"1566:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"spender","nameLocation":"1589:7:2","nodeType":"VariableDeclaration","scope":706,"src":"1581:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:2"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"1621:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:2"},"scope":729,"src":"1547:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"1636:667:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:2","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"spender","nameLocation":"2333:7:2","nodeType":"VariableDeclaration","scope":716,"src":"2325:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"value","nameLocation":"2350:5:2","nodeType":"VariableDeclaration","scope":716,"src":"2342:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:2"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":716,"src":"2375:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":713,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:2"},"scope":729,"src":"2308:73:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"2387:297:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:2","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"from","nameLocation":"2719:4:2","nodeType":"VariableDeclaration","scope":728,"src":"2711:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"to","nameLocation":"2733:2:2","nodeType":"VariableDeclaration","scope":728,"src":"2725:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"value","nameLocation":"2745:5:2","nodeType":"VariableDeclaration","scope":728,"src":"2737:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:2"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":728,"src":"2770:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":725,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:2"},"scope":729,"src":"2689:87:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":730,"src":"203:2575:2","usedErrors":[],"usedEvents":[663,672]}],"src":"106:2673:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol","exportedSymbols":{"ERC20":[651],"ERC20Capped":[828]},"id":829,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":829,"sourceUnit":652,"src":"148:35:3","symbolAliases":[{"foreign":{"id":732,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"156:5:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":735,"name":"ERC20","nameLocations":["296:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"296:5:3"},"id":736,"nodeType":"InheritanceSpecifier","src":"296:5:3"}],"canonicalName":"ERC20Capped","contractDependencies":[],"contractKind":"contract","documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"185:77:3","text":" @dev Extension of {ERC20} that adds a cap to the supply of tokens."},"fullyImplemented":true,"id":828,"linearizedBaseContracts":[828,651,41,854,729,884],"name":"ERC20Capped","nameLocation":"281:11:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":738,"mutability":"immutable","name":"_cap","nameLocation":"334:4:3","nodeType":"VariableDeclaration","scope":828,"src":"308:30:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint256","nodeType":"ElementaryTypeName","src":"308:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"345:59:3","text":" @dev Total supply cap has been exceeded."},"errorSelector":"9e79f854","id":745,"name":"ERC20ExceededCap","nameLocation":"415:16:3","nodeType":"ErrorDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"increasedSupply","nameLocation":"440:15:3","nodeType":"VariableDeclaration","scope":745,"src":"432:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"432:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"cap","nameLocation":"465:3:3","nodeType":"VariableDeclaration","scope":745,"src":"457:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":742,"name":"uint256","nodeType":"ElementaryTypeName","src":"457:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"431:38:3"},"src":"409:61:3"},{"documentation":{"id":746,"nodeType":"StructuredDocumentation","src":"476:60:3","text":" @dev The supplied cap is not a valid cap."},"errorSelector":"392e1e27","id":750,"name":"ERC20InvalidCap","nameLocation":"547:15:3","nodeType":"ErrorDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":748,"mutability":"mutable","name":"cap","nameLocation":"571:3:3","nodeType":"VariableDeclaration","scope":750,"src":"563:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":747,"name":"uint256","nodeType":"ElementaryTypeName","src":"563:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"562:13:3"},"src":"541:35:3"},{"body":{"id":769,"nodeType":"Block","src":"742:102:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":756,"name":"cap_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"756:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"764:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"756:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":764,"nodeType":"IfStatement","src":"752:65:3","trueBody":{"id":763,"nodeType":"Block","src":"767:50:3","statements":[{"errorCall":{"arguments":[{"hexValue":"30","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"804:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":759,"name":"ERC20InvalidCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"788:15:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":762,"nodeType":"RevertStatement","src":"781:25:3"}]}},{"expression":{"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":765,"name":"_cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"826:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":766,"name":"cap_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"833:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"826:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":768,"nodeType":"ExpressionStatement","src":"826:11:3"}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"582:129:3","text":" @dev Sets the value of the `cap`. This value is immutable, it can only be\n set once during construction."},"id":770,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"cap_","nameLocation":"736:4:3","nodeType":"VariableDeclaration","scope":770,"src":"728:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":752,"name":"uint256","nodeType":"ElementaryTypeName","src":"728:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"727:14:3"},"returnParameters":{"id":755,"nodeType":"ParameterList","parameters":[],"src":"742:0:3"},"scope":828,"src":"716:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":778,"nodeType":"Block","src":"976:28:3","statements":[{"expression":{"id":776,"name":"_cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"993:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":775,"id":777,"nodeType":"Return","src":"986:11:3"}]},"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"850:68:3","text":" @dev Returns the cap on the token's total supply."},"functionSelector":"355274ea","id":779,"implemented":true,"kind":"function","modifiers":[],"name":"cap","nameLocation":"932:3:3","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[],"src":"935:2:3"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":779,"src":"967:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"967:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"966:9:3"},"scope":828,"src":"923:81:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[458],"body":{"id":826,"nodeType":"Block","src":"1143:287:3","statements":[{"expression":{"arguments":[{"id":793,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"1167:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":794,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"1173:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"1177:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":790,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1153:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Capped_$828_$","typeString":"type(contract super ERC20Capped)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1159:7:3","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":458,"src":"1153:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1153:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":797,"nodeType":"ExpressionStatement","src":"1153:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":798,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"1198:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1214:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1206:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:3","typeDescriptions":{}}},"id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1206:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1198:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":825,"nodeType":"IfStatement","src":"1194:230:3","trueBody":{"id":824,"nodeType":"Block","src":"1218:206:3","statements":[{"assignments":[805],"declarations":[{"constant":false,"id":805,"mutability":"mutable","name":"maxSupply","nameLocation":"1240:9:3","nodeType":"VariableDeclaration","scope":824,"src":"1232:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":804,"name":"uint256","nodeType":"ElementaryTypeName","src":"1232:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":808,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":806,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"1252:3:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1252:5:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1232:25:3"},{"assignments":[810],"declarations":[{"constant":false,"id":810,"mutability":"mutable","name":"supply","nameLocation":"1279:6:3","nodeType":"VariableDeclaration","scope":824,"src":"1271:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":813,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":811,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"1288:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1288:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1271:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":814,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"1319:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":815,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"1328:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1319:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":823,"nodeType":"IfStatement","src":"1315:99:3","trueBody":{"id":822,"nodeType":"Block","src":"1339:75:3","statements":[{"errorCall":{"arguments":[{"id":818,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"1381:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":819,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"1389:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":817,"name":"ERC20ExceededCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"1364:16:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1364:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":821,"nodeType":"RevertStatement","src":"1357:42:3"}]}}]}}]},"documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"1010:44:3","text":" @dev See {ERC20-_update}."},"id":827,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"1068:7:3","nodeType":"FunctionDefinition","overrides":{"id":788,"nodeType":"OverrideSpecifier","overrides":[],"src":"1134:8:3"},"parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"from","nameLocation":"1084:4:3","nodeType":"VariableDeclaration","scope":827,"src":"1076:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":781,"name":"address","nodeType":"ElementaryTypeName","src":"1076:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"to","nameLocation":"1098:2:3","nodeType":"VariableDeclaration","scope":827,"src":"1090:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"1090:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"value","nameLocation":"1110:5:3","nodeType":"VariableDeclaration","scope":827,"src":"1102:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1075:41:3"},"returnParameters":{"id":789,"nodeType":"ParameterList","parameters":[],"src":"1143:0:3"},"scope":828,"src":"1059:371:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":829,"src":"263:1169:3","usedErrors":[11,16,21,30,35,40,745,750],"usedEvents":[663,672]}],"src":"122:1311:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[729],"IERC20Metadata":[854]},"id":855,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":830,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":832,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":855,"sourceUnit":730,"src":"151:37:4","symbolAliases":[{"foreign":{"id":831,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"159:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":834,"name":"IERC20","nameLocations":["305:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"305:6:4"},"id":835,"nodeType":"InheritanceSpecifier","src":"305:6:4"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"190:86:4","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":854,"linearizedBaseContracts":[854,729],"name":"IERC20Metadata","nameLocation":"287:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":836,"nodeType":"StructuredDocumentation","src":"318:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":841,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:4","nodeType":"FunctionDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[],"src":"390:2:4"},"returnParameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":841,"src":"416:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":838,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:4"},"scope":854,"src":"377:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"437:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":847,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:4","nodeType":"FunctionDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[],"src":"513:2:4"},"returnParameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":847,"src":"539:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":844,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:4"},"scope":854,"src":"498:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":848,"nodeType":"StructuredDocumentation","src":"560:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":853,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:4","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[],"src":"647:2:4"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":853,"src":"673:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":850,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:4"},"scope":854,"src":"630:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":855,"src":"277:405:4","usedErrors":[],"usedEvents":[663,672]}],"src":"125:558:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[884]},"id":885,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":856,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":857,"nodeType":"StructuredDocumentation","src":"127:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":884,"linearizedBaseContracts":[884],"name":"Context","nameLocation":"642:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":865,"nodeType":"Block","src":"718:34:5","statements":[{"expression":{"expression":{"id":862,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:5","memberName":"sender","nodeType":"MemberAccess","src":"735:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":861,"id":864,"nodeType":"Return","src":"728:17:5"}]},"id":866,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:5","nodeType":"FunctionDefinition","parameters":{"id":858,"nodeType":"ParameterList","parameters":[],"src":"675:2:5"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":866,"src":"709:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":859,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:5"},"scope":884,"src":"656:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":874,"nodeType":"Block","src":"825:32:5","statements":[{"expression":{"expression":{"id":871,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:5","memberName":"data","nodeType":"MemberAccess","src":"842:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":870,"id":873,"nodeType":"Return","src":"835:15:5"}]},"id":875,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:5","nodeType":"FunctionDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[],"src":"775:2:5"},"returnParameters":{"id":870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":875,"src":"809:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":868,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:5"},"scope":884,"src":"758:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":882,"nodeType":"Block","src":"935:25:5","statements":[{"expression":{"hexValue":"30","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":879,"id":881,"nodeType":"Return","src":"945:8:5"}]},"id":883,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:5","nodeType":"FunctionDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[],"src":"892:2:5"},"returnParameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":883,"src":"926:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":877,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:5"},"scope":884,"src":"863:97:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":885,"src":"624:338:5","usedErrors":[],"usedEvents":[]}],"src":"101:862:5"},"id":5},"contracts/FoterreToken.sol":{"ast":{"absolutePath":"contracts/FoterreToken.sol","exportedSymbols":{"Context":[884],"ERC20":[651],"ERC20Capped":[828],"FoterreToken":[1495],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[854],"notOwner":[892],"restrictAccess":[896]},"id":1496,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":886,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"33:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":887,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1496,"sourceUnit":652,"src":"59:55:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol","id":888,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1496,"sourceUnit":829,"src":"115:72:6","symbolAliases":[],"unitAlias":""},{"errorSelector":"62355e78","id":892,"name":"notOwner","nameLocation":"220:8:6","nodeType":"ErrorDefinition","parameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"message","nameLocation":"236:7:6","nodeType":"VariableDeclaration","scope":892,"src":"229:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":889,"name":"string","nodeType":"ElementaryTypeName","src":"229:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"228:16:6"},"src":"214:31:6"},{"errorSelector":"c033214d","id":896,"name":"restrictAccess","nameLocation":"252:14:6","nodeType":"ErrorDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"message","nameLocation":"274:7:6","nodeType":"VariableDeclaration","scope":896,"src":"267:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":893,"name":"string","nodeType":"ElementaryTypeName","src":"267:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"266:16:6"},"src":"246:37:6"},{"abstract":false,"baseContracts":[{"baseName":{"id":897,"name":"ERC20Capped","nameLocations":["310:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":828,"src":"310:11:6"},"id":898,"nodeType":"InheritanceSpecifier","src":"310:11:6"}],"canonicalName":"FoterreToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1495,"linearizedBaseContracts":[1495,828,651,41,854,729,884],"name":"FoterreToken","nameLocation":"294:12:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"b2bdfa7b","id":900,"mutability":"immutable","name":"_owner","nameLocation":"353:6:6","nodeType":"VariableDeclaration","scope":1495,"src":"328:31:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"328:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"65371883","id":902,"mutability":"mutable","name":"ownerToken","nameLocation":"405:10:6","nodeType":"VariableDeclaration","scope":1495,"src":"390:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":901,"name":"uint256","nodeType":"ElementaryTypeName","src":"390:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"bafb8e83","id":904,"mutability":"mutable","name":"marketSupply","nameLocation":"436:12:6","nodeType":"VariableDeclaration","scope":1495,"src":"421:27:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":903,"name":"uint256","nodeType":"ElementaryTypeName","src":"421:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"044d1d4c","id":906,"mutability":"mutable","name":"reverseTransactionSupply","nameLocation":"469:24:6","nodeType":"VariableDeclaration","scope":1495,"src":"454:39:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"454:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":908,"mutability":"mutable","name":"transactionCount","nameLocation":"508:16:6","nodeType":"VariableDeclaration","scope":1495,"src":"500:24:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":907,"name":"uint256","nodeType":"ElementaryTypeName","src":"500:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"anonymous":false,"eventSelector":"95e4151200d357a599dac39756b80fcd6d76fd3d5b74d6adef1dad12411f27e3","id":914,"name":"AccountFrozenEvent","nameLocation":"537:18:6","nodeType":"EventDefinition","parameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"572:7:6","nodeType":"VariableDeclaration","scope":914,"src":"556:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"556:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":912,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"588:7:6","nodeType":"VariableDeclaration","scope":914,"src":"581:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":911,"name":"string","nodeType":"ElementaryTypeName","src":"581:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"555:41:6"},"src":"531:66:6"},{"constant":false,"functionSelector":"e80a4d58","id":917,"mutability":"mutable","name":"fraudulentUserAddresses","nameLocation":"672:23:6","nodeType":"VariableDeclaration","scope":1495,"src":"655:40:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"655:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":916,"nodeType":"ArrayTypeName","src":"655:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"5506ed44","id":920,"mutability":"mutable","name":"frozenAddresses","nameLocation":"718:15:6","nodeType":"VariableDeclaration","scope":1495,"src":"701:32:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"701:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":919,"nodeType":"ArrayTypeName","src":"701:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"id":922,"mutability":"mutable","name":"penaltyAmount","nameLocation":"747:13:6","nodeType":"VariableDeclaration","scope":1495,"src":"739:21:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"739:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"fraudulentUserCount","nameLocation":"774:19:6","nodeType":"VariableDeclaration","scope":1495,"src":"766:27:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"766:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"anonymous":false,"eventSelector":"c4b32d7ff75a51e487f3cbb5d3202f2efecca1f4c2b987e0039c1d3220b48a83","id":936,"name":"Transfer","nameLocation":"841:8:6","nodeType":"EventDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"867:6:6","nodeType":"VariableDeclaration","scope":936,"src":"859:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":928,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"891:9:6","nodeType":"VariableDeclaration","scope":936,"src":"883:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":927,"name":"address","nodeType":"ElementaryTypeName","src":"883:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":930,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"915:6:6","nodeType":"VariableDeclaration","scope":936,"src":"910:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":929,"name":"uint","nodeType":"ElementaryTypeName","src":"910:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":932,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"938:7:6","nodeType":"VariableDeclaration","scope":936,"src":"931:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":931,"name":"string","nodeType":"ElementaryTypeName","src":"931:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":934,"indexed":false,"mutability":"mutable","name":"datetime","nameLocation":"963:8:6","nodeType":"VariableDeclaration","scope":936,"src":"955:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"955:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"849:128:6"},"src":"835:143:6"},{"canonicalName":"FoterreToken.TransactionDetail","id":947,"members":[{"constant":false,"id":938,"mutability":"mutable","name":"sender","nameLocation":"1027:6:6","nodeType":"VariableDeclaration","scope":947,"src":"1019:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":940,"mutability":"mutable","name":"recipient","nameLocation":"1051:9:6","nodeType":"VariableDeclaration","scope":947,"src":"1043:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":942,"mutability":"mutable","name":"amount","nameLocation":"1078:6:6","nodeType":"VariableDeclaration","scope":947,"src":"1070:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":941,"name":"uint256","nodeType":"ElementaryTypeName","src":"1070:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":944,"mutability":"mutable","name":"message","nameLocation":"1101:7:6","nodeType":"VariableDeclaration","scope":947,"src":"1094:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":943,"name":"string","nodeType":"ElementaryTypeName","src":"1094:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":946,"mutability":"mutable","name":"datetime","nameLocation":"1126:8:6","nodeType":"VariableDeclaration","scope":947,"src":"1118:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":945,"name":"uint256","nodeType":"ElementaryTypeName","src":"1118:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TransactionDetail","nameLocation":"991:17:6","nodeType":"StructDefinition","scope":1495,"src":"984:157:6","visibility":"public"},{"constant":false,"id":951,"mutability":"mutable","name":"transactionStruct","nameLocation":"1167:17:6","nodeType":"VariableDeclaration","scope":1495,"src":"1147:37:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransactionDetail_$947_storage_$dyn_storage","typeString":"struct FoterreToken.TransactionDetail[]"},"typeName":{"baseType":{"id":949,"nodeType":"UserDefinedTypeName","pathNode":{"id":948,"name":"TransactionDetail","nameLocations":["1147:17:6"],"nodeType":"IdentifierPath","referencedDeclaration":947,"src":"1147:17:6"},"referencedDeclaration":947,"src":"1147:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_TransactionDetail_$947_storage_ptr","typeString":"struct FoterreToken.TransactionDetail"}},"id":950,"nodeType":"ArrayTypeName","src":"1147:19:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransactionDetail_$947_storage_$dyn_storage_ptr","typeString":"struct FoterreToken.TransactionDetail[]"}},"visibility":"internal"},{"body":{"id":964,"nodeType":"Block","src":"1237:118:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":953,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1251:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1255:6:6","memberName":"sender","nodeType":"MemberAccess","src":"1251:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":955,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"1265:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1251:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":962,"nodeType":"IfStatement","src":"1247:91:6","trueBody":{"id":961,"nodeType":"Block","src":"1273:65:6","statements":[{"errorCall":{"arguments":[{"hexValue":"596f7520617265206e6f7420746865206f776e6572","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1303:23:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc","typeString":"literal_string \"You are not the owner\""},"value":"You are not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc","typeString":"literal_string \"You are not the owner\""}],"id":957,"name":"notOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"1294:8:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1294:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":960,"nodeType":"RevertStatement","src":"1287:40:6"}]}},{"id":963,"nodeType":"PlaceholderStatement","src":"1347:1:6"}]},"id":965,"name":"ownerAccess","nameLocation":"1223:11:6","nodeType":"ModifierDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[],"src":"1234:2:6"},"src":"1214:141:6","virtual":false,"visibility":"internal"},{"body":{"id":999,"nodeType":"Block","src":"1381:371:6","statements":[{"body":{"id":996,"nodeType":"Block","src":"1444:291:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":978,"name":"frozenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"1462:15:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":980,"indexExpression":{"id":979,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"1478:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1462:18:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":981,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1484:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1488:6:6","memberName":"sender","nodeType":"MemberAccess","src":"1484:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1462:32:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":995,"nodeType":"IfStatement","src":"1458:267:6","trueBody":{"id":994,"nodeType":"Block","src":"1496:229:6","statements":[{"eventCall":{"arguments":[{"expression":{"id":985,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1559:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1563:6:6","memberName":"sender","nodeType":"MemberAccess","src":"1559:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"596f7572206163636f756e7420686173206265656e2066726f7a656e","id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1591:30:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d84ad26e31dab99602e5848e20a3d31d72f14ed2a8a92b5d806058164b59134","typeString":"literal_string \"Your account has been frozen\""},"value":"Your account has been frozen"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_6d84ad26e31dab99602e5848e20a3d31d72f14ed2a8a92b5d806058164b59134","typeString":"literal_string \"Your account has been frozen\""}],"id":984,"name":"AccountFrozenEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"1519:18:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1519:120:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":989,"nodeType":"EmitStatement","src":"1514:125:6"},{"errorCall":{"arguments":[{"hexValue":"596f7572206163636f756e7420686173206265656e2066726f7a656e","id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1679:30:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d84ad26e31dab99602e5848e20a3d31d72f14ed2a8a92b5d806058164b59134","typeString":"literal_string \"Your account has been frozen\""},"value":"Your account has been frozen"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6d84ad26e31dab99602e5848e20a3d31d72f14ed2a8a92b5d806058164b59134","typeString":"literal_string \"Your account has been frozen\""}],"id":990,"name":"restrictAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"1664:14:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":993,"nodeType":"RevertStatement","src":"1657:53:6"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":971,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"1411:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":972,"name":"frozenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"1415:15:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1431:6:6","memberName":"length","nodeType":"MemberAccess","src":"1415:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1411:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":997,"initializationExpression":{"assignments":[968],"declarations":[{"constant":false,"id":968,"mutability":"mutable","name":"i","nameLocation":"1404:1:6","nodeType":"VariableDeclaration","scope":997,"src":"1396:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":967,"name":"uint256","nodeType":"ElementaryTypeName","src":"1396:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":970,"initialValue":{"hexValue":"30","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1408:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1396:13:6"},"loopExpression":{"expression":{"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1439:3:6","subExpression":{"id":975,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"1439:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":977,"nodeType":"ExpressionStatement","src":"1439:3:6"},"nodeType":"ForStatement","src":"1391:344:6"},{"id":998,"nodeType":"PlaceholderStatement","src":"1744:1:6"}]},"id":1000,"name":"notFrozen","nameLocation":"1369:9:6","nodeType":"ModifierDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[],"src":"1378:2:6"},"src":"1360:392:6","virtual":false,"visibility":"internal"},{"body":{"id":1049,"nodeType":"Block","src":"1860:360:6","statements":[{"expression":{"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1014,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"1870:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1015,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1879:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1883:6:6","memberName":"sender","nodeType":"MemberAccess","src":"1879:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1870:19:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1018,"nodeType":"ExpressionStatement","src":"1870:19:6"},{"assignments":[1020],"declarations":[{"constant":false,"id":1020,"mutability":"mutable","name":"initialTokenSupply","nameLocation":"1907:18:6","nodeType":"VariableDeclaration","scope":1049,"src":"1899:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"1899:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1024,"initialValue":{"commonType":{"typeIdentifier":"t_rational_120000000000000000000000000000_by_1","typeString":"int_const 120000000000000000000000000000"},"id":1023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313230303030303030303030","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1928:12:6","typeDescriptions":{"typeIdentifier":"t_rational_120000000000_by_1","typeString":"int_const 120000000000"},"value":"120000000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1943:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"1928:19:6","typeDescriptions":{"typeIdentifier":"t_rational_120000000000000000000000000000_by_1","typeString":"int_const 120000000000000000000000000000"}},"nodeType":"VariableDeclarationStatement","src":"1899:48:6"},{"assignments":[1026],"declarations":[{"constant":false,"id":1026,"mutability":"mutable","name":"initial_reversePool","nameLocation":"1987:19:6","nodeType":"VariableDeclaration","scope":1049,"src":"1979:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1025,"name":"uint256","nodeType":"ElementaryTypeName","src":"1979:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1030,"initialValue":{"commonType":{"typeIdentifier":"t_rational_30000000000000000000000000000_by_1","typeString":"int_const 30000000000000000000000000000"},"id":1029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3330303030303030303030","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2009:11:6","typeDescriptions":{"typeIdentifier":"t_rational_30000000000_by_1","typeString":"int_const 30000000000"},"value":"30000000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2023:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"2009:18:6","typeDescriptions":{"typeIdentifier":"t_rational_30000000000000000000000000000_by_1","typeString":"int_const 30000000000000000000000000000"}},"nodeType":"VariableDeclarationStatement","src":"1979:48:6"},{"expression":{"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1031,"name":"ownerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"2038:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1032,"name":"initialTokenSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"2051:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2038:31:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1034,"nodeType":"ExpressionStatement","src":"2038:31:6"},{"expression":{"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1035,"name":"reverseTransactionSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"2079:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1036,"name":"initial_reversePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"2106:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2079:46:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1038,"nodeType":"ExpressionStatement","src":"2079:46:6"},{"expression":{"arguments":[{"id":1040,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"2142:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"initialTokenSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"2150:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1039,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"2136:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2136:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1043,"nodeType":"ExpressionStatement","src":"2136:33:6"},{"expression":{"arguments":[{"id":1045,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"2185:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1046,"name":"initial_reversePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"2193:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1044,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"2179:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2179:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1048,"nodeType":"ExpressionStatement","src":"2179:34:6"}]},"id":1050,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"466f7465727265","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1810:9:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_8627193187c803f0eaf773ab528c3ec505d9444e5c0abe30ee120e2d1104dddf","typeString":"literal_string \"Foterre\""},"value":"Foterre"},{"hexValue":"464f5445","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:6:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_d2445e6bfdf116a75dc6646cf5710f8d7cf9d92b91435afc89d9fda5c7e90338","typeString":"literal_string \"FOTE\""},"value":"FOTE"}],"id":1007,"kind":"baseConstructorSpecifier","modifierName":{"id":1004,"name":"ERC20","nameLocations":["1804:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"1804:5:6"},"nodeType":"ModifierInvocation","src":"1804:24:6"},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1009,"name":"max_supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"1841:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"1841:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1012,"kind":"baseConstructorSpecifier","modifierName":{"id":1008,"name":"ERC20Capped","nameLocations":["1829:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":828,"src":"1829:11:6"},"nodeType":"ModifierInvocation","src":"1829:30:6"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"max_supply","nameLocation":"1787:10:6","nodeType":"VariableDeclaration","scope":1050,"src":"1779:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1001,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1769:34:6"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[],"src":"1860:0:6"},"scope":1495,"src":"1758:462:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1136,"nodeType":"Block","src":"2316:642:6","statements":[{"expression":{"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1057,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2326:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1058,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2335:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2344:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"2335:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2326:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1062,"nodeType":"ExpressionStatement","src":"2326:22:6"},{"condition":{"arguments":[{"expression":{"id":1064,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2379:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2383:6:6","memberName":"sender","nodeType":"MemberAccess","src":"2379:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1063,"name":"isFraudulentUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"2362:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1134,"nodeType":"Block","src":"2748:204:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1113,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2770:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1114,"name":"ownerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"2780:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2770:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420746f6b656e20737570706c79","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2792:27:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_a755cc50c9d762fab4401909210a5ee388e8968ca003bb660f98e04d784510a8","typeString":"literal_string \"Insufficient token supply\""},"value":"Insufficient token supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a755cc50c9d762fab4401909210a5ee388e8968ca003bb660f98e04d784510a8","typeString":"literal_string \"Insufficient token supply\""}],"id":1112,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2762:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2762:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1118,"nodeType":"ExpressionStatement","src":"2762:58:6"},{"expression":{"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1119,"name":"ownerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"2834:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1120,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2848:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2834:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1122,"nodeType":"ExpressionStatement","src":"2834:20:6"},{"expression":{"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1123,"name":"marketSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"2868:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1124,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2884:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2868:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1126,"nodeType":"ExpressionStatement","src":"2868:22:6"},{"expression":{"arguments":[{"id":1128,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"2914:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1129,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2922:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2926:6:6","memberName":"sender","nodeType":"MemberAccess","src":"2922:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1131,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2934:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1127,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"2904:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2904:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1133,"nodeType":"ExpressionStatement","src":"2904:37:6"}]},"id":1135,"nodeType":"IfStatement","src":"2358:594:6","trueBody":{"id":1111,"nodeType":"Block","src":"2392:350:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1068,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2414:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1069,"name":"ownerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"2424:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2414:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420746f6b656e20737570706c79","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2436:27:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_a755cc50c9d762fab4401909210a5ee388e8968ca003bb660f98e04d784510a8","typeString":"literal_string \"Insufficient token supply\""},"value":"Insufficient token supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a755cc50c9d762fab4401909210a5ee388e8968ca003bb660f98e04d784510a8","typeString":"literal_string \"Insufficient token supply\""}],"id":1067,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2406:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2406:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1073,"nodeType":"ExpressionStatement","src":"2406:58:6"},{"expression":{"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1074,"name":"penaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"2478:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1075,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2495:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3230","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2504:2:6","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"2495:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1078,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2494:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2510:3:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2494:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2478:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1082,"nodeType":"ExpressionStatement","src":"2478:35:6"},{"expression":{"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1083,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2527:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1084,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2537:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3830","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2546:2:6","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},"src":"2537:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1087,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2536:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2552:3:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2536:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2527:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1091,"nodeType":"ExpressionStatement","src":"2527:28:6"},{"expression":{"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1092,"name":"ownerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"2569:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1093,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2583:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2569:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1095,"nodeType":"ExpressionStatement","src":"2569:20:6"},{"expression":{"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1096,"name":"marketSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"2603:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1097,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2619:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2603:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1099,"nodeType":"ExpressionStatement","src":"2603:22:6"},{"expression":{"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1100,"name":"reverseTransactionSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"2639:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1101,"name":"penaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"2667:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2639:41:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1103,"nodeType":"ExpressionStatement","src":"2639:41:6"},{"expression":{"arguments":[{"id":1105,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"2704:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1106,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2712:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2716:6:6","memberName":"sender","nodeType":"MemberAccess","src":"2712:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1108,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2724:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1104,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"2694:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2694:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1110,"nodeType":"ExpressionStatement","src":"2694:37:6"}]}}]},"functionSelector":"f868e766","id":1137,"implemented":true,"kind":"function","modifiers":[{"id":1055,"kind":"modifierInvocation","modifierName":{"id":1054,"name":"notFrozen","nameLocations":["2306:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":1000,"src":"2306:9:6"},"nodeType":"ModifierInvocation","src":"2306:9:6"}],"name":"userDeposit","nameLocation":"2271:11:6","nodeType":"FunctionDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"amount","nameLocation":"2291:6:6","nodeType":"VariableDeclaration","scope":1137,"src":"2283:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"2283:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2282:16:6"},"returnParameters":{"id":1056,"nodeType":"ParameterList","parameters":[],"src":"2316:0:6"},"scope":1495,"src":"2262:696:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1202,"nodeType":"Block","src":"3075:447:6","statements":[{"expression":{"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1144,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"3085:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1145,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"3094:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3103:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"3094:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3085:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1149,"nodeType":"ExpressionStatement","src":"3085:22:6"},{"condition":{"arguments":[{"expression":{"id":1151,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3138:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3142:6:6","memberName":"sender","nodeType":"MemberAccess","src":"3138:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1150,"name":"isFraudulentUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"3121:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3121:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1200,"nodeType":"Block","src":"3384:132:6","statements":[{"expression":{"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1185,"name":"marketSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"3398:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1186,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"3414:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3398:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1188,"nodeType":"ExpressionStatement","src":"3398:22:6"},{"expression":{"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1189,"name":"ownerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"3434:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1190,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"3448:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3434:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1192,"nodeType":"ExpressionStatement","src":"3434:20:6"},{"expression":{"arguments":[{"expression":{"id":1194,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3478:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3482:6:6","memberName":"sender","nodeType":"MemberAccess","src":"3478:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1196,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"3490:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1197,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"3498:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1193,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"3468:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3468:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1199,"nodeType":"ExpressionStatement","src":"3468:37:6"}]},"id":1201,"nodeType":"IfStatement","src":"3117:399:6","trueBody":{"id":1184,"nodeType":"Block","src":"3151:227:6","statements":[{"expression":{"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1154,"name":"penaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"3165:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1155,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"3182:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3230","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3191:2:6","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"3182:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3181:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3197:3:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"3181:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3165:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1162,"nodeType":"ExpressionStatement","src":"3165:35:6"},{"expression":{"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1163,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"3214:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1164,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"3224:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3830","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3233:2:6","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},"src":"3224:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3223:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":1168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3239:3:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"3223:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3214:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1171,"nodeType":"ExpressionStatement","src":"3214:28:6"},{"expression":{"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1172,"name":"marketSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"3256:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1173,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"3272:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3256:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1175,"nodeType":"ExpressionStatement","src":"3256:22:6"},{"expression":{"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1176,"name":"ownerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"3292:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1177,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"3306:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3292:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1179,"nodeType":"ExpressionStatement","src":"3292:20:6"},{"expression":{"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1180,"name":"reverseTransactionSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"3326:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1181,"name":"penaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"3354:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3326:41:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1183,"nodeType":"ExpressionStatement","src":"3326:41:6"}]}}]},"functionSelector":"f09c69c7","id":1203,"implemented":true,"kind":"function","modifiers":[{"id":1142,"kind":"modifierInvocation","modifierName":{"id":1141,"name":"notFrozen","nameLocations":["3065:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":1000,"src":"3065:9:6"},"nodeType":"ModifierInvocation","src":"3065:9:6"}],"name":"userWithdrawal","nameLocation":"3027:14:6","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"amount","nameLocation":"3050:6:6","nodeType":"VariableDeclaration","scope":1203,"src":"3042:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"3042:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3041:16:6"},"returnParameters":{"id":1143,"nodeType":"ParameterList","parameters":[],"src":"3075:0:6"},"scope":1495,"src":"3018:504:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[261],"body":{"id":1230,"nodeType":"Block","src":"3694:96:6","statements":[{"expression":{"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1215,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"3704:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1216,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"3713:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3722:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"3713:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3704:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1220,"nodeType":"ExpressionStatement","src":"3704:22:6"},{"expression":{"arguments":[{"id":1224,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"3751:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1225,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"3755:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1221,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3736:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_FoterreToken_$1495_$","typeString":"type(contract super FoterreToken)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3742:8:6","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":261,"src":"3736:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3736:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1227,"nodeType":"ExpressionStatement","src":"3736:26:6"},{"expression":{"hexValue":"74727565","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3779:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1214,"id":1229,"nodeType":"Return","src":"3772:11:6"}]},"functionSelector":"a9059cbb","id":1231,"implemented":true,"kind":"function","modifiers":[{"id":1211,"kind":"modifierInvocation","modifierName":{"id":1210,"name":"notFrozen","nameLocations":["3669:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":1000,"src":"3669:9:6"},"nodeType":"ModifierInvocation","src":"3669:9:6"}],"name":"transfer","nameLocation":"3594:8:6","nodeType":"FunctionDefinition","overrides":{"id":1209,"nodeType":"OverrideSpecifier","overrides":[],"src":"3660:8:6"},"parameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"to","nameLocation":"3620:2:6","nodeType":"VariableDeclaration","scope":1231,"src":"3612:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"3612:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1207,"mutability":"mutable","name":"amount","nameLocation":"3640:6:6","nodeType":"VariableDeclaration","scope":1231,"src":"3632:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"3632:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3602:50:6"},"returnParameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1231,"src":"3688:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1212,"name":"bool","nodeType":"ElementaryTypeName","src":"3688:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3687:6:6"},"scope":1495,"src":"3585:205:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1255,"nodeType":"Block","src":"3938:214:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1239,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"3969:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1240,"name":"reverseTransactionSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"3979:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3969:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742066756e6420696e2074686520706f6f6c","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4017:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899","typeString":"literal_string \"Insufficient fund in the pool\""},"value":"Insufficient fund in the pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899","typeString":"literal_string \"Insufficient fund in the pool\""}],"id":1238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3948:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3948:110:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1244,"nodeType":"ExpressionStatement","src":"3948:110:6"},{"expression":{"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1245,"name":"reverseTransactionSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"4068:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1246,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"4096:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4068:34:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1248,"nodeType":"ExpressionStatement","src":"4068:34:6"},{"expression":{"arguments":[{"id":1250,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"4122:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1251,"name":"victim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"4130:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1252,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"4138:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1249,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"4112:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4112:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1254,"nodeType":"ExpressionStatement","src":"4112:33:6"}]},"id":1256,"implemented":true,"kind":"function","modifiers":[],"name":"reverseTransfer","nameLocation":"3881:15:6","nodeType":"FunctionDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"victim","nameLocation":"3905:6:6","nodeType":"VariableDeclaration","scope":1256,"src":"3897:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"3897:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"amount","nameLocation":"3921:6:6","nodeType":"VariableDeclaration","scope":1256,"src":"3913:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"3913:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:32:6"},"returnParameters":{"id":1237,"nodeType":"ParameterList","parameters":[],"src":"3938:0:6"},"scope":1495,"src":"3872:280:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1298,"nodeType":"Block","src":"4283:324:6","statements":[{"expression":{"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1265,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"4293:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1266,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"4302:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":1267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4311:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"4302:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4293:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1270,"nodeType":"ExpressionStatement","src":"4293:22:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1272,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"4346:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1273,"name":"reverseTransactionSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"4356:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4346:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742066756e6420696e2074686520706f6f6c","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4394:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899","typeString":"literal_string \"Insufficient fund in the pool\""},"value":"Insufficient fund in the pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899","typeString":"literal_string \"Insufficient fund in the pool\""}],"id":1271,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4325:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:110:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1277,"nodeType":"ExpressionStatement","src":"4325:110:6"},{"expression":{"arguments":[{"id":1281,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"4474:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1278,"name":"fraudulentUserAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"4445:23:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4469:4:6","memberName":"push","nodeType":"MemberAccess","src":"4445:28:6","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4445:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1283,"nodeType":"ExpressionStatement","src":"4445:36:6"},{"expression":{"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1284,"name":"fraudulentUserCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"4491:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4514:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4491:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1287,"nodeType":"ExpressionStatement","src":"4491:24:6"},{"expression":{"arguments":[{"expression":{"id":1289,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4541:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4545:6:6","memberName":"sender","nodeType":"MemberAccess","src":"4541:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1291,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"4553:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1288,"name":"reverseTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"4525:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4525:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1293,"nodeType":"ExpressionStatement","src":"4525:35:6"},{"expression":{"arguments":[{"id":1295,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"4593:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1294,"name":"restrictAccountAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"4571:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4571:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1297,"nodeType":"ExpressionStatement","src":"4571:29:6"}]},"functionSelector":"8d1aadbf","id":1299,"implemented":true,"kind":"function","modifiers":[{"id":1263,"kind":"modifierInvocation","modifierName":{"id":1262,"name":"notFrozen","nameLocations":["4273:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":1000,"src":"4273:9:6"},"nodeType":"ModifierInvocation","src":"4273:9:6"}],"name":"reportForReverse","nameLocation":"4217:16:6","nodeType":"FunctionDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"target","nameLocation":"4242:6:6","nodeType":"VariableDeclaration","scope":1299,"src":"4234:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1257,"name":"address","nodeType":"ElementaryTypeName","src":"4234:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"amount","nameLocation":"4258:6:6","nodeType":"VariableDeclaration","scope":1299,"src":"4250:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"4250:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4233:32:6"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[],"src":"4283:0:6"},"scope":1495,"src":"4208:399:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1321,"nodeType":"Block","src":"4718:224:6","statements":[{"assignments":[1305],"declarations":[{"constant":false,"id":1305,"mutability":"mutable","name":"reportCount","nameLocation":"4801:11:6","nodeType":"VariableDeclaration","scope":1321,"src":"4793:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"4793:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1309,"initialValue":{"arguments":[{"id":1307,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"4844:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1306,"name":"getFraudulentUserReportCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"4815:28:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4815:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4793:58:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1310,"name":"reportCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"4865:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"33","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4880:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"4865:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1320,"nodeType":"IfStatement","src":"4861:75:6","trueBody":{"id":1319,"nodeType":"Block","src":"4883:53:6","statements":[{"expression":{"arguments":[{"id":1316,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"4918:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1313,"name":"frozenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"4897:15:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4913:4:6","memberName":"push","nodeType":"MemberAccess","src":"4897:20:6","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1318,"nodeType":"ExpressionStatement","src":"4897:28:6"}]}}]},"functionSelector":"90aaafb3","id":1322,"implemented":true,"kind":"function","modifiers":[],"name":"restrictAccountAccess","nameLocation":"4673:21:6","nodeType":"FunctionDefinition","parameters":{"id":1302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1301,"mutability":"mutable","name":"target","nameLocation":"4703:6:6","nodeType":"VariableDeclaration","scope":1322,"src":"4695:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1300,"name":"address","nodeType":"ElementaryTypeName","src":"4695:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4694:16:6"},"returnParameters":{"id":1303,"nodeType":"ParameterList","parameters":[],"src":"4718:0:6"},"scope":1495,"src":"4664:278:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1353,"nodeType":"Block","src":"5063:209:6","statements":[{"body":{"id":1349,"nodeType":"Block","src":"5134:110:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1340,"name":"fraudulentUserAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"5152:23:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1342,"indexExpression":{"id":1341,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"5176:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5152:26:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1343,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"5182:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5152:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1348,"nodeType":"IfStatement","src":"5148:86:6","trueBody":{"id":1347,"nodeType":"Block","src":"5190:44:6","statements":[{"expression":{"hexValue":"74727565","id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5215:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1328,"id":1346,"nodeType":"Return","src":"5208:11:6"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1333,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"5093:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1334,"name":"fraudulentUserAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"5097:23:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5121:6:6","memberName":"length","nodeType":"MemberAccess","src":"5097:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5093:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1350,"initializationExpression":{"assignments":[1330],"declarations":[{"constant":false,"id":1330,"mutability":"mutable","name":"i","nameLocation":"5086:1:6","nodeType":"VariableDeclaration","scope":1350,"src":"5078:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1332,"initialValue":{"hexValue":"30","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5090:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5078:13:6"},"loopExpression":{"expression":{"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5129:3:6","subExpression":{"id":1337,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"5129:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1339,"nodeType":"ExpressionStatement","src":"5129:3:6"},"nodeType":"ForStatement","src":"5073:171:6"},{"expression":{"hexValue":"66616c7365","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5260:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1328,"id":1352,"nodeType":"Return","src":"5253:12:6"}]},"functionSelector":"19a3c68d","id":1354,"implemented":true,"kind":"function","modifiers":[],"name":"isFraudulentUser","nameLocation":"5003:16:6","nodeType":"FunctionDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1324,"mutability":"mutable","name":"target","nameLocation":"5028:6:6","nodeType":"VariableDeclaration","scope":1354,"src":"5020:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1323,"name":"address","nodeType":"ElementaryTypeName","src":"5020:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5019:16:6"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1354,"src":"5057:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1326,"name":"bool","nodeType":"ElementaryTypeName","src":"5057:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5056:6:6"},"scope":1495,"src":"4994:278:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1362,"nodeType":"Block","src":"5389:47:6","statements":[{"expression":{"id":1360,"name":"fraudulentUserAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"5406:23:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":1359,"id":1361,"nodeType":"Return","src":"5399:30:6"}]},"functionSelector":"1e36aa63","id":1363,"implemented":true,"kind":"function","modifiers":[],"name":"getAllFraudulentUsers","nameLocation":"5326:21:6","nodeType":"FunctionDefinition","parameters":{"id":1355,"nodeType":"ParameterList","parameters":[],"src":"5347:2:6"},"returnParameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1363,"src":"5371:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1356,"name":"address","nodeType":"ElementaryTypeName","src":"5371:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1357,"nodeType":"ArrayTypeName","src":"5371:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"5370:18:6"},"scope":1495,"src":"5317:119:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1371,"nodeType":"Block","src":"5510:39:6","statements":[{"expression":{"id":1369,"name":"frozenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"5527:15:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":1368,"id":1370,"nodeType":"Return","src":"5520:22:6"}]},"functionSelector":"2e9c3d94","id":1372,"implemented":true,"kind":"function","modifiers":[],"name":"getAllFrozenUsers","nameLocation":"5451:17:6","nodeType":"FunctionDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[],"src":"5468:2:6"},"returnParameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1372,"src":"5492:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"5492:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1366,"nodeType":"ArrayTypeName","src":"5492:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"5491:18:6"},"scope":1495,"src":"5442:107:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1408,"nodeType":"Block","src":"5704:232:6","statements":[{"assignments":[1380],"declarations":[{"constant":false,"id":1380,"mutability":"mutable","name":"count","nameLocation":"5722:5:6","nodeType":"VariableDeclaration","scope":1408,"src":"5714:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1379,"name":"uint256","nodeType":"ElementaryTypeName","src":"5714:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1382,"initialValue":{"hexValue":"30","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5730:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5714:17:6"},{"body":{"id":1404,"nodeType":"Block","src":"5802:106:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1394,"name":"fraudulentUserAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"5820:23:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1396,"indexExpression":{"id":1395,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"5844:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5820:26:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1397,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"5850:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5820:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1403,"nodeType":"IfStatement","src":"5816:82:6","trueBody":{"id":1402,"nodeType":"Block","src":"5858:40:6","statements":[{"expression":{"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5876:7:6","subExpression":{"id":1399,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"5876:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1401,"nodeType":"ExpressionStatement","src":"5876:7:6"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1387,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"5761:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1388,"name":"fraudulentUserAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"5765:23:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5789:6:6","memberName":"length","nodeType":"MemberAccess","src":"5765:30:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5761:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1405,"initializationExpression":{"assignments":[1384],"declarations":[{"constant":false,"id":1384,"mutability":"mutable","name":"i","nameLocation":"5754:1:6","nodeType":"VariableDeclaration","scope":1405,"src":"5746:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1386,"initialValue":{"hexValue":"30","id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5758:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5746:13:6"},"loopExpression":{"expression":{"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5797:3:6","subExpression":{"id":1391,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"5797:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1393,"nodeType":"ExpressionStatement","src":"5797:3:6"},"nodeType":"ForStatement","src":"5741:167:6"},{"expression":{"id":1406,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"5924:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1378,"id":1407,"nodeType":"Return","src":"5917:12:6"}]},"functionSelector":"dcf6ea88","id":1409,"implemented":true,"kind":"function","modifiers":[],"name":"getFraudulentUserReportCount","nameLocation":"5615:28:6","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"target","nameLocation":"5661:6:6","nodeType":"VariableDeclaration","scope":1409,"src":"5653:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"5653:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5643:30:6"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1409,"src":"5695:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"5695:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5694:9:6"},"scope":1495,"src":"5606:330:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1435,"nodeType":"Block","src":"6026:162:6","statements":[{"expression":{"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1414,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"6036:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1415,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"6045:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6054:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"6045:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6036:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1419,"nodeType":"ExpressionStatement","src":"6036:22:6"},{"expression":{"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1420,"name":"marketSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"6068:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1421,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"6084:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6068:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1423,"nodeType":"ExpressionStatement","src":"6068:22:6"},{"expression":{"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1424,"name":"reverseTransactionSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"6100:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1425,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"6128:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6100:34:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1427,"nodeType":"ExpressionStatement","src":"6100:34:6"},{"expression":{"arguments":[{"expression":{"id":1429,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6154:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6158:6:6","memberName":"sender","nodeType":"MemberAccess","src":"6154:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1431,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"6166:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1432,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"6174:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1428,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6144:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6144:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1434,"nodeType":"ExpressionStatement","src":"6144:37:6"}]},"functionSelector":"bada6e23","id":1436,"implemented":true,"kind":"function","modifiers":[],"name":"addToReversePool","nameLocation":"5986:16:6","nodeType":"FunctionDefinition","parameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1411,"mutability":"mutable","name":"amount","nameLocation":"6011:6:6","nodeType":"VariableDeclaration","scope":1436,"src":"6003:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1410,"name":"uint256","nodeType":"ElementaryTypeName","src":"6003:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6002:16:6"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[],"src":"6026:0:6"},"scope":1495,"src":"5977:211:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1475,"nodeType":"Block","src":"6376:343:6","statements":[{"expression":{"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1447,"name":"transactionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"6386:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6406:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6386:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1450,"nodeType":"ExpressionStatement","src":"6386:21:6"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1455,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6488:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6492:6:6","memberName":"sender","nodeType":"MemberAccess","src":"6488:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1457,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"6516:9:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1458,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"6543:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1459,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"6567:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":1460,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6592:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6598:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"6592:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1454,"name":"TransactionDetail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"6453:17:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TransactionDetail_$947_storage_ptr_$","typeString":"type(struct FoterreToken.TransactionDetail storage pointer)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6453:168:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TransactionDetail_$947_memory_ptr","typeString":"struct FoterreToken.TransactionDetail memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TransactionDetail_$947_memory_ptr","typeString":"struct FoterreToken.TransactionDetail memory"}],"expression":{"id":1451,"name":"transactionStruct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"6417:17:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransactionDetail_$947_storage_$dyn_storage","typeString":"struct FoterreToken.TransactionDetail storage ref[] storage ref"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6435:4:6","memberName":"push","nodeType":"MemberAccess","src":"6417:22:6","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_TransactionDetail_$947_storage_$dyn_storage_ptr_$_t_struct$_TransactionDetail_$947_storage_$returns$__$attached_to$_t_array$_t_struct$_TransactionDetail_$947_storage_$dyn_storage_ptr_$","typeString":"function (struct FoterreToken.TransactionDetail storage ref[] storage pointer,struct FoterreToken.TransactionDetail storage ref)"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:214:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1464,"nodeType":"ExpressionStatement","src":"6417:214:6"},{"eventCall":{"arguments":[{"expression":{"id":1466,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6656:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6660:6:6","memberName":"sender","nodeType":"MemberAccess","src":"6656:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1468,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"6668:9:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1469,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"6679:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1470,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"6687:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":1471,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6696:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6702:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"6696:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1465,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[936,663],"referencedDeclaration":936,"src":"6647:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,string memory,uint256)"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6647:65:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1474,"nodeType":"EmitStatement","src":"6642:70:6"}]},"functionSelector":"85805723","id":1476,"implemented":true,"kind":"function","modifiers":[{"id":1445,"kind":"modifierInvocation","modifierName":{"id":1444,"name":"notFrozen","nameLocations":["6366:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":1000,"src":"6366:9:6"},"nodeType":"ModifierInvocation","src":"6366:9:6"}],"name":"deployToBlockchain","nameLocation":"6247:18:6","nodeType":"FunctionDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"recipient","nameLocation":"6291:9:6","nodeType":"VariableDeclaration","scope":1476,"src":"6275:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1437,"name":"address","nodeType":"ElementaryTypeName","src":"6275:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1440,"mutability":"mutable","name":"amount","nameLocation":"6315:6:6","nodeType":"VariableDeclaration","scope":1476,"src":"6310:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1439,"name":"uint","nodeType":"ElementaryTypeName","src":"6310:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1442,"mutability":"mutable","name":"message","nameLocation":"6345:7:6","nodeType":"VariableDeclaration","scope":1476,"src":"6331:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1441,"name":"string","nodeType":"ElementaryTypeName","src":"6331:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6265:93:6"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[],"src":"6376:0:6"},"scope":1495,"src":"6238:481:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1485,"nodeType":"Block","src":"6832:41:6","statements":[{"expression":{"id":1483,"name":"transactionStruct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"6849:17:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransactionDetail_$947_storage_$dyn_storage","typeString":"struct FoterreToken.TransactionDetail storage ref[] storage ref"}},"functionReturnParameters":1482,"id":1484,"nodeType":"Return","src":"6842:24:6"}]},"functionSelector":"27506f53","id":1486,"implemented":true,"kind":"function","modifiers":[],"name":"getAllTransactions","nameLocation":"6734:18:6","nodeType":"FunctionDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[],"src":"6752:2:6"},"returnParameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1486,"src":"6800:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr","typeString":"struct FoterreToken.TransactionDetail[]"},"typeName":{"baseType":{"id":1479,"nodeType":"UserDefinedTypeName","pathNode":{"id":1478,"name":"TransactionDetail","nameLocations":["6800:17:6"],"nodeType":"IdentifierPath","referencedDeclaration":947,"src":"6800:17:6"},"referencedDeclaration":947,"src":"6800:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_TransactionDetail_$947_storage_ptr","typeString":"struct FoterreToken.TransactionDetail"}},"id":1480,"nodeType":"ArrayTypeName","src":"6800:19:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransactionDetail_$947_storage_$dyn_storage_ptr","typeString":"struct FoterreToken.TransactionDetail[]"}},"visibility":"internal"}],"src":"6799:28:6"},"scope":1495,"src":"6725:148:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1493,"nodeType":"Block","src":"6940:40:6","statements":[{"expression":{"id":1491,"name":"transactionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"6957:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1490,"id":1492,"nodeType":"Return","src":"6950:23:6"}]},"functionSelector":"2e7700f0","id":1494,"implemented":true,"kind":"function","modifiers":[],"name":"getTransactionCount","nameLocation":"6888:19:6","nodeType":"FunctionDefinition","parameters":{"id":1487,"nodeType":"ParameterList","parameters":[],"src":"6907:2:6"},"returnParameters":{"id":1490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1494,"src":"6931:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"6931:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6930:9:6"},"scope":1495,"src":"6879:101:6","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1496,"src":"285:6697:6","usedErrors":[11,16,21,30,35,40,745,750,896],"usedEvents":[663,672,914,936]}],"src":"33:6950:6"},"id":6}},"contracts":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":159,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":165,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":167,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":169,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":171,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol":{"ERC20Capped":{"abi":[{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededCap","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20InvalidCap","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Extension of {ERC20} that adds a cap to the supply of tokens.","errors":{"ERC20ExceededCap(uint256,uint256)":[{"details":"Total supply cap has been exceeded."}],"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidCap(uint256)":[{"details":"The supplied cap is not a valid cap."}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"cap()":{"details":"Returns the cap on the token's total supply."},"constructor":{"details":"Sets the value of the `cap`. This value is immutable, it can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","cap()":"355274ea","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20InvalidCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that adds a cap to the supply of tokens.\",\"errors\":{\"ERC20ExceededCap(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidCap(uint256)\":[{\"details\":\"The supplied cap is not a valid cap.\"}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"constructor\":{\"details\":\"Sets the value of the `cap`. This value is immutable, it can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":\"ERC20Capped\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Capped.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC20} from \\\"../ERC20.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\\n */\\nabstract contract ERC20Capped is ERC20 {\\n    uint256 private immutable _cap;\\n\\n    /**\\n     * @dev Total supply cap has been exceeded.\\n     */\\n    error ERC20ExceededCap(uint256 increasedSupply, uint256 cap);\\n\\n    /**\\n     * @dev The supplied cap is not a valid cap.\\n     */\\n    error ERC20InvalidCap(uint256 cap);\\n\\n    /**\\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\\n     * set once during construction.\\n     */\\n    constructor(uint256 cap_) {\\n        if (cap_ == 0) {\\n            revert ERC20InvalidCap(0);\\n        }\\n        _cap = cap_;\\n    }\\n\\n    /**\\n     * @dev Returns the cap on the token's total supply.\\n     */\\n    function cap() public view virtual returns (uint256) {\\n        return _cap;\\n    }\\n\\n    /**\\n     * @dev See {ERC20-_update}.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual override {\\n        super._update(from, to, value);\\n\\n        if (from == address(0)) {\\n            uint256 maxSupply = cap();\\n            uint256 supply = totalSupply();\\n            if (supply > maxSupply) {\\n                revert ERC20ExceededCap(supply, maxSupply);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9a961321311c070327b31fba89d821346225a411f946c9e84b330afdfdbb1d60\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":159,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":165,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":167,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":169,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":171,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/FoterreToken.sol":{"FoterreToken":{"abi":[{"inputs":[{"internalType":"uint256","name":"max_supply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededCap","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20InvalidCap","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"string","name":"message","type":"string"}],"name":"restrictAccess","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"string","name":"message","type":"string"}],"name":"AccountFrozenEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"message","type":"string"},{"indexed":false,"internalType":"uint256","name":"datetime","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"_owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"addToReversePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"name":"deployToBlockchain","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"fraudulentUserAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"frozenAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllFraudulentUsers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllFrozenUsers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllTransactions","outputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"message","type":"string"},{"internalType":"uint256","name":"datetime","type":"uint256"}],"internalType":"struct FoterreToken.TransactionDetail[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"getFraudulentUserReportCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTransactionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"isFraudulentUser","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"marketSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ownerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"reportForReverse","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"restrictAccountAccess","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"reverseTransactionSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"userDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"userWithdrawal","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC20ExceededCap(uint256,uint256)":[{"details":"Total supply cap has been exceeded."}],"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidCap(uint256)":[{"details":"The supplied cap is not a valid cap."}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"cap()":{"details":"Returns the cap on the token's total supply."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1050":{"entryPoint":null,"id":1050,"parameterSlots":1,"returnSlots":0},"@_188":{"entryPoint":null,"id":188,"parameterSlots":2,"returnSlots":0},"@_770":{"entryPoint":null,"id":770,"parameterSlots":1,"returnSlots":0},"@_mint_491":{"entryPoint":455,"id":491,"parameterSlots":2,"returnSlots":0},"@_update_458":{"entryPoint":790,"id":458,"parameterSlots":3,"returnSlots":0},"@_update_827":{"entryPoint":596,"id":827,"parameterSlots":3,"returnSlots":0},"@cap_779":{"entryPoint":1350,"id":779,"parameterSlots":0,"returnSlots":1},"@totalSupply_224":{"entryPoint":1360,"id":224,"parameterSlots":0,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1411,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":1434,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2609,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack":{"entryPoint":2511,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2655,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2626,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2776,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed":{"entryPoint":2528,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2837,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2672,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1764,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1606,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2717,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1531,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2075,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2589,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_0_by_1":{"entryPoint":2461,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2557,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1375,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2036,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_rational_0_by_1_to_t_uint256":{"entryPoint":2471,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":1910,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2230,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1785,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1711,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2200,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1900,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2168,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1484,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1664,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1617,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1950,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1370,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":1801,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2155,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2008,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1814,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1960,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1385,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2003,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9367:7","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:7","statements":[{"nodeType":"YulAssignment","src":"57:19:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:7","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:7"},"nodeType":"YulFunctionCall","src":"67:9:7"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:7"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:7","type":""}],"src":"7:75:7"},{"body":{"nodeType":"YulBlock","src":"177:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:7"},"nodeType":"YulFunctionCall","src":"187:12:7"},"nodeType":"YulExpressionStatement","src":"187:12:7"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:7"},{"body":{"nodeType":"YulBlock","src":"300:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:7"},"nodeType":"YulFunctionCall","src":"310:12:7"},"nodeType":"YulExpressionStatement","src":"310:12:7"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:7"},{"body":{"nodeType":"YulBlock","src":"379:32:7","statements":[{"nodeType":"YulAssignment","src":"389:16:7","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:7"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:7","type":""}],"src":"334:77:7"},{"body":{"nodeType":"YulBlock","src":"460:79:7","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:7"},"nodeType":"YulFunctionCall","src":"519:12:7"},"nodeType":"YulExpressionStatement","src":"519:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:7"},"nodeType":"YulFunctionCall","src":"490:24:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:7"},"nodeType":"YulFunctionCall","src":"480:35:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:7"},"nodeType":"YulFunctionCall","src":"473:43:7"},"nodeType":"YulIf","src":"470:63:7"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:7","type":""}],"src":"417:122:7"},{"body":{"nodeType":"YulBlock","src":"608:80:7","statements":[{"nodeType":"YulAssignment","src":"618:22:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"633:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"627:5:7"},"nodeType":"YulFunctionCall","src":"627:13:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"618:5:7"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:7"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"649:26:7"},"nodeType":"YulFunctionCall","src":"649:33:7"},"nodeType":"YulExpressionStatement","src":"649:33:7"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"586:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"594:3:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"602:5:7","type":""}],"src":"545:143:7"},{"body":{"nodeType":"YulBlock","src":"771:274:7","statements":[{"body":{"nodeType":"YulBlock","src":"817:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"819:77:7"},"nodeType":"YulFunctionCall","src":"819:79:7"},"nodeType":"YulExpressionStatement","src":"819:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"792:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"801:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"788:3:7"},"nodeType":"YulFunctionCall","src":"788:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"813:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"784:3:7"},"nodeType":"YulFunctionCall","src":"784:32:7"},"nodeType":"YulIf","src":"781:119:7"},{"nodeType":"YulBlock","src":"910:128:7","statements":[{"nodeType":"YulVariableDeclaration","src":"925:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"939:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"929:6:7","type":""}]},{"nodeType":"YulAssignment","src":"954:74:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1000:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"1011:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"996:3:7"},"nodeType":"YulFunctionCall","src":"996:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1020:7:7"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"964:31:7"},"nodeType":"YulFunctionCall","src":"964:64:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"954:6:7"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"741:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"752:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"764:6:7","type":""}],"src":"694:351:7"},{"body":{"nodeType":"YulBlock","src":"1079:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1096:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1099:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1089:6:7"},"nodeType":"YulFunctionCall","src":"1089:88:7"},"nodeType":"YulExpressionStatement","src":"1089:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1193:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1196:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1186:6:7"},"nodeType":"YulFunctionCall","src":"1186:15:7"},"nodeType":"YulExpressionStatement","src":"1186:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1217:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1220:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1210:6:7"},"nodeType":"YulFunctionCall","src":"1210:15:7"},"nodeType":"YulExpressionStatement","src":"1210:15:7"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"1051:180:7"},{"body":{"nodeType":"YulBlock","src":"1285:362:7","statements":[{"nodeType":"YulAssignment","src":"1295:25:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1318:1:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1300:17:7"},"nodeType":"YulFunctionCall","src":"1300:20:7"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"1295:1:7"}]},{"nodeType":"YulAssignment","src":"1329:25:7","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"1352:1:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1334:17:7"},"nodeType":"YulFunctionCall","src":"1334:20:7"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"1329:1:7"}]},{"nodeType":"YulVariableDeclaration","src":"1363:28:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1386:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"1389:1:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1382:3:7"},"nodeType":"YulFunctionCall","src":"1382:9:7"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"1367:11:7","type":""}]},{"nodeType":"YulAssignment","src":"1400:41:7","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"1429:11:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1411:17:7"},"nodeType":"YulFunctionCall","src":"1411:30:7"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"1400:7:7"}]},{"body":{"nodeType":"YulBlock","src":"1618:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1620:16:7"},"nodeType":"YulFunctionCall","src":"1620:18:7"},"nodeType":"YulExpressionStatement","src":"1620:18:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1551:1:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1544:6:7"},"nodeType":"YulFunctionCall","src":"1544:9:7"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"1574:1:7"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"1581:7:7"},{"name":"x","nodeType":"YulIdentifier","src":"1590:1:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1577:3:7"},"nodeType":"YulFunctionCall","src":"1577:15:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1571:2:7"},"nodeType":"YulFunctionCall","src":"1571:22:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1524:2:7"},"nodeType":"YulFunctionCall","src":"1524:83:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1504:6:7"},"nodeType":"YulFunctionCall","src":"1504:113:7"},"nodeType":"YulIf","src":"1501:139:7"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1268:1:7","type":""},{"name":"y","nodeType":"YulTypedName","src":"1271:1:7","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"1277:7:7","type":""}],"src":"1237:410:7"},{"body":{"nodeType":"YulBlock","src":"1712:40:7","statements":[{"nodeType":"YulAssignment","src":"1723:22:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1739:5:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1733:5:7"},"nodeType":"YulFunctionCall","src":"1733:12:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1723:6:7"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1695:5:7","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1705:6:7","type":""}],"src":"1653:99:7"},{"body":{"nodeType":"YulBlock","src":"1786:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1803:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1806:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1796:6:7"},"nodeType":"YulFunctionCall","src":"1796:88:7"},"nodeType":"YulExpressionStatement","src":"1796:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1900:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1903:4:7","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1893:6:7"},"nodeType":"YulFunctionCall","src":"1893:15:7"},"nodeType":"YulExpressionStatement","src":"1893:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1924:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1927:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1917:6:7"},"nodeType":"YulFunctionCall","src":"1917:15:7"},"nodeType":"YulExpressionStatement","src":"1917:15:7"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1758:180:7"},{"body":{"nodeType":"YulBlock","src":"1972:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1989:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1992:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1982:6:7"},"nodeType":"YulFunctionCall","src":"1982:88:7"},"nodeType":"YulExpressionStatement","src":"1982:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2086:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2089:4:7","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2079:6:7"},"nodeType":"YulFunctionCall","src":"2079:15:7"},"nodeType":"YulExpressionStatement","src":"2079:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2110:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2113:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2103:6:7"},"nodeType":"YulFunctionCall","src":"2103:15:7"},"nodeType":"YulExpressionStatement","src":"2103:15:7"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1944:180:7"},{"body":{"nodeType":"YulBlock","src":"2181:269:7","statements":[{"nodeType":"YulAssignment","src":"2191:22:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2205:4:7"},{"kind":"number","nodeType":"YulLiteral","src":"2211:1:7","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2201:3:7"},"nodeType":"YulFunctionCall","src":"2201:12:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2191:6:7"}]},{"nodeType":"YulVariableDeclaration","src":"2222:38:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2252:4:7"},{"kind":"number","nodeType":"YulLiteral","src":"2258:1:7","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2248:3:7"},"nodeType":"YulFunctionCall","src":"2248:12:7"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2226:18:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"2299:51:7","statements":[{"nodeType":"YulAssignment","src":"2313:27:7","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2327:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"2335:4:7","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2323:3:7"},"nodeType":"YulFunctionCall","src":"2323:17:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2313:6:7"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2279:18:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2272:6:7"},"nodeType":"YulFunctionCall","src":"2272:26:7"},"nodeType":"YulIf","src":"2269:81:7"},{"body":{"nodeType":"YulBlock","src":"2402:42:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2416:16:7"},"nodeType":"YulFunctionCall","src":"2416:18:7"},"nodeType":"YulExpressionStatement","src":"2416:18:7"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2366:18:7"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2389:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"2397:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2386:2:7"},"nodeType":"YulFunctionCall","src":"2386:14:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2363:2:7"},"nodeType":"YulFunctionCall","src":"2363:38:7"},"nodeType":"YulIf","src":"2360:84:7"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2165:4:7","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2174:6:7","type":""}],"src":"2130:320:7"},{"body":{"nodeType":"YulBlock","src":"2510:87:7","statements":[{"nodeType":"YulAssignment","src":"2520:11:7","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2528:3:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2520:4:7"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2548:1:7","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2551:3:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2541:6:7"},"nodeType":"YulFunctionCall","src":"2541:14:7"},"nodeType":"YulExpressionStatement","src":"2541:14:7"},{"nodeType":"YulAssignment","src":"2564:26:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2582:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2585:4:7","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2572:9:7"},"nodeType":"YulFunctionCall","src":"2572:18:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2564:4:7"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2497:3:7","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2505:4:7","type":""}],"src":"2456:141:7"},{"body":{"nodeType":"YulBlock","src":"2647:49:7","statements":[{"nodeType":"YulAssignment","src":"2657:33:7","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2675:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"2682:2:7","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2671:3:7"},"nodeType":"YulFunctionCall","src":"2671:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"2687:2:7","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2667:3:7"},"nodeType":"YulFunctionCall","src":"2667:23:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2657:6:7"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2630:5:7","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2640:6:7","type":""}],"src":"2603:93:7"},{"body":{"nodeType":"YulBlock","src":"2755:54:7","statements":[{"nodeType":"YulAssignment","src":"2765:37:7","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"2790:4:7"},{"name":"value","nodeType":"YulIdentifier","src":"2796:5:7"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2786:3:7"},"nodeType":"YulFunctionCall","src":"2786:16:7"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"2765:8:7"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"2730:4:7","type":""},{"name":"value","nodeType":"YulTypedName","src":"2736:5:7","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2746:8:7","type":""}],"src":"2702:107:7"},{"body":{"nodeType":"YulBlock","src":"2891:317:7","statements":[{"nodeType":"YulVariableDeclaration","src":"2901:35:7","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"2922:10:7"},{"kind":"number","nodeType":"YulLiteral","src":"2934:1:7","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2918:3:7"},"nodeType":"YulFunctionCall","src":"2918:18:7"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"2905:9:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2945:109:7","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2976:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"2987:66:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2957:18:7"},"nodeType":"YulFunctionCall","src":"2957:97:7"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2949:4:7","type":""}]},{"nodeType":"YulAssignment","src":"3063:51:7","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"3094:9:7"},{"name":"toInsert","nodeType":"YulIdentifier","src":"3105:8:7"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"3075:18:7"},"nodeType":"YulFunctionCall","src":"3075:39:7"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"3063:8:7"}]},{"nodeType":"YulAssignment","src":"3123:30:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3136:5:7"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"3147:4:7"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3143:3:7"},"nodeType":"YulFunctionCall","src":"3143:9:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3132:3:7"},"nodeType":"YulFunctionCall","src":"3132:21:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3123:5:7"}]},{"nodeType":"YulAssignment","src":"3162:40:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3175:5:7"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"3186:8:7"},{"name":"mask","nodeType":"YulIdentifier","src":"3196:4:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3182:3:7"},"nodeType":"YulFunctionCall","src":"3182:19:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3172:2:7"},"nodeType":"YulFunctionCall","src":"3172:30:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3162:6:7"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2852:5:7","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"2859:10:7","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"2871:8:7","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2884:6:7","type":""}],"src":"2815:393:7"},{"body":{"nodeType":"YulBlock","src":"3246:28:7","statements":[{"nodeType":"YulAssignment","src":"3256:12:7","value":{"name":"value","nodeType":"YulIdentifier","src":"3263:5:7"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3256:3:7"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3232:5:7","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3242:3:7","type":""}],"src":"3214:60:7"},{"body":{"nodeType":"YulBlock","src":"3340:82:7","statements":[{"nodeType":"YulAssignment","src":"3350:66:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3408:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3390:17:7"},"nodeType":"YulFunctionCall","src":"3390:24:7"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3381:8:7"},"nodeType":"YulFunctionCall","src":"3381:34:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3363:17:7"},"nodeType":"YulFunctionCall","src":"3363:53:7"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3350:9:7"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3320:5:7","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3330:9:7","type":""}],"src":"3280:142:7"},{"body":{"nodeType":"YulBlock","src":"3475:28:7","statements":[{"nodeType":"YulAssignment","src":"3485:12:7","value":{"name":"value","nodeType":"YulIdentifier","src":"3492:5:7"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3485:3:7"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3461:5:7","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3471:3:7","type":""}],"src":"3428:75:7"},{"body":{"nodeType":"YulBlock","src":"3585:193:7","statements":[{"nodeType":"YulVariableDeclaration","src":"3595:63:7","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"3650:7:7"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3619:30:7"},"nodeType":"YulFunctionCall","src":"3619:39:7"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"3599:16:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3674:4:7"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3714:4:7"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3708:5:7"},"nodeType":"YulFunctionCall","src":"3708:11:7"},{"name":"offset","nodeType":"YulIdentifier","src":"3721:6:7"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"3753:16:7"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"3729:23:7"},"nodeType":"YulFunctionCall","src":"3729:41:7"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"3680:27:7"},"nodeType":"YulFunctionCall","src":"3680:91:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3667:6:7"},"nodeType":"YulFunctionCall","src":"3667:105:7"},"nodeType":"YulExpressionStatement","src":"3667:105:7"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3562:4:7","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3568:6:7","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"3576:7:7","type":""}],"src":"3509:269:7"},{"body":{"nodeType":"YulBlock","src":"3833:24:7","statements":[{"nodeType":"YulAssignment","src":"3843:8:7","value":{"kind":"number","nodeType":"YulLiteral","src":"3850:1:7","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3843:3:7"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3829:3:7","type":""}],"src":"3784:73:7"},{"body":{"nodeType":"YulBlock","src":"3916:136:7","statements":[{"nodeType":"YulVariableDeclaration","src":"3926:46:7","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"3940:30:7"},"nodeType":"YulFunctionCall","src":"3940:32:7"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"3930:6:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4025:4:7"},{"name":"offset","nodeType":"YulIdentifier","src":"4031:6:7"},{"name":"zero_0","nodeType":"YulIdentifier","src":"4039:6:7"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3981:43:7"},"nodeType":"YulFunctionCall","src":"3981:65:7"},"nodeType":"YulExpressionStatement","src":"3981:65:7"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3902:4:7","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3908:6:7","type":""}],"src":"3863:189:7"},{"body":{"nodeType":"YulBlock","src":"4108:136:7","statements":[{"body":{"nodeType":"YulBlock","src":"4175:63:7","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4219:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"4226:1:7","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"4189:29:7"},"nodeType":"YulFunctionCall","src":"4189:39:7"},"nodeType":"YulExpressionStatement","src":"4189:39:7"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4128:5:7"},{"name":"end","nodeType":"YulIdentifier","src":"4135:3:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4125:2:7"},"nodeType":"YulFunctionCall","src":"4125:14:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4140:26:7","statements":[{"nodeType":"YulAssignment","src":"4142:22:7","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4155:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"4162:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4151:3:7"},"nodeType":"YulFunctionCall","src":"4151:13:7"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"4142:5:7"}]}]},"pre":{"nodeType":"YulBlock","src":"4122:2:7","statements":[]},"src":"4118:120:7"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"4096:5:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"4103:3:7","type":""}],"src":"4058:186:7"},{"body":{"nodeType":"YulBlock","src":"4329:464:7","statements":[{"body":{"nodeType":"YulBlock","src":"4355:431:7","statements":[{"nodeType":"YulVariableDeclaration","src":"4369:54:7","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4417:5:7"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4385:31:7"},"nodeType":"YulFunctionCall","src":"4385:38:7"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"4373:8:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4436:63:7","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4459:8:7"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4487:10:7"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4469:17:7"},"nodeType":"YulFunctionCall","src":"4469:29:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4455:3:7"},"nodeType":"YulFunctionCall","src":"4455:44:7"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"4440:11:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"4656:27:7","statements":[{"nodeType":"YulAssignment","src":"4658:23:7","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"4673:8:7"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4658:11:7"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4640:10:7"},{"kind":"number","nodeType":"YulLiteral","src":"4652:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4637:2:7"},"nodeType":"YulFunctionCall","src":"4637:18:7"},"nodeType":"YulIf","src":"4634:49:7"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4725:11:7"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4742:8:7"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4770:3:7"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4752:17:7"},"nodeType":"YulFunctionCall","src":"4752:22:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4738:3:7"},"nodeType":"YulFunctionCall","src":"4738:37:7"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"4696:28:7"},"nodeType":"YulFunctionCall","src":"4696:80:7"},"nodeType":"YulExpressionStatement","src":"4696:80:7"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4346:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"4351:2:7","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4343:2:7"},"nodeType":"YulFunctionCall","src":"4343:11:7"},"nodeType":"YulIf","src":"4340:446:7"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"4305:5:7","type":""},{"name":"len","nodeType":"YulTypedName","src":"4312:3:7","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"4317:10:7","type":""}],"src":"4250:543:7"},{"body":{"nodeType":"YulBlock","src":"4862:54:7","statements":[{"nodeType":"YulAssignment","src":"4872:37:7","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4897:4:7"},{"name":"value","nodeType":"YulIdentifier","src":"4903:5:7"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4893:3:7"},"nodeType":"YulFunctionCall","src":"4893:16:7"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4872:8:7"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4837:4:7","type":""},{"name":"value","nodeType":"YulTypedName","src":"4843:5:7","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4853:8:7","type":""}],"src":"4799:117:7"},{"body":{"nodeType":"YulBlock","src":"4973:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"4983:68:7","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5032:1:7","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"5035:5:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5028:3:7"},"nodeType":"YulFunctionCall","src":"5028:13:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5047:1:7","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5043:3:7"},"nodeType":"YulFunctionCall","src":"5043:6:7"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4999:28:7"},"nodeType":"YulFunctionCall","src":"4999:51:7"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4995:3:7"},"nodeType":"YulFunctionCall","src":"4995:56:7"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4987:4:7","type":""}]},{"nodeType":"YulAssignment","src":"5060:25:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5074:4:7"},{"name":"mask","nodeType":"YulIdentifier","src":"5080:4:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5070:3:7"},"nodeType":"YulFunctionCall","src":"5070:15:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5060:6:7"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4950:4:7","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"4956:5:7","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4966:6:7","type":""}],"src":"4922:169:7"},{"body":{"nodeType":"YulBlock","src":"5177:214:7","statements":[{"nodeType":"YulAssignment","src":"5310:37:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5337:4:7"},{"name":"len","nodeType":"YulIdentifier","src":"5343:3:7"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"5318:18:7"},"nodeType":"YulFunctionCall","src":"5318:29:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5310:4:7"}]},{"nodeType":"YulAssignment","src":"5356:29:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5367:4:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5377:1:7","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"5380:3:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5373:3:7"},"nodeType":"YulFunctionCall","src":"5373:11:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5364:2:7"},"nodeType":"YulFunctionCall","src":"5364:21:7"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"5356:4:7"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5158:4:7","type":""},{"name":"len","nodeType":"YulTypedName","src":"5164:3:7","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"5172:4:7","type":""}],"src":"5096:295:7"},{"body":{"nodeType":"YulBlock","src":"5488:1303:7","statements":[{"nodeType":"YulVariableDeclaration","src":"5499:51:7","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5546:3:7"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5513:32:7"},"nodeType":"YulFunctionCall","src":"5513:37:7"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"5503:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"5635:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5637:16:7"},"nodeType":"YulFunctionCall","src":"5637:18:7"},"nodeType":"YulExpressionStatement","src":"5637:18:7"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5607:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"5615:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5604:2:7"},"nodeType":"YulFunctionCall","src":"5604:30:7"},"nodeType":"YulIf","src":"5601:56:7"},{"nodeType":"YulVariableDeclaration","src":"5667:52:7","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5713:4:7"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5707:5:7"},"nodeType":"YulFunctionCall","src":"5707:11:7"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5681:25:7"},"nodeType":"YulFunctionCall","src":"5681:38:7"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"5671:6:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5812:4:7"},{"name":"oldLen","nodeType":"YulIdentifier","src":"5818:6:7"},{"name":"newLen","nodeType":"YulIdentifier","src":"5826:6:7"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"5766:45:7"},"nodeType":"YulFunctionCall","src":"5766:67:7"},"nodeType":"YulExpressionStatement","src":"5766:67:7"},{"nodeType":"YulVariableDeclaration","src":"5843:18:7","value":{"kind":"number","nodeType":"YulLiteral","src":"5860:1:7","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"5847:9:7","type":""}]},{"nodeType":"YulAssignment","src":"5871:17:7","value":{"kind":"number","nodeType":"YulLiteral","src":"5884:4:7","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5871:9:7"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5935:611:7","statements":[{"nodeType":"YulVariableDeclaration","src":"5949:37:7","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5968:6:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5980:4:7","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5976:3:7"},"nodeType":"YulFunctionCall","src":"5976:9:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5964:3:7"},"nodeType":"YulFunctionCall","src":"5964:22:7"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"5953:7:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6000:51:7","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6046:4:7"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6014:31:7"},"nodeType":"YulFunctionCall","src":"6014:37:7"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"6004:6:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6064:10:7","value":{"kind":"number","nodeType":"YulLiteral","src":"6073:1:7","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6068:1:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"6132:163:7","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6157:6:7"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6175:3:7"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6180:9:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6171:3:7"},"nodeType":"YulFunctionCall","src":"6171:19:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6165:5:7"},"nodeType":"YulFunctionCall","src":"6165:26:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6150:6:7"},"nodeType":"YulFunctionCall","src":"6150:42:7"},"nodeType":"YulExpressionStatement","src":"6150:42:7"},{"nodeType":"YulAssignment","src":"6209:24:7","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6223:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"6231:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6219:3:7"},"nodeType":"YulFunctionCall","src":"6219:14:7"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6209:6:7"}]},{"nodeType":"YulAssignment","src":"6250:31:7","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6267:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"6278:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6263:3:7"},"nodeType":"YulFunctionCall","src":"6263:18:7"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6250:9:7"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6098:1:7"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"6101:7:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6095:2:7"},"nodeType":"YulFunctionCall","src":"6095:14:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6110:21:7","statements":[{"nodeType":"YulAssignment","src":"6112:17:7","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6121:1:7"},{"kind":"number","nodeType":"YulLiteral","src":"6124:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6117:3:7"},"nodeType":"YulFunctionCall","src":"6117:12:7"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6112:1:7"}]}]},"pre":{"nodeType":"YulBlock","src":"6091:3:7","statements":[]},"src":"6087:208:7"},{"body":{"nodeType":"YulBlock","src":"6331:156:7","statements":[{"nodeType":"YulVariableDeclaration","src":"6349:43:7","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6376:3:7"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6381:9:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6372:3:7"},"nodeType":"YulFunctionCall","src":"6372:19:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6366:5:7"},"nodeType":"YulFunctionCall","src":"6366:26:7"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"6353:9:7","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6416:6:7"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"6443:9:7"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6458:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"6466:4:7","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6454:3:7"},"nodeType":"YulFunctionCall","src":"6454:17:7"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6424:18:7"},"nodeType":"YulFunctionCall","src":"6424:48:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6409:6:7"},"nodeType":"YulFunctionCall","src":"6409:64:7"},"nodeType":"YulExpressionStatement","src":"6409:64:7"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"6314:7:7"},{"name":"newLen","nodeType":"YulIdentifier","src":"6323:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6311:2:7"},"nodeType":"YulFunctionCall","src":"6311:19:7"},"nodeType":"YulIf","src":"6308:179:7"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6507:4:7"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6521:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"6529:1:7","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6517:3:7"},"nodeType":"YulFunctionCall","src":"6517:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"6533:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6513:3:7"},"nodeType":"YulFunctionCall","src":"6513:22:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6500:6:7"},"nodeType":"YulFunctionCall","src":"6500:36:7"},"nodeType":"YulExpressionStatement","src":"6500:36:7"}]},"nodeType":"YulCase","src":"5928:618:7","value":{"kind":"number","nodeType":"YulLiteral","src":"5933:1:7","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6563:222:7","statements":[{"nodeType":"YulVariableDeclaration","src":"6577:14:7","value":{"kind":"number","nodeType":"YulLiteral","src":"6590:1:7","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6581:5:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"6614:67:7","statements":[{"nodeType":"YulAssignment","src":"6632:35:7","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6651:3:7"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6656:9:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6647:3:7"},"nodeType":"YulFunctionCall","src":"6647:19:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6641:5:7"},"nodeType":"YulFunctionCall","src":"6641:26:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6632:5:7"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6607:6:7"},"nodeType":"YulIf","src":"6604:77:7"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6701:4:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6760:5:7"},{"name":"newLen","nodeType":"YulIdentifier","src":"6767:6:7"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"6707:52:7"},"nodeType":"YulFunctionCall","src":"6707:67:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6694:6:7"},"nodeType":"YulFunctionCall","src":"6694:81:7"},"nodeType":"YulExpressionStatement","src":"6694:81:7"}]},"nodeType":"YulCase","src":"6555:230:7","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5908:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"5916:2:7","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5905:2:7"},"nodeType":"YulFunctionCall","src":"5905:14:7"},"nodeType":"YulSwitch","src":"5898:887:7"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5477:4:7","type":""},{"name":"src","nodeType":"YulTypedName","src":"5483:3:7","type":""}],"src":"5396:1395:7"},{"body":{"nodeType":"YulBlock","src":"6850:32:7","statements":[{"nodeType":"YulAssignment","src":"6860:16:7","value":{"name":"value","nodeType":"YulIdentifier","src":"6871:5:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6860:7:7"}]}]},"name":"cleanup_t_rational_0_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6832:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6842:7:7","type":""}],"src":"6797:85:7"},{"body":{"nodeType":"YulBlock","src":"6956:90:7","statements":[{"nodeType":"YulAssignment","src":"6966:74:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7032:5:7"}],"functionName":{"name":"cleanup_t_rational_0_by_1","nodeType":"YulIdentifier","src":"7006:25:7"},"nodeType":"YulFunctionCall","src":"7006:32:7"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"6997:8:7"},"nodeType":"YulFunctionCall","src":"6997:42:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6979:17:7"},"nodeType":"YulFunctionCall","src":"6979:61:7"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"6966:9:7"}]}]},"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6936:5:7","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"6946:9:7","type":""}],"src":"6888:158:7"},{"body":{"nodeType":"YulBlock","src":"7125:74:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7142:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7186:5:7"}],"functionName":{"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"7147:38:7"},"nodeType":"YulFunctionCall","src":"7147:45:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7135:6:7"},"nodeType":"YulFunctionCall","src":"7135:58:7"},"nodeType":"YulExpressionStatement","src":"7135:58:7"}]},"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7113:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7120:3:7","type":""}],"src":"7052:147:7"},{"body":{"nodeType":"YulBlock","src":"7311:132:7","statements":[{"nodeType":"YulAssignment","src":"7321:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7333:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"7344:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7329:3:7"},"nodeType":"YulFunctionCall","src":"7329:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7321:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7409:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7422:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"7433:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7418:3:7"},"nodeType":"YulFunctionCall","src":"7418:17:7"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7357:51:7"},"nodeType":"YulFunctionCall","src":"7357:79:7"},"nodeType":"YulExpressionStatement","src":"7357:79:7"}]},"name":"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7283:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7295:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7306:4:7","type":""}],"src":"7205:238:7"},{"body":{"nodeType":"YulBlock","src":"7494:81:7","statements":[{"nodeType":"YulAssignment","src":"7504:65:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7519:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"7526:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7515:3:7"},"nodeType":"YulFunctionCall","src":"7515:54:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7504:7:7"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7476:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7486:7:7","type":""}],"src":"7449:126:7"},{"body":{"nodeType":"YulBlock","src":"7626:51:7","statements":[{"nodeType":"YulAssignment","src":"7636:35:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7665:5:7"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7647:17:7"},"nodeType":"YulFunctionCall","src":"7647:24:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7636:7:7"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7608:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7618:7:7","type":""}],"src":"7581:96:7"},{"body":{"nodeType":"YulBlock","src":"7748:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7765:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7788:5:7"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7770:17:7"},"nodeType":"YulFunctionCall","src":"7770:24:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7758:6:7"},"nodeType":"YulFunctionCall","src":"7758:37:7"},"nodeType":"YulExpressionStatement","src":"7758:37:7"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7736:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7743:3:7","type":""}],"src":"7683:118:7"},{"body":{"nodeType":"YulBlock","src":"7905:124:7","statements":[{"nodeType":"YulAssignment","src":"7915:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7927:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"7938:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7923:3:7"},"nodeType":"YulFunctionCall","src":"7923:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7915:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7995:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8008:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"8019:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8004:3:7"},"nodeType":"YulFunctionCall","src":"8004:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7951:43:7"},"nodeType":"YulFunctionCall","src":"7951:71:7"},"nodeType":"YulExpressionStatement","src":"7951:71:7"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7877:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7889:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7900:4:7","type":""}],"src":"7807:222:7"},{"body":{"nodeType":"YulBlock","src":"8100:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8117:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8140:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8122:17:7"},"nodeType":"YulFunctionCall","src":"8122:24:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8110:6:7"},"nodeType":"YulFunctionCall","src":"8110:37:7"},"nodeType":"YulExpressionStatement","src":"8110:37:7"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8088:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8095:3:7","type":""}],"src":"8035:118:7"},{"body":{"nodeType":"YulBlock","src":"8285:206:7","statements":[{"nodeType":"YulAssignment","src":"8295:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8307:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"8318:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8303:3:7"},"nodeType":"YulFunctionCall","src":"8303:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8295:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8375:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8388:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"8399:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8384:3:7"},"nodeType":"YulFunctionCall","src":"8384:17:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8331:43:7"},"nodeType":"YulFunctionCall","src":"8331:71:7"},"nodeType":"YulExpressionStatement","src":"8331:71:7"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8456:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8469:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"8480:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8465:3:7"},"nodeType":"YulFunctionCall","src":"8465:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8412:43:7"},"nodeType":"YulFunctionCall","src":"8412:72:7"},"nodeType":"YulExpressionStatement","src":"8412:72:7"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8249:9:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8261:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8269:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8280:4:7","type":""}],"src":"8159:332:7"},{"body":{"nodeType":"YulBlock","src":"8541:147:7","statements":[{"nodeType":"YulAssignment","src":"8551:25:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8574:1:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8556:17:7"},"nodeType":"YulFunctionCall","src":"8556:20:7"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8551:1:7"}]},{"nodeType":"YulAssignment","src":"8585:25:7","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8608:1:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8590:17:7"},"nodeType":"YulFunctionCall","src":"8590:20:7"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8585:1:7"}]},{"nodeType":"YulAssignment","src":"8619:16:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8630:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"8633:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8626:3:7"},"nodeType":"YulFunctionCall","src":"8626:9:7"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"8619:3:7"}]},{"body":{"nodeType":"YulBlock","src":"8659:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8661:16:7"},"nodeType":"YulFunctionCall","src":"8661:18:7"},"nodeType":"YulExpressionStatement","src":"8661:18:7"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8651:1:7"},{"name":"sum","nodeType":"YulIdentifier","src":"8654:3:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8648:2:7"},"nodeType":"YulFunctionCall","src":"8648:10:7"},"nodeType":"YulIf","src":"8645:36:7"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8528:1:7","type":""},{"name":"y","nodeType":"YulTypedName","src":"8531:1:7","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"8537:3:7","type":""}],"src":"8497:191:7"},{"body":{"nodeType":"YulBlock","src":"8848:288:7","statements":[{"nodeType":"YulAssignment","src":"8858:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8870:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"8881:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8866:3:7"},"nodeType":"YulFunctionCall","src":"8866:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8858:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8938:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8951:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"8962:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8947:3:7"},"nodeType":"YulFunctionCall","src":"8947:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8894:43:7"},"nodeType":"YulFunctionCall","src":"8894:71:7"},"nodeType":"YulExpressionStatement","src":"8894:71:7"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9019:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9032:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"9043:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9028:3:7"},"nodeType":"YulFunctionCall","src":"9028:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8975:43:7"},"nodeType":"YulFunctionCall","src":"8975:72:7"},"nodeType":"YulExpressionStatement","src":"8975:72:7"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9101:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9114:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"9125:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9110:3:7"},"nodeType":"YulFunctionCall","src":"9110:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9057:43:7"},"nodeType":"YulFunctionCall","src":"9057:72:7"},"nodeType":"YulExpressionStatement","src":"9057:72:7"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8804:9:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8816:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8824:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8832:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8843:4:7","type":""}],"src":"8694:442:7"},{"body":{"nodeType":"YulBlock","src":"9240:124:7","statements":[{"nodeType":"YulAssignment","src":"9250:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9262:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"9273:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9258:3:7"},"nodeType":"YulFunctionCall","src":"9258:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9250:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9330:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9343:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"9354:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9339:3:7"},"nodeType":"YulFunctionCall","src":"9339:17:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9286:43:7"},"nodeType":"YulFunctionCall","src":"9286:71:7"},"nodeType":"YulExpressionStatement","src":"9286:71:7"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9212:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9224:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9235:4:7","type":""}],"src":"9142:222:7"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":7,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3A62 CODESIZE SUB DUP1 PUSH3 0x3A62 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x59A JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH3 0x4D SWAP2 SWAP1 PUSH3 0x5FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x466F746572726500000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x464F544500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xCA SWAP2 SWAP1 PUSH3 0x8B6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xDC SWAP2 SWAP1 PUSH3 0x8B6 JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP2 SUB PUSH3 0x128 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x392E1E2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x11F SWAP2 SWAP1 PUSH3 0x9E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH13 0x183BDAC6AE9BC1C8CC0000000 SWAP1 POP PUSH1 0x0 PUSH12 0x60EF6B1ABA6F072330000000 SWAP1 POP DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH3 0x1AA PUSH1 0xA0 MLOAD DUP4 PUSH3 0x1C7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1BE PUSH1 0xA0 MLOAD DUP3 PUSH3 0x1C7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0xB32 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x23C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x233 SWAP2 SWAP1 PUSH3 0xA42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x250 PUSH1 0x0 DUP4 DUP4 PUSH3 0x254 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x267 DUP4 DUP4 DUP4 PUSH3 0x316 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x311 JUMPI PUSH1 0x0 PUSH3 0x2AE PUSH3 0x546 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x2C2 PUSH3 0x550 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x30E JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x305 SWAP3 SWAP2 SWAP1 PUSH3 0xA70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x36C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x35F SWAP2 SWAP1 PUSH3 0xA9D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x442 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x3FB JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3F2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x48D JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x4DA JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x539 SWAP2 SWAP1 PUSH3 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x574 DUP2 PUSH3 0x55F JUMP JUMPDEST DUP2 EQ PUSH3 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x594 DUP2 PUSH3 0x569 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x5B3 JUMPI PUSH3 0x5B2 PUSH3 0x55A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x5C3 DUP5 DUP3 DUP6 ADD PUSH3 0x583 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x608 DUP3 PUSH3 0x55F JUMP JUMPDEST SWAP2 POP PUSH3 0x615 DUP4 PUSH3 0x55F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x625 DUP2 PUSH3 0x55F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x63F JUMPI PUSH3 0x63E PUSH3 0x5CC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x6C8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x6DE JUMPI PUSH3 0x6DD PUSH3 0x680 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x748 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x709 JUMP JUMPDEST PUSH3 0x754 DUP7 DUP4 PUSH3 0x709 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x797 PUSH3 0x791 PUSH3 0x78B DUP5 PUSH3 0x55F JUMP JUMPDEST PUSH3 0x76C JUMP JUMPDEST PUSH3 0x55F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7B3 DUP4 PUSH3 0x776 JUMP JUMPDEST PUSH3 0x7CB PUSH3 0x7C2 DUP3 PUSH3 0x79E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x716 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x7E2 PUSH3 0x7D3 JUMP JUMPDEST PUSH3 0x7EF DUP2 DUP5 DUP5 PUSH3 0x7A8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x817 JUMPI PUSH3 0x80B PUSH1 0x0 DUP3 PUSH3 0x7D8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x7F5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x866 JUMPI PUSH3 0x830 DUP2 PUSH3 0x6E4 JUMP JUMPDEST PUSH3 0x83B DUP5 PUSH3 0x6F9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x84B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x863 PUSH3 0x85A DUP6 PUSH3 0x6F9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x7F4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x88B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x86B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8A6 DUP4 DUP4 PUSH3 0x878 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x8C1 DUP3 PUSH3 0x646 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x8DD JUMPI PUSH3 0x8DC PUSH3 0x651 JUMP JUMPDEST JUMPDEST PUSH3 0x8E9 DUP3 SLOAD PUSH3 0x6AF JUMP JUMPDEST PUSH3 0x8F6 DUP3 DUP3 DUP6 PUSH3 0x81B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x92E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x919 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x925 DUP6 DUP3 PUSH3 0x898 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x995 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x93E DUP7 PUSH3 0x6E4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x968 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x941 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x988 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x984 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x878 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9C8 PUSH3 0x9C2 PUSH3 0x9BC DUP5 PUSH3 0x99D JUMP JUMPDEST PUSH3 0x76C JUMP JUMPDEST PUSH3 0x55F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x9DA DUP2 PUSH3 0x9A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x9F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x9CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA2A DUP3 PUSH3 0x9FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xA3C DUP2 PUSH3 0xA1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xA59 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xA31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA6A DUP2 PUSH3 0x55F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0xA87 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0xA5F JUMP JUMPDEST PUSH3 0xA96 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0xA5F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xAAA DUP3 PUSH3 0x55F JUMP JUMPDEST SWAP2 POP PUSH3 0xAB7 DUP4 PUSH3 0x55F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xAD2 JUMPI PUSH3 0xAD1 PUSH3 0x5CC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xAEF PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0xA31 JUMP JUMPDEST PUSH3 0xAFE PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xA5F JUMP JUMPDEST PUSH3 0xB0D PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xA5F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xB2C PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xA5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x2EE7 PUSH3 0xB7B PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x11F8 ADD MSTORE DUP2 DUP2 PUSH2 0x1268 ADD MSTORE DUP2 DUP2 PUSH2 0x1614 ADD MSTORE DUP2 DUP2 PUSH2 0x184E ADD MSTORE DUP2 DUP2 PUSH2 0x18F5 ADD MSTORE PUSH2 0x1B24 ADD MSTORE PUSH1 0x0 PUSH2 0xA2D ADD MSTORE PUSH2 0x2EE7 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xBADA6E23 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0xE80A4D58 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xF09C69C7 EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0xF868E766 EQ PUSH2 0x58B JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xBADA6E23 EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0xBAFB8E83 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0xDCF6EA88 EQ PUSH2 0x4DF JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x90AAAFB3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x90AAAFB3 EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x487 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x85805723 EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0x8D1AADBF EQ PUSH2 0x401 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x27506F53 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x313CE567 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x5506ED44 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x65371883 EQ PUSH2 0x397 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x27506F53 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x2E7700F0 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x2E9C3D94 EQ PUSH2 0x30D JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x19A3C68D EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x1E36AA63 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A1 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x44D1D4C EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x205 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH2 0x662 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x22F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x231A JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x24FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x22F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x333 PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x351 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39F PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x2721 JUMP JUMPDEST PUSH2 0xADE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0xD90 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x437 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH2 0xF9B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x441 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x471 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48F PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49C SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH2 0x121A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C9 PUSH2 0x1290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F4 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH2 0x1296 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x529 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x2790 JUMP JUMPDEST PUSH2 0x134A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x559 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x554 SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x589 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH2 0x1410 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH2 0x163D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5BC SWAP1 PUSH2 0x27FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5E8 SWAP1 PUSH2 0x27FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x635 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x60A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x635 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x618 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x64A PUSH2 0x191F JUMP JUMPDEST SWAP1 POP PUSH2 0x657 DUP2 DUP6 DUP6 PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x70F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6AC JUMPI PUSH2 0x6AB PUSH2 0x2830 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6FC JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x715 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x707 SWAP1 PUSH2 0x288E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x674 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x79E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x754 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7B3 PUSH2 0x191F JUMP JUMPDEST SWAP1 POP PUSH2 0x7C0 DUP6 DUP3 DUP6 PUSH2 0x1939 JUMP JUMPDEST PUSH2 0x7CB DUP6 DUP6 DUP6 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x97F JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x8E4 SWAP1 PUSH2 0x27FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x910 SWAP1 PUSH2 0x27FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x95D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x932 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x95D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x940 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x7FB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA16 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x9CC JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xBF9 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB19 JUMPI PUSH2 0xB18 PUSH2 0x2830 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBE6 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95E4151200D357A599DAC39756B80FCD6D76FD3D5B74D6ADEF1DAD12411F27E3 PUSH1 0x40 MLOAD PUSH2 0xBA3 SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH32 0xC033214D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDD SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0xBF1 SWAP1 PUSH2 0x288E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAE1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC0D SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0xD3F SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP PUSH32 0xC4B32D7FF75A51E487F3CBB5D3202F2EFECCA1F4C2B987E0039C1D3220B48A83 CALLER DUP5 DUP5 DUP5 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xD83 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xEAB JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDCB JUMPI PUSH2 0xDCA PUSH2 0x2830 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE98 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95E4151200D357A599DAC39756B80FCD6D76FD3D5B74D6ADEF1DAD12411F27E3 PUSH1 0x40 MLOAD PUSH2 0xE55 SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH32 0xC033214D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8F SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0xEA3 SWAP1 PUSH2 0x288E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD93 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x2CA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0xF07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFE SWAP1 PUSH2 0x2D31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xC PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF7D SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF8E CALLER DUP3 PUSH2 0x1AC1 JUMP JUMPDEST PUSH2 0xF97 DUP3 PUSH2 0xF9B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA6 DUP3 PUSH2 0x1296 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 LT PUSH2 0x1014 JUMPI PUSH1 0xA DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1027 SWAP1 PUSH2 0x27FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1053 SWAP1 PUSH2 0x27FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10A0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1075 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10A0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1083 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x11CA JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10EA JUMPI PUSH2 0x10E9 PUSH2 0x2830 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11B7 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95E4151200D357A599DAC39756B80FCD6D76FD3D5B74D6ADEF1DAD12411F27E3 PUSH1 0x40 MLOAD PUSH2 0x1174 SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH32 0xC033214D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AE SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x11C2 SWAP1 PUSH2 0x288E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10B2 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x11DF SWAP2 SWAP1 PUSH2 0x2CA3 JUMP JUMPDEST SWAP2 POP PUSH2 0x11EB DUP4 DUP4 PUSH2 0x1B4E JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x122E SWAP2 SWAP1 PUSH2 0x2CA3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1242 SWAP2 SWAP1 PUSH2 0x2D51 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x125B SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x128D CALLER PUSH32 0x0 DUP4 PUSH2 0x19CD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1340 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12D8 JUMPI PUSH2 0x12D7 PUSH2 0x2830 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x132D JUMPI DUP2 DUP1 PUSH2 0x1329 SWAP1 PUSH2 0x288E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1338 SWAP1 PUSH2 0x288E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12A0 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x13E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x152B JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x144B JUMPI PUSH2 0x144A PUSH2 0x2830 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1518 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95E4151200D357A599DAC39756B80FCD6D76FD3D5B74D6ADEF1DAD12411F27E3 PUSH1 0x40 MLOAD PUSH2 0x14D5 SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH32 0xC033214D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150F SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x1523 SWAP1 PUSH2 0x288E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1413 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x1540 SWAP2 SWAP1 PUSH2 0x2CA3 JUMP JUMPDEST SWAP1 POP PUSH2 0x154B CALLER PUSH2 0x66C JUMP JUMPDEST ISZERO PUSH2 0x15DC JUMPI PUSH1 0x64 PUSH1 0x14 DUP3 PUSH2 0x155F SWAP2 SWAP1 PUSH2 0x2CA3 JUMP JUMPDEST PUSH2 0x1569 SWAP2 SWAP1 PUSH2 0x2DB4 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x50 DUP3 PUSH2 0x157E SWAP2 SWAP1 PUSH2 0x2CA3 JUMP JUMPDEST PUSH2 0x1588 SWAP2 SWAP1 PUSH2 0x2DB4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x159C SWAP2 SWAP1 PUSH2 0x2D51 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15B5 SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15D0 SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x163A JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15EE SWAP2 SWAP1 PUSH2 0x2D51 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1607 SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1639 CALLER PUSH32 0x0 DUP4 PUSH2 0x19CD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1758 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1678 JUMPI PUSH2 0x1677 PUSH2 0x2830 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1745 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95E4151200D357A599DAC39756B80FCD6D76FD3D5B74D6ADEF1DAD12411F27E3 PUSH1 0x40 MLOAD PUSH2 0x1702 SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH32 0xC033214D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x173C SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x1750 SWAP1 PUSH2 0x288E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1640 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x176D SWAP2 SWAP1 PUSH2 0x2CA3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1778 CALLER PUSH2 0x66C JUMP JUMPDEST ISZERO PUSH2 0x1879 JUMPI PUSH1 0x5 SLOAD DUP2 GT ISZERO PUSH2 0x17C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17B9 SWAP1 PUSH2 0x2E31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x14 DUP3 PUSH2 0x17D1 SWAP2 SWAP1 PUSH2 0x2CA3 JUMP JUMPDEST PUSH2 0x17DB SWAP2 SWAP1 PUSH2 0x2DB4 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x50 DUP3 PUSH2 0x17F0 SWAP2 SWAP1 PUSH2 0x2CA3 JUMP JUMPDEST PUSH2 0x17FA SWAP2 SWAP1 PUSH2 0x2DB4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x180E SWAP2 SWAP1 PUSH2 0x2D51 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1827 SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1842 SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1874 PUSH32 0x0 CALLER DUP4 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x191C JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 GT ISZERO PUSH2 0x18BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B5 SWAP1 PUSH2 0x2E31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x18D0 SWAP2 SWAP1 PUSH2 0x2D51 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x18E9 SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x191B PUSH32 0x0 CALLER DUP4 PUSH2 0x19CD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1934 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1B71 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1945 DUP5 DUP5 PUSH2 0x134A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x19C7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x19B7 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19AE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19C6 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1B71 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A3F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A36 SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AB1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA8 SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1ABC DUP4 DUP4 DUP4 PUSH2 0x1D48 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x1B06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AFD SWAP1 PUSH2 0x2D31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B18 SWAP2 SWAP1 PUSH2 0x2D51 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B4A PUSH32 0x0 DUP4 DUP4 PUSH2 0x19CD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B59 PUSH2 0x191F JUMP JUMPDEST SWAP1 POP PUSH2 0x1B66 DUP2 DUP6 DUP6 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BE3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BDA SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C55 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C4C SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1D42 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D39 SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1D53 DUP4 DUP4 DUP4 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DE9 JUMPI PUSH1 0x0 PUSH2 0x1D91 PUSH2 0xA29 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D9D PUSH2 0x662 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1DE6 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DDD SWAP3 SWAP2 SWAP1 PUSH2 0x2E88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E40 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E34 SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F13 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1ECC JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EC3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F5C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1FA9 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2006 SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2026 DUP2 PUSH2 0x2013 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2041 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x201D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2081 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2066 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A9 DUP3 PUSH2 0x2047 JUMP JUMPDEST PUSH2 0x20B3 DUP2 DUP6 PUSH2 0x2052 JUMP JUMPDEST SWAP4 POP PUSH2 0x20C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x20CC DUP2 PUSH2 0x208D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20F1 DUP2 DUP5 PUSH2 0x209E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2138 DUP3 PUSH2 0x210D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2148 DUP2 PUSH2 0x212D JUMP JUMPDEST DUP2 EQ PUSH2 0x2153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2165 DUP2 PUSH2 0x213F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2174 DUP2 PUSH2 0x2013 JUMP JUMPDEST DUP2 EQ PUSH2 0x217F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2191 DUP2 PUSH2 0x216B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21AE JUMPI PUSH2 0x21AD PUSH2 0x2103 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21BC DUP6 DUP3 DUP7 ADD PUSH2 0x2156 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21CD DUP6 DUP3 DUP7 ADD PUSH2 0x2182 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21EC DUP2 PUSH2 0x21D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2207 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2223 JUMPI PUSH2 0x2222 PUSH2 0x2103 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2231 DUP5 DUP3 DUP6 ADD PUSH2 0x2156 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x226F DUP2 PUSH2 0x212D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2281 DUP4 DUP4 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22A5 DUP3 PUSH2 0x223A JUMP JUMPDEST PUSH2 0x22AF DUP2 DUP6 PUSH2 0x2245 JUMP JUMPDEST SWAP4 POP PUSH2 0x22BA DUP4 PUSH2 0x2256 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22EB JUMPI DUP2 MLOAD PUSH2 0x22D2 DUP9 DUP3 PUSH2 0x2275 JUMP JUMPDEST SWAP8 POP PUSH2 0x22DD DUP4 PUSH2 0x228D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x22BE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2312 DUP2 DUP5 PUSH2 0x229A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2333 JUMPI PUSH2 0x2332 PUSH2 0x2103 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2341 DUP7 DUP3 DUP8 ADD PUSH2 0x2156 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2352 DUP7 DUP3 DUP8 ADD PUSH2 0x2156 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2363 DUP7 DUP3 DUP8 ADD PUSH2 0x2182 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23A2 DUP2 PUSH2 0x2013 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C4 DUP3 PUSH2 0x2047 JUMP JUMPDEST PUSH2 0x23CE DUP2 DUP6 PUSH2 0x23A8 JUMP JUMPDEST SWAP4 POP PUSH2 0x23DE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x23E7 DUP2 PUSH2 0x208D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x240A PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2266 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x241D PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x2266 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x2430 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x2399 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x2448 DUP3 DUP3 PUSH2 0x23B9 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x245D PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x2399 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2474 DUP4 DUP4 PUSH2 0x23F2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2494 DUP3 PUSH2 0x236D JUMP JUMPDEST PUSH2 0x249E DUP2 DUP6 PUSH2 0x2378 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x24B0 DUP6 PUSH2 0x2389 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x24EC JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x24CD DUP6 DUP3 PUSH2 0x2468 JUMP JUMPDEST SWAP5 POP PUSH2 0x24D8 DUP4 PUSH2 0x247C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x24B4 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2518 DUP2 DUP5 PUSH2 0x2489 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2536 DUP2 PUSH2 0x2520 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2551 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x252D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x256D JUMPI PUSH2 0x256C PUSH2 0x2103 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x257B DUP5 DUP3 DUP6 ADD PUSH2 0x2182 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x258D DUP2 PUSH2 0x212D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25A8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2584 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B9 DUP3 PUSH2 0x210D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25C9 DUP2 PUSH2 0x25AE JUMP JUMPDEST DUP2 EQ PUSH2 0x25D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25E6 DUP2 PUSH2 0x25C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x262E DUP3 PUSH2 0x208D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x264D JUMPI PUSH2 0x264C PUSH2 0x25F6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2660 PUSH2 0x20F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x266C DUP3 DUP3 PUSH2 0x2625 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x268C JUMPI PUSH2 0x268B PUSH2 0x25F6 JUMP JUMPDEST JUMPDEST PUSH2 0x2695 DUP3 PUSH2 0x208D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C4 PUSH2 0x26BF DUP5 PUSH2 0x2671 JUMP JUMPDEST PUSH2 0x2656 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x26E0 JUMPI PUSH2 0x26DF PUSH2 0x25F1 JUMP JUMPDEST JUMPDEST PUSH2 0x26EB DUP5 DUP3 DUP6 PUSH2 0x26A2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2708 JUMPI PUSH2 0x2707 PUSH2 0x25EC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2718 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x26B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x273A JUMPI PUSH2 0x2739 PUSH2 0x2103 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2748 DUP7 DUP3 DUP8 ADD PUSH2 0x25D7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2759 DUP7 DUP3 DUP8 ADD PUSH2 0x2182 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x277A JUMPI PUSH2 0x2779 PUSH2 0x2108 JUMP JUMPDEST JUMPDEST PUSH2 0x2786 DUP7 DUP3 DUP8 ADD PUSH2 0x26F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27A7 JUMPI PUSH2 0x27A6 PUSH2 0x2103 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27B5 DUP6 DUP3 DUP7 ADD PUSH2 0x2156 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x27C6 DUP6 DUP3 DUP7 ADD PUSH2 0x2156 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2817 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x282A JUMPI PUSH2 0x2829 PUSH2 0x27D0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2899 DUP3 PUSH2 0x2013 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x28CB JUMPI PUSH2 0x28CA PUSH2 0x285F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7572206163636F756E7420686173206265656E2066726F7A656E00000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x290C PUSH1 0x1C DUP4 PUSH2 0x2052 JUMP JUMPDEST SWAP2 POP PUSH2 0x2917 DUP3 PUSH2 0x28D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x293B DUP2 PUSH2 0x28FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x294D DUP3 PUSH2 0x2013 JUMP JUMPDEST SWAP2 POP PUSH2 0x2958 DUP4 PUSH2 0x2013 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2970 JUMPI PUSH2 0x296F PUSH2 0x285F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x29D8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x299B JUMP JUMPDEST PUSH2 0x29E2 DUP7 DUP4 PUSH2 0x299B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A1F PUSH2 0x2A1A PUSH2 0x2A15 DUP5 PUSH2 0x2013 JUMP JUMPDEST PUSH2 0x29FA JUMP JUMPDEST PUSH2 0x2013 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A39 DUP4 PUSH2 0x2A04 JUMP JUMPDEST PUSH2 0x2A4D PUSH2 0x2A45 DUP3 PUSH2 0x2A26 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x29A8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2A62 PUSH2 0x2A55 JUMP JUMPDEST PUSH2 0x2A6D DUP2 DUP5 DUP5 PUSH2 0x2A30 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2A91 JUMPI PUSH2 0x2A86 PUSH1 0x0 DUP3 PUSH2 0x2A5A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2A73 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2AD6 JUMPI PUSH2 0x2AA7 DUP2 PUSH2 0x2976 JUMP JUMPDEST PUSH2 0x2AB0 DUP5 PUSH2 0x298B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2ABF JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2AD3 PUSH2 0x2ACB DUP6 PUSH2 0x298B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2A72 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AF9 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2ADB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B12 DUP4 DUP4 PUSH2 0x2AE8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B2B DUP3 PUSH2 0x2047 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B44 JUMPI PUSH2 0x2B43 PUSH2 0x25F6 JUMP JUMPDEST JUMPDEST PUSH2 0x2B4E DUP3 SLOAD PUSH2 0x27FF JUMP JUMPDEST PUSH2 0x2B59 DUP3 DUP3 DUP6 PUSH2 0x2A95 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2B8C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2B7A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2B84 DUP6 DUP3 PUSH2 0x2B06 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2BEC JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2B9A DUP7 PUSH2 0x2976 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2BC2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B9D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2BDF JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2BDB PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2AE8 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C0F PUSH2 0x2C0A PUSH2 0x2C05 DUP5 PUSH2 0x210D JUMP JUMPDEST PUSH2 0x29FA JUMP JUMPDEST PUSH2 0x210D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C21 DUP3 PUSH2 0x2BF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C33 DUP3 PUSH2 0x2C16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C43 DUP2 PUSH2 0x2C28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2C5E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2584 JUMP JUMPDEST PUSH2 0x2C6B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2C3A JUMP JUMPDEST PUSH2 0x2C78 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x201D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2C8A DUP2 DUP6 PUSH2 0x209E JUMP JUMPDEST SWAP1 POP PUSH2 0x2C99 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x201D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CAE DUP3 PUSH2 0x2013 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CB9 DUP4 PUSH2 0x2013 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2CC7 DUP2 PUSH2 0x2013 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2CDE JUMPI PUSH2 0x2CDD PUSH2 0x285F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E6420696E2074686520706F6F6C000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D1B PUSH1 0x1D DUP4 PUSH2 0x2052 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D26 DUP3 PUSH2 0x2CE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D4A DUP2 PUSH2 0x2D0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D5C DUP3 PUSH2 0x2013 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D67 DUP4 PUSH2 0x2013 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2D7F JUMPI PUSH2 0x2D7E PUSH2 0x285F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2DBF DUP3 PUSH2 0x2013 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DCA DUP4 PUSH2 0x2013 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2DDA JUMPI PUSH2 0x2DD9 PUSH2 0x2D85 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E20737570706C7900000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E1B PUSH1 0x19 DUP4 PUSH2 0x2052 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E26 DUP3 PUSH2 0x2DE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E4A DUP2 PUSH2 0x2E0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2E66 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2584 JUMP JUMPDEST PUSH2 0x2E73 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x201D JUMP JUMPDEST PUSH2 0x2E80 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x201D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E9D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x201D JUMP JUMPDEST PUSH2 0x2EAA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x201D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 SWAP13 STOP 0xDA PUSH9 0x672599B3F28C6EB610 0xC7 PUSH23 0xA21240A46B735654B9D3414F4BEE3DC264736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"285:6697:6:-:0;;;1758:462;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1854:4;1841:10;:17;;;;:::i;:::-;1896:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;764:1:3;756:4;:9;752:65;;804:1;788:18;;;;;;;;;;;:::i;:::-;;;;;;;;752:65;833:4;826:11;;;;;;716:128;1879:10:6::2;1870:19;;;;;;;;::::0;::::2;1899:26;1928:19;1899:48;;1979:27;2009:18;1979:48;;2051:18;2038:10;:31;;;;2106:19;2079:24;:46;;;;2136:33;2142:6;;2150:18;2136:5;;;:33;;:::i;:::-;2179:34;2185:6;;2193:19;2179:5;;;:34;;:::i;:::-;1860:360;;1758:462:::0;285:6697;;7721:208:1;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;1059:371:3:-;1153:30;1167:4;1173:2;1177:5;1153:13;;;:30;;:::i;:::-;1214:1;1198:18;;:4;:18;;;1194:230;;1232:17;1252:5;:3;;;:5;;:::i;:::-;1232:25;;1271:14;1288:13;:11;;;:13;;:::i;:::-;1271:30;;1328:9;1319:6;:18;1315:99;;;1381:6;1389:9;1364:35;;;;;;;;;;;;:::i;:::-;;;;;;;;1315:99;1218:206;;1194:230;1059:371;;;:::o;6271:1107:1:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;923:81:3:-;967:7;993:4;;986:11;;923:81;:::o;3144:97:1:-;3196:7;3222:12;;3215:19;;3144:97;:::o;88:117:7:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:180::-;1099:77;1096:1;1089:88;1196:4;1193:1;1186:15;1220:4;1217:1;1210:15;1237:410;1277:7;1300:20;1318:1;1300:20;:::i;:::-;1295:25;;1334:20;1352:1;1334:20;:::i;:::-;1329:25;;1389:1;1386;1382:9;1411:30;1429:11;1411:30;:::i;:::-;1400:41;;1590:1;1581:7;1577:15;1574:1;1571:22;1551:1;1544:9;1524:83;1501:139;;1620:18;;:::i;:::-;1501:139;1285:362;1237:410;;;;:::o;1653:99::-;1705:6;1739:5;1733:12;1723:22;;1653:99;;;:::o;1758:180::-;1806:77;1803:1;1796:88;1903:4;1900:1;1893:15;1927:4;1924:1;1917:15;1944:180;1992:77;1989:1;1982:88;2089:4;2086:1;2079:15;2113:4;2110:1;2103:15;2130:320;2174:6;2211:1;2205:4;2201:12;2191:22;;2258:1;2252:4;2248:12;2279:18;2269:81;;2335:4;2327:6;2323:17;2313:27;;2269:81;2397:2;2389:6;2386:14;2366:18;2363:38;2360:84;;2416:18;;:::i;:::-;2360:84;2181:269;2130:320;;;:::o;2456:141::-;2505:4;2528:3;2520:11;;2551:3;2548:1;2541:14;2585:4;2582:1;2572:18;2564:26;;2456:141;;;:::o;2603:93::-;2640:6;2687:2;2682;2675:5;2671:14;2667:23;2657:33;;2603:93;;;:::o;2702:107::-;2746:8;2796:5;2790:4;2786:16;2765:37;;2702:107;;;;:::o;2815:393::-;2884:6;2934:1;2922:10;2918:18;2957:97;2987:66;2976:9;2957:97;:::i;:::-;3075:39;3105:8;3094:9;3075:39;:::i;:::-;3063:51;;3147:4;3143:9;3136:5;3132:21;3123:30;;3196:4;3186:8;3182:19;3175:5;3172:30;3162:40;;2891:317;;2815:393;;;;;:::o;3214:60::-;3242:3;3263:5;3256:12;;3214:60;;;:::o;3280:142::-;3330:9;3363:53;3381:34;3390:24;3408:5;3390:24;:::i;:::-;3381:34;:::i;:::-;3363:53;:::i;:::-;3350:66;;3280:142;;;:::o;3428:75::-;3471:3;3492:5;3485:12;;3428:75;;;:::o;3509:269::-;3619:39;3650:7;3619:39;:::i;:::-;3680:91;3729:41;3753:16;3729:41;:::i;:::-;3721:6;3714:4;3708:11;3680:91;:::i;:::-;3674:4;3667:105;3585:193;3509:269;;;:::o;3784:73::-;3829:3;3784:73;:::o;3863:189::-;3940:32;;:::i;:::-;3981:65;4039:6;4031;4025:4;3981:65;:::i;:::-;3916:136;3863:189;;:::o;4058:186::-;4118:120;4135:3;4128:5;4125:14;4118:120;;;4189:39;4226:1;4219:5;4189:39;:::i;:::-;4162:1;4155:5;4151:13;4142:22;;4118:120;;;4058:186;;:::o;4250:543::-;4351:2;4346:3;4343:11;4340:446;;;4385:38;4417:5;4385:38;:::i;:::-;4469:29;4487:10;4469:29;:::i;:::-;4459:8;4455:44;4652:2;4640:10;4637:18;4634:49;;;4673:8;4658:23;;4634:49;4696:80;4752:22;4770:3;4752:22;:::i;:::-;4742:8;4738:37;4725:11;4696:80;:::i;:::-;4355:431;;4340:446;4250:543;;;:::o;4799:117::-;4853:8;4903:5;4897:4;4893:16;4872:37;;4799:117;;;;:::o;4922:169::-;4966:6;4999:51;5047:1;5043:6;5035:5;5032:1;5028:13;4999:51;:::i;:::-;4995:56;5080:4;5074;5070:15;5060:25;;4973:118;4922:169;;;;:::o;5096:295::-;5172:4;5318:29;5343:3;5337:4;5318:29;:::i;:::-;5310:37;;5380:3;5377:1;5373:11;5367:4;5364:21;5356:29;;5096:295;;;;:::o;5396:1395::-;5513:37;5546:3;5513:37;:::i;:::-;5615:18;5607:6;5604:30;5601:56;;;5637:18;;:::i;:::-;5601:56;5681:38;5713:4;5707:11;5681:38;:::i;:::-;5766:67;5826:6;5818;5812:4;5766:67;:::i;:::-;5860:1;5884:4;5871:17;;5916:2;5908:6;5905:14;5933:1;5928:618;;;;6590:1;6607:6;6604:77;;;6656:9;6651:3;6647:19;6641:26;6632:35;;6604:77;6707:67;6767:6;6760:5;6707:67;:::i;:::-;6701:4;6694:81;6563:222;5898:887;;5928:618;5980:4;5976:9;5968:6;5964:22;6014:37;6046:4;6014:37;:::i;:::-;6073:1;6087:208;6101:7;6098:1;6095:14;6087:208;;;6180:9;6175:3;6171:19;6165:26;6157:6;6150:42;6231:1;6223:6;6219:14;6209:24;;6278:2;6267:9;6263:18;6250:31;;6124:4;6121:1;6117:12;6112:17;;6087:208;;;6323:6;6314:7;6311:19;6308:179;;;6381:9;6376:3;6372:19;6366:26;6424:48;6466:4;6458:6;6454:17;6443:9;6424:48;:::i;:::-;6416:6;6409:64;6331:156;6308:179;6533:1;6529;6521:6;6517:14;6513:22;6507:4;6500:36;5935:611;;;5898:887;;5488:1303;;;5396:1395;;:::o;6797:85::-;6842:7;6871:5;6860:16;;6797:85;;;:::o;6888:158::-;6946:9;6979:61;6997:42;7006:32;7032:5;7006:32;:::i;:::-;6997:42;:::i;:::-;6979:61;:::i;:::-;6966:74;;6888:158;;;:::o;7052:147::-;7147:45;7186:5;7147:45;:::i;:::-;7142:3;7135:58;7052:147;;:::o;7205:238::-;7306:4;7344:2;7333:9;7329:18;7321:26;;7357:79;7433:1;7422:9;7418:17;7409:6;7357:79;:::i;:::-;7205:238;;;;:::o;7449:126::-;7486:7;7526:42;7519:5;7515:54;7504:65;;7449:126;;;:::o;7581:96::-;7618:7;7647:24;7665:5;7647:24;:::i;:::-;7636:35;;7581:96;;;:::o;7683:118::-;7770:24;7788:5;7770:24;:::i;:::-;7765:3;7758:37;7683:118;;:::o;7807:222::-;7900:4;7938:2;7927:9;7923:18;7915:26;;7951:71;8019:1;8008:9;8004:17;7995:6;7951:71;:::i;:::-;7807:222;;;;:::o;8035:118::-;8122:24;8140:5;8122:24;:::i;:::-;8117:3;8110:37;8035:118;;:::o;8159:332::-;8280:4;8318:2;8307:9;8303:18;8295:26;;8331:71;8399:1;8388:9;8384:17;8375:6;8331:71;:::i;:::-;8412:72;8480:2;8469:9;8465:18;8456:6;8412:72;:::i;:::-;8159:332;;;;;:::o;8497:191::-;8537:3;8556:20;8574:1;8556:20;:::i;:::-;8551:25;;8590:20;8608:1;8590:20;:::i;:::-;8585:25;;8633:1;8630;8626:9;8619:16;;8654:3;8651:1;8648:10;8645:36;;;8661:18;;:::i;:::-;8645:36;8497:191;;;;:::o;8694:442::-;8843:4;8881:2;8870:9;8866:18;8858:26;;8894:71;8962:1;8951:9;8947:17;8938:6;8894:71;:::i;:::-;8975:72;9043:2;9032:9;9028:18;9019:6;8975:72;:::i;:::-;9057;9125:2;9114:9;9110:18;9101:6;9057:72;:::i;:::-;8694:442;;;;;;:::o;9142:222::-;9235:4;9273:2;9262:9;9258:18;9250:26;;9286:71;9354:1;9343:9;9339:17;9330:6;9286:71;:::i;:::-;9142:222;;;;:::o;285:6697:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_542":{"entryPoint":6439,"id":542,"parameterSlots":3,"returnSlots":0},"@_approve_602":{"entryPoint":7025,"id":602,"parameterSlots":4,"returnSlots":0},"@_msgSender_866":{"entryPoint":6431,"id":866,"parameterSlots":0,"returnSlots":1},"@_owner_900":{"entryPoint":4598,"id":900,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_650":{"entryPoint":6457,"id":650,"parameterSlots":3,"returnSlots":0},"@_transfer_381":{"entryPoint":6605,"id":381,"parameterSlots":3,"returnSlots":0},"@_update_458":{"entryPoint":7662,"id":458,"parameterSlots":3,"returnSlots":0},"@_update_827":{"entryPoint":7496,"id":827,"parameterSlots":3,"returnSlots":0},"@addToReversePool_1436":{"entryPoint":4634,"id":1436,"parameterSlots":1,"returnSlots":0},"@allowance_278":{"entryPoint":4938,"id":278,"parameterSlots":2,"returnSlots":1},"@approve_302":{"entryPoint":1599,"id":302,"parameterSlots":2,"returnSlots":1},"@balanceOf_237":{"entryPoint":2710,"id":237,"parameterSlots":1,"returnSlots":1},"@cap_779":{"entryPoint":2601,"id":779,"parameterSlots":0,"returnSlots":1},"@decimals_215":{"entryPoint":2592,"id":215,"parameterSlots":0,"returnSlots":1},"@deployToBlockchain_1476":{"entryPoint":2782,"id":1476,"parameterSlots":3,"returnSlots":0},"@fraudulentUserAddresses_917":{"entryPoint":5073,"id":917,"parameterSlots":0,"returnSlots":0},"@frozenAddresses_920":{"entryPoint":2641,"id":920,"parameterSlots":0,"returnSlots":0},"@getAllFraudulentUsers_1363":{"entryPoint":1818,"id":1363,"parameterSlots":0,"returnSlots":1},"@getAllFrozenUsers_1372":{"entryPoint":2450,"id":1372,"parameterSlots":0,"returnSlots":1},"@getAllTransactions_1486":{"entryPoint":2007,"id":1486,"parameterSlots":0,"returnSlots":1},"@getFraudulentUserReportCount_1409":{"entryPoint":4758,"id":1409,"parameterSlots":1,"returnSlots":1},"@getTransactionCount_1494":{"entryPoint":2440,"id":1494,"parameterSlots":0,"returnSlots":1},"@isFraudulentUser_1354":{"entryPoint":1644,"id":1354,"parameterSlots":1,"returnSlots":1},"@marketSupply_904":{"entryPoint":4752,"id":904,"parameterSlots":0,"returnSlots":0},"@name_197":{"entryPoint":1453,"id":197,"parameterSlots":0,"returnSlots":1},"@ownerToken_902":{"entryPoint":2704,"id":902,"parameterSlots":0,"returnSlots":0},"@reportForReverse_1299":{"entryPoint":3472,"id":1299,"parameterSlots":2,"returnSlots":0},"@restrictAccountAccess_1322":{"entryPoint":3995,"id":1322,"parameterSlots":1,"returnSlots":0},"@reverseTransactionSupply_906":{"entryPoint":1447,"id":906,"parameterSlots":0,"returnSlots":0},"@reverseTransfer_1256":{"entryPoint":6849,"id":1256,"parameterSlots":2,"returnSlots":0},"@symbol_206":{"entryPoint":4120,"id":206,"parameterSlots":0,"returnSlots":1},"@totalSupply_224":{"entryPoint":1634,"id":224,"parameterSlots":0,"returnSlots":1},"@transferFrom_334":{"entryPoint":1960,"id":334,"parameterSlots":3,"returnSlots":1},"@transfer_1231":{"entryPoint":4266,"id":1231,"parameterSlots":2,"returnSlots":1},"@transfer_261":{"entryPoint":6990,"id":261,"parameterSlots":2,"returnSlots":1},"@userDeposit_1137":{"entryPoint":5693,"id":1137,"parameterSlots":1,"returnSlots":0},"@userWithdrawal_1203":{"entryPoint":5136,"id":1203,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":9905,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":8534,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":9687,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":9971,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":8578,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8717,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256t_string_memory_ptr":{"entryPoint":10017,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_address":{"entryPoint":10128,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":8986,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8599,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":9559,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":8821,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_TransactionDetail_$947_memory_ptr_to_t_struct$_TransactionDetail_$947_memory_ptr":{"entryPoint":9320,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_payable_to_t_address_fromStack":{"entryPoint":11322,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address":{"entryPoint":8806,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9604,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":8858,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":9353,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":8675,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":9145,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":8350,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899_to_t_string_memory_ptr_fromStack":{"entryPoint":11534,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d84ad26e31dab99602e5848e20a3d31d72f14ed2a8a92b5d806058164b59134_to_t_string_memory_ptr_fromStack":{"entryPoint":10495,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a755cc50c9d762fab4401909210a5ee388e8968ca003bb660f98e04d784510a8_to_t_string_memory_ptr_fromStack":{"entryPoint":11790,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_TransactionDetail_$947_memory_ptr_to_t_struct$_TransactionDetail_$947_memory_ptr":{"entryPoint":9202,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":9113,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8221,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":9517,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9619,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_payable_t_uint256_t_string_memory_ptr_t_uint256__to_t_address_t_address_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":11337,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11857,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":8952,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9470,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":8690,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8407,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11569,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d84ad26e31dab99602e5848e20a3d31d72f14ed2a8a92b5d806058164b59134__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10530,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a755cc50c9d762fab4401909210a5ee388e8968ca003bb660f98e04d784510a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11825,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8236,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11912,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":9532,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":9814,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":8441,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":9841,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":8790,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr":{"entryPoint":9097,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":10614,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":8762,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr":{"entryPoint":9069,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":8263,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":8845,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr":{"entryPoint":9340,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":8773,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":9080,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":9128,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":8274,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10562,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":11700,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":11427,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11601,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":10901,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":8493,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":9646,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8663,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8461,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8211,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":9504,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":10866,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_address_payable_to_t_address":{"entryPoint":11304,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":11286,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":11252,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":10756,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":11042,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":9890,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":8291,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":10635,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":10239,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":11014,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":9765,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":10746,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":10382,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":10984,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":10335,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":11653,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":10192,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":10288,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9718,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":10790,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":9708,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":9713,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8456,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8451,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8333,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":10651,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":10971,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":10842,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899":{"entryPoint":11493,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d84ad26e31dab99602e5848e20a3d31d72f14ed2a8a92b5d806058164b59134":{"entryPoint":10454,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a755cc50c9d762fab4401909210a5ee388e8968ca003bb660f98e04d784510a8":{"entryPoint":11749,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":10664,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":10800,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8511,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":9664,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8555,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":10837,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:28124:7","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:7","statements":[{"nodeType":"YulAssignment","src":"62:16:7","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:7"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:7","type":""}],"src":"7:77:7"},{"body":{"nodeType":"YulBlock","src":"155:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:7"},"nodeType":"YulFunctionCall","src":"177:24:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:7"},"nodeType":"YulFunctionCall","src":"165:37:7"},"nodeType":"YulExpressionStatement","src":"165:37:7"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:7","type":""}],"src":"90:118:7"},{"body":{"nodeType":"YulBlock","src":"312:124:7","statements":[{"nodeType":"YulAssignment","src":"322:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:7"},"nodeType":"YulFunctionCall","src":"330:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:7"},"nodeType":"YulFunctionCall","src":"411:17:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:7"},"nodeType":"YulFunctionCall","src":"358:71:7"},"nodeType":"YulExpressionStatement","src":"358:71:7"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:7","type":""}],"src":"214:222:7"},{"body":{"nodeType":"YulBlock","src":"501:40:7","statements":[{"nodeType":"YulAssignment","src":"512:22:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"528:5:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"522:5:7"},"nodeType":"YulFunctionCall","src":"522:12:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"512:6:7"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"484:5:7","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"494:6:7","type":""}],"src":"442:99:7"},{"body":{"nodeType":"YulBlock","src":"643:73:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"660:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"665:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"653:6:7"},"nodeType":"YulFunctionCall","src":"653:19:7"},"nodeType":"YulExpressionStatement","src":"653:19:7"},{"nodeType":"YulAssignment","src":"681:29:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"700:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"705:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"696:3:7"},"nodeType":"YulFunctionCall","src":"696:14:7"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"681:11:7"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"615:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"620:6:7","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"631:11:7","type":""}],"src":"547:169:7"},{"body":{"nodeType":"YulBlock","src":"784:184:7","statements":[{"nodeType":"YulVariableDeclaration","src":"794:10:7","value":{"kind":"number","nodeType":"YulLiteral","src":"803:1:7","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"798:1:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"863:63:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"888:3:7"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"884:3:7"},"nodeType":"YulFunctionCall","src":"884:11:7"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"907:3:7"},{"name":"i","nodeType":"YulIdentifier","src":"912:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"903:3:7"},"nodeType":"YulFunctionCall","src":"903:11:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"897:5:7"},"nodeType":"YulFunctionCall","src":"897:18:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"877:6:7"},"nodeType":"YulFunctionCall","src":"877:39:7"},"nodeType":"YulExpressionStatement","src":"877:39:7"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"824:1:7"},{"name":"length","nodeType":"YulIdentifier","src":"827:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"821:2:7"},"nodeType":"YulFunctionCall","src":"821:13:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"835:19:7","statements":[{"nodeType":"YulAssignment","src":"837:15:7","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"846:1:7"},{"kind":"number","nodeType":"YulLiteral","src":"849:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"842:3:7"},"nodeType":"YulFunctionCall","src":"842:10:7"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"837:1:7"}]}]},"pre":{"nodeType":"YulBlock","src":"817:3:7","statements":[]},"src":"813:113:7"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"946:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"951:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"942:3:7"},"nodeType":"YulFunctionCall","src":"942:16:7"},{"kind":"number","nodeType":"YulLiteral","src":"960:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"935:6:7"},"nodeType":"YulFunctionCall","src":"935:27:7"},"nodeType":"YulExpressionStatement","src":"935:27:7"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"766:3:7","type":""},{"name":"dst","nodeType":"YulTypedName","src":"771:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"776:6:7","type":""}],"src":"722:246:7"},{"body":{"nodeType":"YulBlock","src":"1022:54:7","statements":[{"nodeType":"YulAssignment","src":"1032:38:7","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1050:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"1057:2:7","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1046:3:7"},"nodeType":"YulFunctionCall","src":"1046:14:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1066:2:7","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1062:3:7"},"nodeType":"YulFunctionCall","src":"1062:7:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1042:3:7"},"nodeType":"YulFunctionCall","src":"1042:28:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1032:6:7"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1005:5:7","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1015:6:7","type":""}],"src":"974:102:7"},{"body":{"nodeType":"YulBlock","src":"1174:285:7","statements":[{"nodeType":"YulVariableDeclaration","src":"1184:53:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1231:5:7"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1198:32:7"},"nodeType":"YulFunctionCall","src":"1198:39:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1188:6:7","type":""}]},{"nodeType":"YulAssignment","src":"1246:78:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1312:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"1317:6:7"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1253:58:7"},"nodeType":"YulFunctionCall","src":"1253:71:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1246:3:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1372:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"1379:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1368:3:7"},"nodeType":"YulFunctionCall","src":"1368:16:7"},{"name":"pos","nodeType":"YulIdentifier","src":"1386:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"1391:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1333:34:7"},"nodeType":"YulFunctionCall","src":"1333:65:7"},"nodeType":"YulExpressionStatement","src":"1333:65:7"},{"nodeType":"YulAssignment","src":"1407:46:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1418:3:7"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1445:6:7"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1423:21:7"},"nodeType":"YulFunctionCall","src":"1423:29:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1414:3:7"},"nodeType":"YulFunctionCall","src":"1414:39:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1407:3:7"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1155:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1162:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1170:3:7","type":""}],"src":"1082:377:7"},{"body":{"nodeType":"YulBlock","src":"1583:195:7","statements":[{"nodeType":"YulAssignment","src":"1593:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1605:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"1616:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1601:3:7"},"nodeType":"YulFunctionCall","src":"1601:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1593:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1640:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"1651:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1636:3:7"},"nodeType":"YulFunctionCall","src":"1636:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1659:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"1665:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1655:3:7"},"nodeType":"YulFunctionCall","src":"1655:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1629:6:7"},"nodeType":"YulFunctionCall","src":"1629:47:7"},"nodeType":"YulExpressionStatement","src":"1629:47:7"},{"nodeType":"YulAssignment","src":"1685:86:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1757:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"1766:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1693:63:7"},"nodeType":"YulFunctionCall","src":"1693:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1685:4:7"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1555:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1567:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1578:4:7","type":""}],"src":"1465:313:7"},{"body":{"nodeType":"YulBlock","src":"1824:35:7","statements":[{"nodeType":"YulAssignment","src":"1834:19:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1850:2:7","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1844:5:7"},"nodeType":"YulFunctionCall","src":"1844:9:7"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1834:6:7"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1817:6:7","type":""}],"src":"1784:75:7"},{"body":{"nodeType":"YulBlock","src":"1954:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1971:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1974:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1964:6:7"},"nodeType":"YulFunctionCall","src":"1964:12:7"},"nodeType":"YulExpressionStatement","src":"1964:12:7"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1865:117:7"},{"body":{"nodeType":"YulBlock","src":"2077:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2094:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2097:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2087:6:7"},"nodeType":"YulFunctionCall","src":"2087:12:7"},"nodeType":"YulExpressionStatement","src":"2087:12:7"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1988:117:7"},{"body":{"nodeType":"YulBlock","src":"2156:81:7","statements":[{"nodeType":"YulAssignment","src":"2166:65:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2181:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"2188:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2177:3:7"},"nodeType":"YulFunctionCall","src":"2177:54:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2166:7:7"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2138:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2148:7:7","type":""}],"src":"2111:126:7"},{"body":{"nodeType":"YulBlock","src":"2288:51:7","statements":[{"nodeType":"YulAssignment","src":"2298:35:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2327:5:7"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2309:17:7"},"nodeType":"YulFunctionCall","src":"2309:24:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2298:7:7"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2270:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2280:7:7","type":""}],"src":"2243:96:7"},{"body":{"nodeType":"YulBlock","src":"2388:79:7","statements":[{"body":{"nodeType":"YulBlock","src":"2445:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2454:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2457:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2447:6:7"},"nodeType":"YulFunctionCall","src":"2447:12:7"},"nodeType":"YulExpressionStatement","src":"2447:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2411:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2436:5:7"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2418:17:7"},"nodeType":"YulFunctionCall","src":"2418:24:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2408:2:7"},"nodeType":"YulFunctionCall","src":"2408:35:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2401:6:7"},"nodeType":"YulFunctionCall","src":"2401:43:7"},"nodeType":"YulIf","src":"2398:63:7"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2381:5:7","type":""}],"src":"2345:122:7"},{"body":{"nodeType":"YulBlock","src":"2525:87:7","statements":[{"nodeType":"YulAssignment","src":"2535:29:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2557:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2544:12:7"},"nodeType":"YulFunctionCall","src":"2544:20:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2535:5:7"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2600:5:7"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2573:26:7"},"nodeType":"YulFunctionCall","src":"2573:33:7"},"nodeType":"YulExpressionStatement","src":"2573:33:7"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2503:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"2511:3:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2519:5:7","type":""}],"src":"2473:139:7"},{"body":{"nodeType":"YulBlock","src":"2661:79:7","statements":[{"body":{"nodeType":"YulBlock","src":"2718:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2727:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2730:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2720:6:7"},"nodeType":"YulFunctionCall","src":"2720:12:7"},"nodeType":"YulExpressionStatement","src":"2720:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2684:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2709:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2691:17:7"},"nodeType":"YulFunctionCall","src":"2691:24:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2681:2:7"},"nodeType":"YulFunctionCall","src":"2681:35:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2674:6:7"},"nodeType":"YulFunctionCall","src":"2674:43:7"},"nodeType":"YulIf","src":"2671:63:7"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2654:5:7","type":""}],"src":"2618:122:7"},{"body":{"nodeType":"YulBlock","src":"2798:87:7","statements":[{"nodeType":"YulAssignment","src":"2808:29:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2830:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2817:12:7"},"nodeType":"YulFunctionCall","src":"2817:20:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2808:5:7"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2873:5:7"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2846:26:7"},"nodeType":"YulFunctionCall","src":"2846:33:7"},"nodeType":"YulExpressionStatement","src":"2846:33:7"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2776:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"2784:3:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2792:5:7","type":""}],"src":"2746:139:7"},{"body":{"nodeType":"YulBlock","src":"2974:391:7","statements":[{"body":{"nodeType":"YulBlock","src":"3020:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3022:77:7"},"nodeType":"YulFunctionCall","src":"3022:79:7"},"nodeType":"YulExpressionStatement","src":"3022:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2995:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"3004:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2991:3:7"},"nodeType":"YulFunctionCall","src":"2991:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"3016:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2987:3:7"},"nodeType":"YulFunctionCall","src":"2987:32:7"},"nodeType":"YulIf","src":"2984:119:7"},{"nodeType":"YulBlock","src":"3113:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"3128:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"3142:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3132:6:7","type":""}]},{"nodeType":"YulAssignment","src":"3157:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3192:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3188:3:7"},"nodeType":"YulFunctionCall","src":"3188:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3212:7:7"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3167:20:7"},"nodeType":"YulFunctionCall","src":"3167:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3157:6:7"}]}]},{"nodeType":"YulBlock","src":"3240:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"3255:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"3269:2:7","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3259:6:7","type":""}]},{"nodeType":"YulAssignment","src":"3285:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3320:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"3331:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3316:3:7"},"nodeType":"YulFunctionCall","src":"3316:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3340:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3295:20:7"},"nodeType":"YulFunctionCall","src":"3295:53:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3285:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2936:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2947:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2959:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2967:6:7","type":""}],"src":"2891:474:7"},{"body":{"nodeType":"YulBlock","src":"3413:48:7","statements":[{"nodeType":"YulAssignment","src":"3423:32:7","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3448:5:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3441:6:7"},"nodeType":"YulFunctionCall","src":"3441:13:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3434:6:7"},"nodeType":"YulFunctionCall","src":"3434:21:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3423:7:7"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3395:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3405:7:7","type":""}],"src":"3371:90:7"},{"body":{"nodeType":"YulBlock","src":"3526:50:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3543:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3563:5:7"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3548:14:7"},"nodeType":"YulFunctionCall","src":"3548:21:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3536:6:7"},"nodeType":"YulFunctionCall","src":"3536:34:7"},"nodeType":"YulExpressionStatement","src":"3536:34:7"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3514:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3521:3:7","type":""}],"src":"3467:109:7"},{"body":{"nodeType":"YulBlock","src":"3674:118:7","statements":[{"nodeType":"YulAssignment","src":"3684:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3696:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3707:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3692:3:7"},"nodeType":"YulFunctionCall","src":"3692:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3684:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:7"},"nodeType":"YulFunctionCall","src":"3767:17:7"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3720:37:7"},"nodeType":"YulFunctionCall","src":"3720:65:7"},"nodeType":"YulExpressionStatement","src":"3720:65:7"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3646:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3658:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3669:4:7","type":""}],"src":"3582:210:7"},{"body":{"nodeType":"YulBlock","src":"3864:263:7","statements":[{"body":{"nodeType":"YulBlock","src":"3910:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3912:77:7"},"nodeType":"YulFunctionCall","src":"3912:79:7"},"nodeType":"YulExpressionStatement","src":"3912:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3885:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"3894:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3881:3:7"},"nodeType":"YulFunctionCall","src":"3881:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"3906:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3877:3:7"},"nodeType":"YulFunctionCall","src":"3877:32:7"},"nodeType":"YulIf","src":"3874:119:7"},{"nodeType":"YulBlock","src":"4003:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"4018:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"4032:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4022:6:7","type":""}]},{"nodeType":"YulAssignment","src":"4047:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4082:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"4093:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4078:3:7"},"nodeType":"YulFunctionCall","src":"4078:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4102:7:7"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4057:20:7"},"nodeType":"YulFunctionCall","src":"4057:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4047:6:7"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3834:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3845:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3857:6:7","type":""}],"src":"3798:329:7"},{"body":{"nodeType":"YulBlock","src":"4207:40:7","statements":[{"nodeType":"YulAssignment","src":"4218:22:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4234:5:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4228:5:7"},"nodeType":"YulFunctionCall","src":"4228:12:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4218:6:7"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4190:5:7","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4200:6:7","type":""}],"src":"4133:114:7"},{"body":{"nodeType":"YulBlock","src":"4364:73:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4381:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"4386:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4374:6:7"},"nodeType":"YulFunctionCall","src":"4374:19:7"},"nodeType":"YulExpressionStatement","src":"4374:19:7"},{"nodeType":"YulAssignment","src":"4402:29:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4421:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"4426:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4417:3:7"},"nodeType":"YulFunctionCall","src":"4417:14:7"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4402:11:7"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4336:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"4341:6:7","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4352:11:7","type":""}],"src":"4253:184:7"},{"body":{"nodeType":"YulBlock","src":"4515:60:7","statements":[{"nodeType":"YulAssignment","src":"4525:11:7","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4533:3:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4525:4:7"}]},{"nodeType":"YulAssignment","src":"4546:22:7","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4558:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"4563:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:7"},"nodeType":"YulFunctionCall","src":"4554:14:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4546:4:7"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4502:3:7","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4510:4:7","type":""}],"src":"4443:132:7"},{"body":{"nodeType":"YulBlock","src":"4636:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4653:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4676:5:7"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4658:17:7"},"nodeType":"YulFunctionCall","src":"4658:24:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4646:6:7"},"nodeType":"YulFunctionCall","src":"4646:37:7"},"nodeType":"YulExpressionStatement","src":"4646:37:7"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4624:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4631:3:7","type":""}],"src":"4581:108:7"},{"body":{"nodeType":"YulBlock","src":"4775:99:7","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4819:6:7"},{"name":"pos","nodeType":"YulIdentifier","src":"4827:3:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"4785:33:7"},"nodeType":"YulFunctionCall","src":"4785:46:7"},"nodeType":"YulExpressionStatement","src":"4785:46:7"},{"nodeType":"YulAssignment","src":"4840:28:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4858:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"4863:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4854:3:7"},"nodeType":"YulFunctionCall","src":"4854:14:7"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"4840:10:7"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"4748:6:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4756:3:7","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"4764:10:7","type":""}],"src":"4695:179:7"},{"body":{"nodeType":"YulBlock","src":"4955:38:7","statements":[{"nodeType":"YulAssignment","src":"4965:22:7","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4977:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"4982:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4973:3:7"},"nodeType":"YulFunctionCall","src":"4973:14:7"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"4965:4:7"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4942:3:7","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"4950:4:7","type":""}],"src":"4880:113:7"},{"body":{"nodeType":"YulBlock","src":"5153:608:7","statements":[{"nodeType":"YulVariableDeclaration","src":"5163:68:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5225:5:7"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5177:47:7"},"nodeType":"YulFunctionCall","src":"5177:54:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5167:6:7","type":""}]},{"nodeType":"YulAssignment","src":"5240:93:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5321:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"5326:6:7"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5247:73:7"},"nodeType":"YulFunctionCall","src":"5247:86:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5240:3:7"}]},{"nodeType":"YulVariableDeclaration","src":"5342:71:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5407:5:7"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5357:49:7"},"nodeType":"YulFunctionCall","src":"5357:56:7"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"5346:7:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5422:21:7","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"5436:7:7"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5426:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"5512:224:7","statements":[{"nodeType":"YulVariableDeclaration","src":"5526:34:7","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5553:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5547:5:7"},"nodeType":"YulFunctionCall","src":"5547:13:7"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"5530:13:7","type":""}]},{"nodeType":"YulAssignment","src":"5573:70:7","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"5624:13:7"},{"name":"pos","nodeType":"YulIdentifier","src":"5639:3:7"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"5580:43:7"},"nodeType":"YulFunctionCall","src":"5580:63:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5573:3:7"}]},{"nodeType":"YulAssignment","src":"5656:70:7","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5719:6:7"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5666:52:7"},"nodeType":"YulFunctionCall","src":"5666:60:7"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5656:6:7"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5474:1:7"},{"name":"length","nodeType":"YulIdentifier","src":"5477:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5471:2:7"},"nodeType":"YulFunctionCall","src":"5471:13:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5485:18:7","statements":[{"nodeType":"YulAssignment","src":"5487:14:7","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5496:1:7"},{"kind":"number","nodeType":"YulLiteral","src":"5499:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5492:3:7"},"nodeType":"YulFunctionCall","src":"5492:9:7"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5487:1:7"}]}]},"pre":{"nodeType":"YulBlock","src":"5456:14:7","statements":[{"nodeType":"YulVariableDeclaration","src":"5458:10:7","value":{"kind":"number","nodeType":"YulLiteral","src":"5467:1:7","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5462:1:7","type":""}]}]},"src":"5452:284:7"},{"nodeType":"YulAssignment","src":"5745:10:7","value":{"name":"pos","nodeType":"YulIdentifier","src":"5752:3:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5745:3:7"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5132:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5139:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5148:3:7","type":""}],"src":"5029:732:7"},{"body":{"nodeType":"YulBlock","src":"5915:225:7","statements":[{"nodeType":"YulAssignment","src":"5925:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5937:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5948:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5933:3:7"},"nodeType":"YulFunctionCall","src":"5933:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5925:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5972:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5983:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5968:3:7"},"nodeType":"YulFunctionCall","src":"5968:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5991:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"5997:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5987:3:7"},"nodeType":"YulFunctionCall","src":"5987:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5961:6:7"},"nodeType":"YulFunctionCall","src":"5961:47:7"},"nodeType":"YulExpressionStatement","src":"5961:47:7"},{"nodeType":"YulAssignment","src":"6017:116:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6119:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"6128:4:7"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6025:93:7"},"nodeType":"YulFunctionCall","src":"6025:108:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6017:4:7"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5887:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5899:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5910:4:7","type":""}],"src":"5767:373:7"},{"body":{"nodeType":"YulBlock","src":"6246:519:7","statements":[{"body":{"nodeType":"YulBlock","src":"6292:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6294:77:7"},"nodeType":"YulFunctionCall","src":"6294:79:7"},"nodeType":"YulExpressionStatement","src":"6294:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6267:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"6276:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6263:3:7"},"nodeType":"YulFunctionCall","src":"6263:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"6288:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6259:3:7"},"nodeType":"YulFunctionCall","src":"6259:32:7"},"nodeType":"YulIf","src":"6256:119:7"},{"nodeType":"YulBlock","src":"6385:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"6400:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"6414:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6404:6:7","type":""}]},{"nodeType":"YulAssignment","src":"6429:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6464:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"6475:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6460:3:7"},"nodeType":"YulFunctionCall","src":"6460:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6484:7:7"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6439:20:7"},"nodeType":"YulFunctionCall","src":"6439:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6429:6:7"}]}]},{"nodeType":"YulBlock","src":"6512:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"6527:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"6541:2:7","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6531:6:7","type":""}]},{"nodeType":"YulAssignment","src":"6557:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6592:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"6603:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6588:3:7"},"nodeType":"YulFunctionCall","src":"6588:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6612:7:7"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6567:20:7"},"nodeType":"YulFunctionCall","src":"6567:53:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6557:6:7"}]}]},{"nodeType":"YulBlock","src":"6640:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"6655:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"6669:2:7","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6659:6:7","type":""}]},{"nodeType":"YulAssignment","src":"6685:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6720:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"6731:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6716:3:7"},"nodeType":"YulFunctionCall","src":"6716:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6740:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6695:20:7"},"nodeType":"YulFunctionCall","src":"6695:53:7"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6685:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6200:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6211:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6223:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6231:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6239:6:7","type":""}],"src":"6146:619:7"},{"body":{"nodeType":"YulBlock","src":"6879:40:7","statements":[{"nodeType":"YulAssignment","src":"6890:22:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6906:5:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6900:5:7"},"nodeType":"YulFunctionCall","src":"6900:12:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6890:6:7"}]}]},"name":"array_length_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6862:5:7","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6872:6:7","type":""}],"src":"6771:148:7"},{"body":{"nodeType":"YulBlock","src":"7070:73:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7087:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"7092:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7080:6:7"},"nodeType":"YulFunctionCall","src":"7080:19:7"},"nodeType":"YulExpressionStatement","src":"7080:19:7"},{"nodeType":"YulAssignment","src":"7108:29:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7127:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"7132:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7123:3:7"},"nodeType":"YulFunctionCall","src":"7123:14:7"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7108:11:7"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7042:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"7047:6:7","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7058:11:7","type":""}],"src":"6925:218:7"},{"body":{"nodeType":"YulBlock","src":"7255:60:7","statements":[{"nodeType":"YulAssignment","src":"7265:11:7","value":{"name":"ptr","nodeType":"YulIdentifier","src":"7273:3:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7265:4:7"}]},{"nodeType":"YulAssignment","src":"7286:22:7","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7298:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"7303:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7294:3:7"},"nodeType":"YulFunctionCall","src":"7294:14:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7286:4:7"}]}]},"name":"array_dataslot_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7242:3:7","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7250:4:7","type":""}],"src":"7149:166:7"},{"body":{"nodeType":"YulBlock","src":"7376:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7393:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7416:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7398:17:7"},"nodeType":"YulFunctionCall","src":"7398:24:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7386:6:7"},"nodeType":"YulFunctionCall","src":"7386:37:7"},"nodeType":"YulExpressionStatement","src":"7386:37:7"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7364:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7371:3:7","type":""}],"src":"7321:108:7"},{"body":{"nodeType":"YulBlock","src":"7521:73:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7538:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"7543:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7531:6:7"},"nodeType":"YulFunctionCall","src":"7531:19:7"},"nodeType":"YulExpressionStatement","src":"7531:19:7"},{"nodeType":"YulAssignment","src":"7559:29:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7578:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"7583:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7574:3:7"},"nodeType":"YulFunctionCall","src":"7574:14:7"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7559:11:7"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7493:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"7498:6:7","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7509:11:7","type":""}],"src":"7435:159:7"},{"body":{"nodeType":"YulBlock","src":"7682:275:7","statements":[{"nodeType":"YulVariableDeclaration","src":"7692:53:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7739:5:7"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7706:32:7"},"nodeType":"YulFunctionCall","src":"7706:39:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7696:6:7","type":""}]},{"nodeType":"YulAssignment","src":"7754:68:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7810:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"7815:6:7"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7761:48:7"},"nodeType":"YulFunctionCall","src":"7761:61:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7754:3:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7870:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"7877:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7866:3:7"},"nodeType":"YulFunctionCall","src":"7866:16:7"},{"name":"pos","nodeType":"YulIdentifier","src":"7884:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"7889:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7831:34:7"},"nodeType":"YulFunctionCall","src":"7831:65:7"},"nodeType":"YulExpressionStatement","src":"7831:65:7"},{"nodeType":"YulAssignment","src":"7905:46:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7916:3:7"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7943:6:7"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7921:21:7"},"nodeType":"YulFunctionCall","src":"7921:29:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7912:3:7"},"nodeType":"YulFunctionCall","src":"7912:39:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7905:3:7"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7663:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7670:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7678:3:7","type":""}],"src":"7600:357:7"},{"body":{"nodeType":"YulBlock","src":"8181:1020:7","statements":[{"nodeType":"YulVariableDeclaration","src":"8191:26:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8207:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"8212:4:7","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8203:3:7"},"nodeType":"YulFunctionCall","src":"8203:14:7"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"8195:4:7","type":""}]},{"nodeType":"YulBlock","src":"8227:166:7","statements":[{"nodeType":"YulVariableDeclaration","src":"8264:43:7","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8294:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"8301:4:7","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8290:3:7"},"nodeType":"YulFunctionCall","src":"8290:16:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8284:5:7"},"nodeType":"YulFunctionCall","src":"8284:23:7"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8268:12:7","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8354:12:7"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8372:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"8377:4:7","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8368:3:7"},"nodeType":"YulFunctionCall","src":"8368:14:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"8320:33:7"},"nodeType":"YulFunctionCall","src":"8320:63:7"},"nodeType":"YulExpressionStatement","src":"8320:63:7"}]},{"nodeType":"YulBlock","src":"8403:169:7","statements":[{"nodeType":"YulVariableDeclaration","src":"8443:43:7","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8473:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"8480:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8469:3:7"},"nodeType":"YulFunctionCall","src":"8469:16:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8463:5:7"},"nodeType":"YulFunctionCall","src":"8463:23:7"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8447:12:7","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8533:12:7"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8551:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"8556:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8547:3:7"},"nodeType":"YulFunctionCall","src":"8547:14:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"8499:33:7"},"nodeType":"YulFunctionCall","src":"8499:63:7"},"nodeType":"YulExpressionStatement","src":"8499:63:7"}]},{"nodeType":"YulBlock","src":"8582:166:7","statements":[{"nodeType":"YulVariableDeclaration","src":"8619:43:7","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8649:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"8656:4:7","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8645:3:7"},"nodeType":"YulFunctionCall","src":"8645:16:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8639:5:7"},"nodeType":"YulFunctionCall","src":"8639:23:7"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8623:12:7","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8709:12:7"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8727:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"8732:4:7","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8723:3:7"},"nodeType":"YulFunctionCall","src":"8723:14:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8675:33:7"},"nodeType":"YulFunctionCall","src":"8675:63:7"},"nodeType":"YulExpressionStatement","src":"8675:63:7"}]},{"nodeType":"YulBlock","src":"8758:238:7","statements":[{"nodeType":"YulVariableDeclaration","src":"8796:43:7","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8826:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"8833:4:7","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8822:3:7"},"nodeType":"YulFunctionCall","src":"8822:16:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8816:5:7"},"nodeType":"YulFunctionCall","src":"8816:23:7"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8800:12:7","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8864:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"8869:4:7","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8860:3:7"},"nodeType":"YulFunctionCall","src":"8860:14:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8880:4:7"},{"name":"pos","nodeType":"YulIdentifier","src":"8886:3:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8876:3:7"},"nodeType":"YulFunctionCall","src":"8876:14:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8853:6:7"},"nodeType":"YulFunctionCall","src":"8853:38:7"},"nodeType":"YulExpressionStatement","src":"8853:38:7"},{"nodeType":"YulAssignment","src":"8904:81:7","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8966:12:7"},{"name":"tail","nodeType":"YulIdentifier","src":"8980:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8912:53:7"},"nodeType":"YulFunctionCall","src":"8912:73:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8904:4:7"}]}]},{"nodeType":"YulBlock","src":"9006:168:7","statements":[{"nodeType":"YulVariableDeclaration","src":"9045:43:7","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9075:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"9082:4:7","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9071:3:7"},"nodeType":"YulFunctionCall","src":"9071:16:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9065:5:7"},"nodeType":"YulFunctionCall","src":"9065:23:7"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9049:12:7","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9135:12:7"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9153:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"9158:4:7","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9149:3:7"},"nodeType":"YulFunctionCall","src":"9149:14:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9101:33:7"},"nodeType":"YulFunctionCall","src":"9101:63:7"},"nodeType":"YulExpressionStatement","src":"9101:63:7"}]},{"nodeType":"YulAssignment","src":"9184:11:7","value":{"name":"tail","nodeType":"YulIdentifier","src":"9191:4:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:7"}]}]},"name":"abi_encode_t_struct$_TransactionDetail_$947_memory_ptr_to_t_struct$_TransactionDetail_$947_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8160:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8167:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8176:3:7","type":""}],"src":"8049:1152:7"},{"body":{"nodeType":"YulBlock","src":"9355:144:7","statements":[{"nodeType":"YulAssignment","src":"9365:128:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9481:6:7"},{"name":"pos","nodeType":"YulIdentifier","src":"9489:3:7"}],"functionName":{"name":"abi_encode_t_struct$_TransactionDetail_$947_memory_ptr_to_t_struct$_TransactionDetail_$947_memory_ptr","nodeType":"YulIdentifier","src":"9379:101:7"},"nodeType":"YulFunctionCall","src":"9379:114:7"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"9365:10:7"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_TransactionDetail_$947_memory_ptr_to_t_struct$_TransactionDetail_$947_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"9328:6:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9336:3:7","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"9344:10:7","type":""}],"src":"9207:292:7"},{"body":{"nodeType":"YulBlock","src":"9614:38:7","statements":[{"nodeType":"YulAssignment","src":"9624:22:7","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9636:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"9641:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9632:3:7"},"nodeType":"YulFunctionCall","src":"9632:14:7"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"9624:4:7"}]}]},"name":"array_nextElement_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9601:3:7","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"9609:4:7","type":""}],"src":"9505:147:7"},{"body":{"nodeType":"YulBlock","src":"9940:991:7","statements":[{"nodeType":"YulVariableDeclaration","src":"9950:102:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10046:5:7"}],"functionName":{"name":"array_length_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9964:81:7"},"nodeType":"YulFunctionCall","src":"9964:88:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9954:6:7","type":""}]},{"nodeType":"YulAssignment","src":"10061:127:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10176:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"10181:6:7"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10068:107:7"},"nodeType":"YulFunctionCall","src":"10068:120:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10061:3:7"}]},{"nodeType":"YulVariableDeclaration","src":"10197:20:7","value":{"name":"pos","nodeType":"YulIdentifier","src":"10214:3:7"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"10201:9:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10226:39:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10242:3:7"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10251:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"10259:4:7","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10247:3:7"},"nodeType":"YulFunctionCall","src":"10247:17:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10238:3:7"},"nodeType":"YulFunctionCall","src":"10238:27:7"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"10230:4:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10274:105:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10373:5:7"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10289:83:7"},"nodeType":"YulFunctionCall","src":"10289:90:7"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"10278:7:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10388:21:7","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"10402:7:7"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"10392:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"10478:408:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10499:3:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10508:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"10514:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10504:3:7"},"nodeType":"YulFunctionCall","src":"10504:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10492:6:7"},"nodeType":"YulFunctionCall","src":"10492:33:7"},"nodeType":"YulExpressionStatement","src":"10492:33:7"},{"nodeType":"YulVariableDeclaration","src":"10538:34:7","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10565:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10559:5:7"},"nodeType":"YulFunctionCall","src":"10559:13:7"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"10542:13:7","type":""}]},{"nodeType":"YulAssignment","src":"10585:140:7","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"10705:13:7"},{"name":"tail","nodeType":"YulIdentifier","src":"10720:4:7"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_TransactionDetail_$947_memory_ptr_to_t_struct$_TransactionDetail_$947_memory_ptr","nodeType":"YulIdentifier","src":"10593:111:7"},"nodeType":"YulFunctionCall","src":"10593:132:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10585:4:7"}]},{"nodeType":"YulAssignment","src":"10738:104:7","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10835:6:7"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10748:86:7"},"nodeType":"YulFunctionCall","src":"10748:94:7"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10738:6:7"}]},{"nodeType":"YulAssignment","src":"10855:21:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10866:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"10871:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10862:3:7"},"nodeType":"YulFunctionCall","src":"10862:14:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10855:3:7"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10440:1:7"},{"name":"length","nodeType":"YulIdentifier","src":"10443:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10437:2:7"},"nodeType":"YulFunctionCall","src":"10437:13:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10451:18:7","statements":[{"nodeType":"YulAssignment","src":"10453:14:7","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10462:1:7"},{"kind":"number","nodeType":"YulLiteral","src":"10465:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10458:3:7"},"nodeType":"YulFunctionCall","src":"10458:9:7"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10453:1:7"}]}]},"pre":{"nodeType":"YulBlock","src":"10422:14:7","statements":[{"nodeType":"YulVariableDeclaration","src":"10424:10:7","value":{"kind":"number","nodeType":"YulLiteral","src":"10433:1:7","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10428:1:7","type":""}]}]},"src":"10418:468:7"},{"nodeType":"YulAssignment","src":"10895:11:7","value":{"name":"tail","nodeType":"YulIdentifier","src":"10902:4:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10895:3:7"}]},{"nodeType":"YulAssignment","src":"10915:10:7","value":{"name":"pos","nodeType":"YulIdentifier","src":"10922:3:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10915:3:7"}]}]},"name":"abi_encode_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9919:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9926:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9935:3:7","type":""}],"src":"9748:1183:7"},{"body":{"nodeType":"YulBlock","src":"11153:293:7","statements":[{"nodeType":"YulAssignment","src":"11163:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11175:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"11186:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11171:3:7"},"nodeType":"YulFunctionCall","src":"11171:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11163:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11210:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"11221:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11206:3:7"},"nodeType":"YulFunctionCall","src":"11206:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11229:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"11235:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11225:3:7"},"nodeType":"YulFunctionCall","src":"11225:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11199:6:7"},"nodeType":"YulFunctionCall","src":"11199:47:7"},"nodeType":"YulExpressionStatement","src":"11199:47:7"},{"nodeType":"YulAssignment","src":"11255:184:7","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11425:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"11434:4:7"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11263:161:7"},"nodeType":"YulFunctionCall","src":"11263:176:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11255:4:7"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11125:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11137:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11148:4:7","type":""}],"src":"10937:509:7"},{"body":{"nodeType":"YulBlock","src":"11495:43:7","statements":[{"nodeType":"YulAssignment","src":"11505:27:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11520:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"11527:4:7","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11516:3:7"},"nodeType":"YulFunctionCall","src":"11516:16:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11505:7:7"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11477:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11487:7:7","type":""}],"src":"11452:86:7"},{"body":{"nodeType":"YulBlock","src":"11605:51:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11622:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11643:5:7"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"11627:15:7"},"nodeType":"YulFunctionCall","src":"11627:22:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11615:6:7"},"nodeType":"YulFunctionCall","src":"11615:35:7"},"nodeType":"YulExpressionStatement","src":"11615:35:7"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11593:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11600:3:7","type":""}],"src":"11544:112:7"},{"body":{"nodeType":"YulBlock","src":"11756:120:7","statements":[{"nodeType":"YulAssignment","src":"11766:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11778:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"11789:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11774:3:7"},"nodeType":"YulFunctionCall","src":"11774:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11766:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11842:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11855:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"11866:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11851:3:7"},"nodeType":"YulFunctionCall","src":"11851:17:7"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"11802:39:7"},"nodeType":"YulFunctionCall","src":"11802:67:7"},"nodeType":"YulExpressionStatement","src":"11802:67:7"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11728:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11740:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11751:4:7","type":""}],"src":"11662:214:7"},{"body":{"nodeType":"YulBlock","src":"11948:263:7","statements":[{"body":{"nodeType":"YulBlock","src":"11994:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11996:77:7"},"nodeType":"YulFunctionCall","src":"11996:79:7"},"nodeType":"YulExpressionStatement","src":"11996:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11969:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"11978:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11965:3:7"},"nodeType":"YulFunctionCall","src":"11965:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"11990:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11961:3:7"},"nodeType":"YulFunctionCall","src":"11961:32:7"},"nodeType":"YulIf","src":"11958:119:7"},{"nodeType":"YulBlock","src":"12087:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"12102:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"12116:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12106:6:7","type":""}]},{"nodeType":"YulAssignment","src":"12131:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12166:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"12177:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12162:3:7"},"nodeType":"YulFunctionCall","src":"12162:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12186:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12141:20:7"},"nodeType":"YulFunctionCall","src":"12141:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12131:6:7"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11918:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11929:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11941:6:7","type":""}],"src":"11882:329:7"},{"body":{"nodeType":"YulBlock","src":"12282:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12299:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12322:5:7"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"12304:17:7"},"nodeType":"YulFunctionCall","src":"12304:24:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12292:6:7"},"nodeType":"YulFunctionCall","src":"12292:37:7"},"nodeType":"YulExpressionStatement","src":"12292:37:7"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12270:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12277:3:7","type":""}],"src":"12217:118:7"},{"body":{"nodeType":"YulBlock","src":"12439:124:7","statements":[{"nodeType":"YulAssignment","src":"12449:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12461:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"12472:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12457:3:7"},"nodeType":"YulFunctionCall","src":"12457:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12449:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12529:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12542:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"12553:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12538:3:7"},"nodeType":"YulFunctionCall","src":"12538:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12485:43:7"},"nodeType":"YulFunctionCall","src":"12485:71:7"},"nodeType":"YulExpressionStatement","src":"12485:71:7"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12411:9:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12423:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12434:4:7","type":""}],"src":"12341:222:7"},{"body":{"nodeType":"YulBlock","src":"12622:51:7","statements":[{"nodeType":"YulAssignment","src":"12632:35:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12661:5:7"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"12643:17:7"},"nodeType":"YulFunctionCall","src":"12643:24:7"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12632:7:7"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12604:5:7","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12614:7:7","type":""}],"src":"12569:104:7"},{"body":{"nodeType":"YulBlock","src":"12730:87:7","statements":[{"body":{"nodeType":"YulBlock","src":"12795:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12804:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12807:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12797:6:7"},"nodeType":"YulFunctionCall","src":"12797:12:7"},"nodeType":"YulExpressionStatement","src":"12797:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12753:5:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12786:5:7"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"12760:25:7"},"nodeType":"YulFunctionCall","src":"12760:32:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12750:2:7"},"nodeType":"YulFunctionCall","src":"12750:43:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12743:6:7"},"nodeType":"YulFunctionCall","src":"12743:51:7"},"nodeType":"YulIf","src":"12740:71:7"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12723:5:7","type":""}],"src":"12679:138:7"},{"body":{"nodeType":"YulBlock","src":"12883:95:7","statements":[{"nodeType":"YulAssignment","src":"12893:29:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12915:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12902:12:7"},"nodeType":"YulFunctionCall","src":"12902:20:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12893:5:7"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12966:5:7"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"12931:34:7"},"nodeType":"YulFunctionCall","src":"12931:41:7"},"nodeType":"YulExpressionStatement","src":"12931:41:7"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12861:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"12869:3:7","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12877:5:7","type":""}],"src":"12823:155:7"},{"body":{"nodeType":"YulBlock","src":"13073:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13090:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13093:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13083:6:7"},"nodeType":"YulFunctionCall","src":"13083:12:7"},"nodeType":"YulExpressionStatement","src":"13083:12:7"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"12984:117:7"},{"body":{"nodeType":"YulBlock","src":"13196:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13213:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13216:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13206:6:7"},"nodeType":"YulFunctionCall","src":"13206:12:7"},"nodeType":"YulExpressionStatement","src":"13206:12:7"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"13107:117:7"},{"body":{"nodeType":"YulBlock","src":"13258:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13275:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13278:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13268:6:7"},"nodeType":"YulFunctionCall","src":"13268:88:7"},"nodeType":"YulExpressionStatement","src":"13268:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13372:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13375:4:7","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13365:6:7"},"nodeType":"YulFunctionCall","src":"13365:15:7"},"nodeType":"YulExpressionStatement","src":"13365:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13396:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13399:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13389:6:7"},"nodeType":"YulFunctionCall","src":"13389:15:7"},"nodeType":"YulExpressionStatement","src":"13389:15:7"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"13230:180:7"},{"body":{"nodeType":"YulBlock","src":"13459:238:7","statements":[{"nodeType":"YulVariableDeclaration","src":"13469:58:7","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13491:6:7"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"13521:4:7"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13499:21:7"},"nodeType":"YulFunctionCall","src":"13499:27:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13487:3:7"},"nodeType":"YulFunctionCall","src":"13487:40:7"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"13473:10:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"13638:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13640:16:7"},"nodeType":"YulFunctionCall","src":"13640:18:7"},"nodeType":"YulExpressionStatement","src":"13640:18:7"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"13581:10:7"},{"kind":"number","nodeType":"YulLiteral","src":"13593:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13578:2:7"},"nodeType":"YulFunctionCall","src":"13578:34:7"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"13617:10:7"},{"name":"memPtr","nodeType":"YulIdentifier","src":"13629:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13614:2:7"},"nodeType":"YulFunctionCall","src":"13614:22:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"13575:2:7"},"nodeType":"YulFunctionCall","src":"13575:62:7"},"nodeType":"YulIf","src":"13572:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13676:2:7","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"13680:10:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13669:6:7"},"nodeType":"YulFunctionCall","src":"13669:22:7"},"nodeType":"YulExpressionStatement","src":"13669:22:7"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13445:6:7","type":""},{"name":"size","nodeType":"YulTypedName","src":"13453:4:7","type":""}],"src":"13416:281:7"},{"body":{"nodeType":"YulBlock","src":"13744:88:7","statements":[{"nodeType":"YulAssignment","src":"13754:30:7","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"13764:18:7"},"nodeType":"YulFunctionCall","src":"13764:20:7"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13754:6:7"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13813:6:7"},{"name":"size","nodeType":"YulIdentifier","src":"13821:4:7"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"13793:19:7"},"nodeType":"YulFunctionCall","src":"13793:33:7"},"nodeType":"YulExpressionStatement","src":"13793:33:7"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"13728:4:7","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"13737:6:7","type":""}],"src":"13703:129:7"},{"body":{"nodeType":"YulBlock","src":"13905:241:7","statements":[{"body":{"nodeType":"YulBlock","src":"14010:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14012:16:7"},"nodeType":"YulFunctionCall","src":"14012:18:7"},"nodeType":"YulExpressionStatement","src":"14012:18:7"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13982:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"13990:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13979:2:7"},"nodeType":"YulFunctionCall","src":"13979:30:7"},"nodeType":"YulIf","src":"13976:56:7"},{"nodeType":"YulAssignment","src":"14042:37:7","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14072:6:7"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14050:21:7"},"nodeType":"YulFunctionCall","src":"14050:29:7"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14042:4:7"}]},{"nodeType":"YulAssignment","src":"14116:23:7","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"14128:4:7"},{"kind":"number","nodeType":"YulLiteral","src":"14134:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14124:3:7"},"nodeType":"YulFunctionCall","src":"14124:15:7"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14116:4:7"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"13889:6:7","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"13900:4:7","type":""}],"src":"13838:308:7"},{"body":{"nodeType":"YulBlock","src":"14216:82:7","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14239:3:7"},{"name":"src","nodeType":"YulIdentifier","src":"14244:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"14249:6:7"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"14226:12:7"},"nodeType":"YulFunctionCall","src":"14226:30:7"},"nodeType":"YulExpressionStatement","src":"14226:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14276:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"14281:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14272:3:7"},"nodeType":"YulFunctionCall","src":"14272:16:7"},{"kind":"number","nodeType":"YulLiteral","src":"14290:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14265:6:7"},"nodeType":"YulFunctionCall","src":"14265:27:7"},"nodeType":"YulExpressionStatement","src":"14265:27:7"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"14198:3:7","type":""},{"name":"dst","nodeType":"YulTypedName","src":"14203:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"14208:6:7","type":""}],"src":"14152:146:7"},{"body":{"nodeType":"YulBlock","src":"14388:341:7","statements":[{"nodeType":"YulAssignment","src":"14398:75:7","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14465:6:7"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14423:41:7"},"nodeType":"YulFunctionCall","src":"14423:49:7"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"14407:15:7"},"nodeType":"YulFunctionCall","src":"14407:66:7"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"14398:5:7"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"14489:5:7"},{"name":"length","nodeType":"YulIdentifier","src":"14496:6:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14482:6:7"},"nodeType":"YulFunctionCall","src":"14482:21:7"},"nodeType":"YulExpressionStatement","src":"14482:21:7"},{"nodeType":"YulVariableDeclaration","src":"14512:27:7","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"14527:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"14534:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14523:3:7"},"nodeType":"YulFunctionCall","src":"14523:16:7"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"14516:3:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"14577:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"14579:77:7"},"nodeType":"YulFunctionCall","src":"14579:79:7"},"nodeType":"YulExpressionStatement","src":"14579:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14558:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"14563:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14554:3:7"},"nodeType":"YulFunctionCall","src":"14554:16:7"},{"name":"end","nodeType":"YulIdentifier","src":"14572:3:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14551:2:7"},"nodeType":"YulFunctionCall","src":"14551:25:7"},"nodeType":"YulIf","src":"14548:112:7"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14706:3:7"},{"name":"dst","nodeType":"YulIdentifier","src":"14711:3:7"},{"name":"length","nodeType":"YulIdentifier","src":"14716:6:7"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"14669:36:7"},"nodeType":"YulFunctionCall","src":"14669:54:7"},"nodeType":"YulExpressionStatement","src":"14669:54:7"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"14361:3:7","type":""},{"name":"length","nodeType":"YulTypedName","src":"14366:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"14374:3:7","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"14382:5:7","type":""}],"src":"14304:425:7"},{"body":{"nodeType":"YulBlock","src":"14811:278:7","statements":[{"body":{"nodeType":"YulBlock","src":"14860:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"14862:77:7"},"nodeType":"YulFunctionCall","src":"14862:79:7"},"nodeType":"YulExpressionStatement","src":"14862:79:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14839:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"14847:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14835:3:7"},"nodeType":"YulFunctionCall","src":"14835:17:7"},{"name":"end","nodeType":"YulIdentifier","src":"14854:3:7"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14831:3:7"},"nodeType":"YulFunctionCall","src":"14831:27:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14824:6:7"},"nodeType":"YulFunctionCall","src":"14824:35:7"},"nodeType":"YulIf","src":"14821:122:7"},{"nodeType":"YulVariableDeclaration","src":"14952:34:7","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14979:6:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14966:12:7"},"nodeType":"YulFunctionCall","src":"14966:20:7"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14956:6:7","type":""}]},{"nodeType":"YulAssignment","src":"14995:88:7","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15056:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"15064:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15052:3:7"},"nodeType":"YulFunctionCall","src":"15052:17:7"},{"name":"length","nodeType":"YulIdentifier","src":"15071:6:7"},{"name":"end","nodeType":"YulIdentifier","src":"15079:3:7"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15004:47:7"},"nodeType":"YulFunctionCall","src":"15004:79:7"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"14995:5:7"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14789:6:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"14797:3:7","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"14805:5:7","type":""}],"src":"14749:340:7"},{"body":{"nodeType":"YulBlock","src":"15213:697:7","statements":[{"body":{"nodeType":"YulBlock","src":"15259:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15261:77:7"},"nodeType":"YulFunctionCall","src":"15261:79:7"},"nodeType":"YulExpressionStatement","src":"15261:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15234:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"15243:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15230:3:7"},"nodeType":"YulFunctionCall","src":"15230:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"15255:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15226:3:7"},"nodeType":"YulFunctionCall","src":"15226:32:7"},"nodeType":"YulIf","src":"15223:119:7"},{"nodeType":"YulBlock","src":"15352:125:7","statements":[{"nodeType":"YulVariableDeclaration","src":"15367:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"15381:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15371:6:7","type":""}]},{"nodeType":"YulAssignment","src":"15396:71:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15439:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"15450:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15435:3:7"},"nodeType":"YulFunctionCall","src":"15435:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15459:7:7"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"15406:28:7"},"nodeType":"YulFunctionCall","src":"15406:61:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15396:6:7"}]}]},{"nodeType":"YulBlock","src":"15487:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"15502:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"15516:2:7","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15506:6:7","type":""}]},{"nodeType":"YulAssignment","src":"15532:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15567:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"15578:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15563:3:7"},"nodeType":"YulFunctionCall","src":"15563:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15587:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15542:20:7"},"nodeType":"YulFunctionCall","src":"15542:53:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15532:6:7"}]}]},{"nodeType":"YulBlock","src":"15615:288:7","statements":[{"nodeType":"YulVariableDeclaration","src":"15630:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15661:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"15672:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15657:3:7"},"nodeType":"YulFunctionCall","src":"15657:18:7"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15644:12:7"},"nodeType":"YulFunctionCall","src":"15644:32:7"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15634:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"15723:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15725:77:7"},"nodeType":"YulFunctionCall","src":"15725:79:7"},"nodeType":"YulExpressionStatement","src":"15725:79:7"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15695:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"15703:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15692:2:7"},"nodeType":"YulFunctionCall","src":"15692:30:7"},"nodeType":"YulIf","src":"15689:117:7"},{"nodeType":"YulAssignment","src":"15820:73:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15865:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"15876:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15861:3:7"},"nodeType":"YulFunctionCall","src":"15861:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15885:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15830:30:7"},"nodeType":"YulFunctionCall","src":"15830:63:7"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"15820:6:7"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15167:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15178:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15190:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15198:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15206:6:7","type":""}],"src":"15095:815:7"},{"body":{"nodeType":"YulBlock","src":"15999:391:7","statements":[{"body":{"nodeType":"YulBlock","src":"16045:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16047:77:7"},"nodeType":"YulFunctionCall","src":"16047:79:7"},"nodeType":"YulExpressionStatement","src":"16047:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16020:7:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"16029:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16016:3:7"},"nodeType":"YulFunctionCall","src":"16016:23:7"},{"kind":"number","nodeType":"YulLiteral","src":"16041:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16012:3:7"},"nodeType":"YulFunctionCall","src":"16012:32:7"},"nodeType":"YulIf","src":"16009:119:7"},{"nodeType":"YulBlock","src":"16138:117:7","statements":[{"nodeType":"YulVariableDeclaration","src":"16153:15:7","value":{"kind":"number","nodeType":"YulLiteral","src":"16167:1:7","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16157:6:7","type":""}]},{"nodeType":"YulAssignment","src":"16182:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16217:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"16228:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16213:3:7"},"nodeType":"YulFunctionCall","src":"16213:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16237:7:7"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16192:20:7"},"nodeType":"YulFunctionCall","src":"16192:53:7"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16182:6:7"}]}]},{"nodeType":"YulBlock","src":"16265:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"16280:16:7","value":{"kind":"number","nodeType":"YulLiteral","src":"16294:2:7","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16284:6:7","type":""}]},{"nodeType":"YulAssignment","src":"16310:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16345:9:7"},{"name":"offset","nodeType":"YulIdentifier","src":"16356:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16341:3:7"},"nodeType":"YulFunctionCall","src":"16341:22:7"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16365:7:7"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16320:20:7"},"nodeType":"YulFunctionCall","src":"16320:53:7"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16310:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15961:9:7","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15972:7:7","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15984:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15992:6:7","type":""}],"src":"15916:474:7"},{"body":{"nodeType":"YulBlock","src":"16424:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16441:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16444:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16434:6:7"},"nodeType":"YulFunctionCall","src":"16434:88:7"},"nodeType":"YulExpressionStatement","src":"16434:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16538:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16541:4:7","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16531:6:7"},"nodeType":"YulFunctionCall","src":"16531:15:7"},"nodeType":"YulExpressionStatement","src":"16531:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16562:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16565:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16555:6:7"},"nodeType":"YulFunctionCall","src":"16555:15:7"},"nodeType":"YulExpressionStatement","src":"16555:15:7"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"16396:180:7"},{"body":{"nodeType":"YulBlock","src":"16633:269:7","statements":[{"nodeType":"YulAssignment","src":"16643:22:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16657:4:7"},{"kind":"number","nodeType":"YulLiteral","src":"16663:1:7","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16653:3:7"},"nodeType":"YulFunctionCall","src":"16653:12:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16643:6:7"}]},{"nodeType":"YulVariableDeclaration","src":"16674:38:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16704:4:7"},{"kind":"number","nodeType":"YulLiteral","src":"16710:1:7","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16700:3:7"},"nodeType":"YulFunctionCall","src":"16700:12:7"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"16678:18:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"16751:51:7","statements":[{"nodeType":"YulAssignment","src":"16765:27:7","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16779:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"16787:4:7","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16775:3:7"},"nodeType":"YulFunctionCall","src":"16775:17:7"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16765:6:7"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16731:18:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16724:6:7"},"nodeType":"YulFunctionCall","src":"16724:26:7"},"nodeType":"YulIf","src":"16721:81:7"},{"body":{"nodeType":"YulBlock","src":"16854:42:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"16868:16:7"},"nodeType":"YulFunctionCall","src":"16868:18:7"},"nodeType":"YulExpressionStatement","src":"16868:18:7"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16818:18:7"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16841:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"16849:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16838:2:7"},"nodeType":"YulFunctionCall","src":"16838:14:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16815:2:7"},"nodeType":"YulFunctionCall","src":"16815:38:7"},"nodeType":"YulIf","src":"16812:84:7"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"16617:4:7","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16626:6:7","type":""}],"src":"16582:320:7"},{"body":{"nodeType":"YulBlock","src":"16936:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16953:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16956:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16946:6:7"},"nodeType":"YulFunctionCall","src":"16946:88:7"},"nodeType":"YulExpressionStatement","src":"16946:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17050:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17053:4:7","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17043:6:7"},"nodeType":"YulFunctionCall","src":"17043:15:7"},"nodeType":"YulExpressionStatement","src":"17043:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17074:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17077:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17067:6:7"},"nodeType":"YulFunctionCall","src":"17067:15:7"},"nodeType":"YulExpressionStatement","src":"17067:15:7"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"16908:180:7"},{"body":{"nodeType":"YulBlock","src":"17122:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17139:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17142:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17132:6:7"},"nodeType":"YulFunctionCall","src":"17132:88:7"},"nodeType":"YulExpressionStatement","src":"17132:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17236:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17239:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17229:6:7"},"nodeType":"YulFunctionCall","src":"17229:15:7"},"nodeType":"YulExpressionStatement","src":"17229:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17260:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17263:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17253:6:7"},"nodeType":"YulFunctionCall","src":"17253:15:7"},"nodeType":"YulExpressionStatement","src":"17253:15:7"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"17094:180:7"},{"body":{"nodeType":"YulBlock","src":"17323:190:7","statements":[{"nodeType":"YulAssignment","src":"17333:33:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17360:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17342:17:7"},"nodeType":"YulFunctionCall","src":"17342:24:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17333:5:7"}]},{"body":{"nodeType":"YulBlock","src":"17456:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17458:16:7"},"nodeType":"YulFunctionCall","src":"17458:18:7"},"nodeType":"YulExpressionStatement","src":"17458:18:7"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17381:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"17388:66:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17378:2:7"},"nodeType":"YulFunctionCall","src":"17378:77:7"},"nodeType":"YulIf","src":"17375:103:7"},{"nodeType":"YulAssignment","src":"17487:20:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17498:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"17505:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17494:3:7"},"nodeType":"YulFunctionCall","src":"17494:13:7"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"17487:3:7"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17309:5:7","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"17319:3:7","type":""}],"src":"17280:233:7"},{"body":{"nodeType":"YulBlock","src":"17625:72:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17647:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"17655:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17643:3:7"},"nodeType":"YulFunctionCall","src":"17643:14:7"},{"hexValue":"596f7572206163636f756e7420686173206265656e2066726f7a656e","kind":"string","nodeType":"YulLiteral","src":"17659:30:7","type":"","value":"Your account has been frozen"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17636:6:7"},"nodeType":"YulFunctionCall","src":"17636:54:7"},"nodeType":"YulExpressionStatement","src":"17636:54:7"}]},"name":"store_literal_in_memory_6d84ad26e31dab99602e5848e20a3d31d72f14ed2a8a92b5d806058164b59134","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17617:6:7","type":""}],"src":"17519:178:7"},{"body":{"nodeType":"YulBlock","src":"17849:220:7","statements":[{"nodeType":"YulAssignment","src":"17859:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17925:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"17930:2:7","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17866:58:7"},"nodeType":"YulFunctionCall","src":"17866:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17859:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18031:3:7"}],"functionName":{"name":"store_literal_in_memory_6d84ad26e31dab99602e5848e20a3d31d72f14ed2a8a92b5d806058164b59134","nodeType":"YulIdentifier","src":"17942:88:7"},"nodeType":"YulFunctionCall","src":"17942:93:7"},"nodeType":"YulExpressionStatement","src":"17942:93:7"},{"nodeType":"YulAssignment","src":"18044:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18055:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"18060:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18051:3:7"},"nodeType":"YulFunctionCall","src":"18051:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18044:3:7"}]}]},"name":"abi_encode_t_stringliteral_6d84ad26e31dab99602e5848e20a3d31d72f14ed2a8a92b5d806058164b59134_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17837:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17845:3:7","type":""}],"src":"17703:366:7"},{"body":{"nodeType":"YulBlock","src":"18246:248:7","statements":[{"nodeType":"YulAssignment","src":"18256:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18268:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"18279:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18264:3:7"},"nodeType":"YulFunctionCall","src":"18264:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18256:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18303:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"18314:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18299:3:7"},"nodeType":"YulFunctionCall","src":"18299:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18322:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"18328:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18318:3:7"},"nodeType":"YulFunctionCall","src":"18318:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18292:6:7"},"nodeType":"YulFunctionCall","src":"18292:47:7"},"nodeType":"YulExpressionStatement","src":"18292:47:7"},{"nodeType":"YulAssignment","src":"18348:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18482:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_6d84ad26e31dab99602e5848e20a3d31d72f14ed2a8a92b5d806058164b59134_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18356:124:7"},"nodeType":"YulFunctionCall","src":"18356:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18348:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d84ad26e31dab99602e5848e20a3d31d72f14ed2a8a92b5d806058164b59134__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18226:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18241:4:7","type":""}],"src":"18075:419:7"},{"body":{"nodeType":"YulBlock","src":"18544:147:7","statements":[{"nodeType":"YulAssignment","src":"18554:25:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18577:1:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18559:17:7"},"nodeType":"YulFunctionCall","src":"18559:20:7"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18554:1:7"}]},{"nodeType":"YulAssignment","src":"18588:25:7","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18611:1:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18593:17:7"},"nodeType":"YulFunctionCall","src":"18593:20:7"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18588:1:7"}]},{"nodeType":"YulAssignment","src":"18622:16:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18633:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"18636:1:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18629:3:7"},"nodeType":"YulFunctionCall","src":"18629:9:7"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"18622:3:7"}]},{"body":{"nodeType":"YulBlock","src":"18662:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18664:16:7"},"nodeType":"YulFunctionCall","src":"18664:18:7"},"nodeType":"YulExpressionStatement","src":"18664:18:7"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18654:1:7"},{"name":"sum","nodeType":"YulIdentifier","src":"18657:3:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18651:2:7"},"nodeType":"YulFunctionCall","src":"18651:10:7"},"nodeType":"YulIf","src":"18648:36:7"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18531:1:7","type":""},{"name":"y","nodeType":"YulTypedName","src":"18534:1:7","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"18540:3:7","type":""}],"src":"18500:191:7"},{"body":{"nodeType":"YulBlock","src":"18751:87:7","statements":[{"nodeType":"YulAssignment","src":"18761:11:7","value":{"name":"ptr","nodeType":"YulIdentifier","src":"18769:3:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"18761:4:7"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18789:1:7","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"18792:3:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18782:6:7"},"nodeType":"YulFunctionCall","src":"18782:14:7"},"nodeType":"YulExpressionStatement","src":"18782:14:7"},{"nodeType":"YulAssignment","src":"18805:26:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18823:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18826:4:7","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"18813:9:7"},"nodeType":"YulFunctionCall","src":"18813:18:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"18805:4:7"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"18738:3:7","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"18746:4:7","type":""}],"src":"18697:141:7"},{"body":{"nodeType":"YulBlock","src":"18888:49:7","statements":[{"nodeType":"YulAssignment","src":"18898:33:7","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18916:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"18923:2:7","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18912:3:7"},"nodeType":"YulFunctionCall","src":"18912:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"18928:2:7","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18908:3:7"},"nodeType":"YulFunctionCall","src":"18908:23:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18898:6:7"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18871:5:7","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"18881:6:7","type":""}],"src":"18844:93:7"},{"body":{"nodeType":"YulBlock","src":"18996:54:7","statements":[{"nodeType":"YulAssignment","src":"19006:37:7","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"19031:4:7"},{"name":"value","nodeType":"YulIdentifier","src":"19037:5:7"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19027:3:7"},"nodeType":"YulFunctionCall","src":"19027:16:7"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"19006:8:7"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"18971:4:7","type":""},{"name":"value","nodeType":"YulTypedName","src":"18977:5:7","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"18987:8:7","type":""}],"src":"18943:107:7"},{"body":{"nodeType":"YulBlock","src":"19132:317:7","statements":[{"nodeType":"YulVariableDeclaration","src":"19142:35:7","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"19163:10:7"},{"kind":"number","nodeType":"YulLiteral","src":"19175:1:7","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19159:3:7"},"nodeType":"YulFunctionCall","src":"19159:18:7"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"19146:9:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19186:109:7","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"19217:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"19228:66:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"19198:18:7"},"nodeType":"YulFunctionCall","src":"19198:97:7"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"19190:4:7","type":""}]},{"nodeType":"YulAssignment","src":"19304:51:7","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"19335:9:7"},{"name":"toInsert","nodeType":"YulIdentifier","src":"19346:8:7"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"19316:18:7"},"nodeType":"YulFunctionCall","src":"19316:39:7"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"19304:8:7"}]},{"nodeType":"YulAssignment","src":"19364:30:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19377:5:7"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"19388:4:7"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19384:3:7"},"nodeType":"YulFunctionCall","src":"19384:9:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19373:3:7"},"nodeType":"YulFunctionCall","src":"19373:21:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19364:5:7"}]},{"nodeType":"YulAssignment","src":"19403:40:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19416:5:7"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"19427:8:7"},{"name":"mask","nodeType":"YulIdentifier","src":"19437:4:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19423:3:7"},"nodeType":"YulFunctionCall","src":"19423:19:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19413:2:7"},"nodeType":"YulFunctionCall","src":"19413:30:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"19403:6:7"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19093:5:7","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"19100:10:7","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"19112:8:7","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"19125:6:7","type":""}],"src":"19056:393:7"},{"body":{"nodeType":"YulBlock","src":"19487:28:7","statements":[{"nodeType":"YulAssignment","src":"19497:12:7","value":{"name":"value","nodeType":"YulIdentifier","src":"19504:5:7"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19497:3:7"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19473:5:7","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19483:3:7","type":""}],"src":"19455:60:7"},{"body":{"nodeType":"YulBlock","src":"19581:82:7","statements":[{"nodeType":"YulAssignment","src":"19591:66:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19649:5:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19631:17:7"},"nodeType":"YulFunctionCall","src":"19631:24:7"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"19622:8:7"},"nodeType":"YulFunctionCall","src":"19622:34:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19604:17:7"},"nodeType":"YulFunctionCall","src":"19604:53:7"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"19591:9:7"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19561:5:7","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"19571:9:7","type":""}],"src":"19521:142:7"},{"body":{"nodeType":"YulBlock","src":"19716:28:7","statements":[{"nodeType":"YulAssignment","src":"19726:12:7","value":{"name":"value","nodeType":"YulIdentifier","src":"19733:5:7"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19726:3:7"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19702:5:7","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19712:3:7","type":""}],"src":"19669:75:7"},{"body":{"nodeType":"YulBlock","src":"19826:193:7","statements":[{"nodeType":"YulVariableDeclaration","src":"19836:63:7","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"19891:7:7"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"19860:30:7"},"nodeType":"YulFunctionCall","src":"19860:39:7"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"19840:16:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19915:4:7"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19955:4:7"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"19949:5:7"},"nodeType":"YulFunctionCall","src":"19949:11:7"},{"name":"offset","nodeType":"YulIdentifier","src":"19962:6:7"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"19994:16:7"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"19970:23:7"},"nodeType":"YulFunctionCall","src":"19970:41:7"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"19921:27:7"},"nodeType":"YulFunctionCall","src":"19921:91:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19908:6:7"},"nodeType":"YulFunctionCall","src":"19908:105:7"},"nodeType":"YulExpressionStatement","src":"19908:105:7"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"19803:4:7","type":""},{"name":"offset","nodeType":"YulTypedName","src":"19809:6:7","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"19817:7:7","type":""}],"src":"19750:269:7"},{"body":{"nodeType":"YulBlock","src":"20074:24:7","statements":[{"nodeType":"YulAssignment","src":"20084:8:7","value":{"kind":"number","nodeType":"YulLiteral","src":"20091:1:7","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20084:3:7"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"20070:3:7","type":""}],"src":"20025:73:7"},{"body":{"nodeType":"YulBlock","src":"20157:136:7","statements":[{"nodeType":"YulVariableDeclaration","src":"20167:46:7","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"20181:30:7"},"nodeType":"YulFunctionCall","src":"20181:32:7"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"20171:6:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20266:4:7"},{"name":"offset","nodeType":"YulIdentifier","src":"20272:6:7"},{"name":"zero_0","nodeType":"YulIdentifier","src":"20280:6:7"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"20222:43:7"},"nodeType":"YulFunctionCall","src":"20222:65:7"},"nodeType":"YulExpressionStatement","src":"20222:65:7"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"20143:4:7","type":""},{"name":"offset","nodeType":"YulTypedName","src":"20149:6:7","type":""}],"src":"20104:189:7"},{"body":{"nodeType":"YulBlock","src":"20349:136:7","statements":[{"body":{"nodeType":"YulBlock","src":"20416:63:7","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"20460:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"20467:1:7","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"20430:29:7"},"nodeType":"YulFunctionCall","src":"20430:39:7"},"nodeType":"YulExpressionStatement","src":"20430:39:7"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"20369:5:7"},{"name":"end","nodeType":"YulIdentifier","src":"20376:3:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20366:2:7"},"nodeType":"YulFunctionCall","src":"20366:14:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20381:26:7","statements":[{"nodeType":"YulAssignment","src":"20383:22:7","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"20396:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"20403:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20392:3:7"},"nodeType":"YulFunctionCall","src":"20392:13:7"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"20383:5:7"}]}]},"pre":{"nodeType":"YulBlock","src":"20363:2:7","statements":[]},"src":"20359:120:7"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"20337:5:7","type":""},{"name":"end","nodeType":"YulTypedName","src":"20344:3:7","type":""}],"src":"20299:186:7"},{"body":{"nodeType":"YulBlock","src":"20570:464:7","statements":[{"body":{"nodeType":"YulBlock","src":"20596:431:7","statements":[{"nodeType":"YulVariableDeclaration","src":"20610:54:7","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"20658:5:7"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"20626:31:7"},"nodeType":"YulFunctionCall","src":"20626:38:7"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"20614:8:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20677:63:7","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"20700:8:7"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"20728:10:7"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"20710:17:7"},"nodeType":"YulFunctionCall","src":"20710:29:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20696:3:7"},"nodeType":"YulFunctionCall","src":"20696:44:7"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"20681:11:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"20897:27:7","statements":[{"nodeType":"YulAssignment","src":"20899:23:7","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"20914:8:7"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"20899:11:7"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"20881:10:7"},{"kind":"number","nodeType":"YulLiteral","src":"20893:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20878:2:7"},"nodeType":"YulFunctionCall","src":"20878:18:7"},"nodeType":"YulIf","src":"20875:49:7"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"20966:11:7"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"20983:8:7"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"21011:3:7"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"20993:17:7"},"nodeType":"YulFunctionCall","src":"20993:22:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20979:3:7"},"nodeType":"YulFunctionCall","src":"20979:37:7"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"20937:28:7"},"nodeType":"YulFunctionCall","src":"20937:80:7"},"nodeType":"YulExpressionStatement","src":"20937:80:7"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"20587:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"20592:2:7","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20584:2:7"},"nodeType":"YulFunctionCall","src":"20584:11:7"},"nodeType":"YulIf","src":"20581:446:7"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"20546:5:7","type":""},{"name":"len","nodeType":"YulTypedName","src":"20553:3:7","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"20558:10:7","type":""}],"src":"20491:543:7"},{"body":{"nodeType":"YulBlock","src":"21103:54:7","statements":[{"nodeType":"YulAssignment","src":"21113:37:7","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"21138:4:7"},{"name":"value","nodeType":"YulIdentifier","src":"21144:5:7"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"21134:3:7"},"nodeType":"YulFunctionCall","src":"21134:16:7"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"21113:8:7"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"21078:4:7","type":""},{"name":"value","nodeType":"YulTypedName","src":"21084:5:7","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"21094:8:7","type":""}],"src":"21040:117:7"},{"body":{"nodeType":"YulBlock","src":"21214:118:7","statements":[{"nodeType":"YulVariableDeclaration","src":"21224:68:7","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21273:1:7","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"21276:5:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21269:3:7"},"nodeType":"YulFunctionCall","src":"21269:13:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21288:1:7","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21284:3:7"},"nodeType":"YulFunctionCall","src":"21284:6:7"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"21240:28:7"},"nodeType":"YulFunctionCall","src":"21240:51:7"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21236:3:7"},"nodeType":"YulFunctionCall","src":"21236:56:7"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"21228:4:7","type":""}]},{"nodeType":"YulAssignment","src":"21301:25:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"21315:4:7"},{"name":"mask","nodeType":"YulIdentifier","src":"21321:4:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21311:3:7"},"nodeType":"YulFunctionCall","src":"21311:15:7"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"21301:6:7"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"21191:4:7","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"21197:5:7","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"21207:6:7","type":""}],"src":"21163:169:7"},{"body":{"nodeType":"YulBlock","src":"21418:214:7","statements":[{"nodeType":"YulAssignment","src":"21551:37:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"21578:4:7"},{"name":"len","nodeType":"YulIdentifier","src":"21584:3:7"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"21559:18:7"},"nodeType":"YulFunctionCall","src":"21559:29:7"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21551:4:7"}]},{"nodeType":"YulAssignment","src":"21597:29:7","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"21608:4:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21618:1:7","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"21621:3:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21614:3:7"},"nodeType":"YulFunctionCall","src":"21614:11:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"21605:2:7"},"nodeType":"YulFunctionCall","src":"21605:21:7"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"21597:4:7"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"21399:4:7","type":""},{"name":"len","nodeType":"YulTypedName","src":"21405:3:7","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"21413:4:7","type":""}],"src":"21337:295:7"},{"body":{"nodeType":"YulBlock","src":"21729:1303:7","statements":[{"nodeType":"YulVariableDeclaration","src":"21740:51:7","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21787:3:7"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"21754:32:7"},"nodeType":"YulFunctionCall","src":"21754:37:7"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"21744:6:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"21876:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"21878:16:7"},"nodeType":"YulFunctionCall","src":"21878:18:7"},"nodeType":"YulExpressionStatement","src":"21878:18:7"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21848:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"21856:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21845:2:7"},"nodeType":"YulFunctionCall","src":"21845:30:7"},"nodeType":"YulIf","src":"21842:56:7"},{"nodeType":"YulVariableDeclaration","src":"21908:52:7","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21954:4:7"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"21948:5:7"},"nodeType":"YulFunctionCall","src":"21948:11:7"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"21922:25:7"},"nodeType":"YulFunctionCall","src":"21922:38:7"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"21912:6:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22053:4:7"},{"name":"oldLen","nodeType":"YulIdentifier","src":"22059:6:7"},{"name":"newLen","nodeType":"YulIdentifier","src":"22067:6:7"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"22007:45:7"},"nodeType":"YulFunctionCall","src":"22007:67:7"},"nodeType":"YulExpressionStatement","src":"22007:67:7"},{"nodeType":"YulVariableDeclaration","src":"22084:18:7","value":{"kind":"number","nodeType":"YulLiteral","src":"22101:1:7","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"22088:9:7","type":""}]},{"nodeType":"YulAssignment","src":"22112:17:7","value":{"kind":"number","nodeType":"YulLiteral","src":"22125:4:7","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"22112:9:7"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"22176:611:7","statements":[{"nodeType":"YulVariableDeclaration","src":"22190:37:7","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22209:6:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22221:4:7","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22217:3:7"},"nodeType":"YulFunctionCall","src":"22217:9:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22205:3:7"},"nodeType":"YulFunctionCall","src":"22205:22:7"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"22194:7:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22241:51:7","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22287:4:7"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"22255:31:7"},"nodeType":"YulFunctionCall","src":"22255:37:7"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"22245:6:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22305:10:7","value":{"kind":"number","nodeType":"YulLiteral","src":"22314:1:7","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22309:1:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"22373:163:7","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22398:6:7"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22416:3:7"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"22421:9:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22412:3:7"},"nodeType":"YulFunctionCall","src":"22412:19:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22406:5:7"},"nodeType":"YulFunctionCall","src":"22406:26:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22391:6:7"},"nodeType":"YulFunctionCall","src":"22391:42:7"},"nodeType":"YulExpressionStatement","src":"22391:42:7"},{"nodeType":"YulAssignment","src":"22450:24:7","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22464:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"22472:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22460:3:7"},"nodeType":"YulFunctionCall","src":"22460:14:7"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22450:6:7"}]},{"nodeType":"YulAssignment","src":"22491:31:7","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"22508:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"22519:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22504:3:7"},"nodeType":"YulFunctionCall","src":"22504:18:7"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"22491:9:7"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22339:1:7"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"22342:7:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22336:2:7"},"nodeType":"YulFunctionCall","src":"22336:14:7"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22351:21:7","statements":[{"nodeType":"YulAssignment","src":"22353:17:7","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22362:1:7"},{"kind":"number","nodeType":"YulLiteral","src":"22365:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22358:3:7"},"nodeType":"YulFunctionCall","src":"22358:12:7"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22353:1:7"}]}]},"pre":{"nodeType":"YulBlock","src":"22332:3:7","statements":[]},"src":"22328:208:7"},{"body":{"nodeType":"YulBlock","src":"22572:156:7","statements":[{"nodeType":"YulVariableDeclaration","src":"22590:43:7","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22617:3:7"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"22622:9:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22613:3:7"},"nodeType":"YulFunctionCall","src":"22613:19:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22607:5:7"},"nodeType":"YulFunctionCall","src":"22607:26:7"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"22594:9:7","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22657:6:7"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"22684:9:7"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22699:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"22707:4:7","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22695:3:7"},"nodeType":"YulFunctionCall","src":"22695:17:7"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"22665:18:7"},"nodeType":"YulFunctionCall","src":"22665:48:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22650:6:7"},"nodeType":"YulFunctionCall","src":"22650:64:7"},"nodeType":"YulExpressionStatement","src":"22650:64:7"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"22555:7:7"},{"name":"newLen","nodeType":"YulIdentifier","src":"22564:6:7"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22552:2:7"},"nodeType":"YulFunctionCall","src":"22552:19:7"},"nodeType":"YulIf","src":"22549:179:7"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22748:4:7"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22762:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"22770:1:7","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"22758:3:7"},"nodeType":"YulFunctionCall","src":"22758:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"22774:1:7","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22754:3:7"},"nodeType":"YulFunctionCall","src":"22754:22:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22741:6:7"},"nodeType":"YulFunctionCall","src":"22741:36:7"},"nodeType":"YulExpressionStatement","src":"22741:36:7"}]},"nodeType":"YulCase","src":"22169:618:7","value":{"kind":"number","nodeType":"YulLiteral","src":"22174:1:7","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"22804:222:7","statements":[{"nodeType":"YulVariableDeclaration","src":"22818:14:7","value":{"kind":"number","nodeType":"YulLiteral","src":"22831:1:7","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"22822:5:7","type":""}]},{"body":{"nodeType":"YulBlock","src":"22855:67:7","statements":[{"nodeType":"YulAssignment","src":"22873:35:7","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22892:3:7"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"22897:9:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22888:3:7"},"nodeType":"YulFunctionCall","src":"22888:19:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22882:5:7"},"nodeType":"YulFunctionCall","src":"22882:26:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22873:5:7"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"22848:6:7"},"nodeType":"YulIf","src":"22845:77:7"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22942:4:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23001:5:7"},{"name":"newLen","nodeType":"YulIdentifier","src":"23008:6:7"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"22948:52:7"},"nodeType":"YulFunctionCall","src":"22948:67:7"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22935:6:7"},"nodeType":"YulFunctionCall","src":"22935:81:7"},"nodeType":"YulExpressionStatement","src":"22935:81:7"}]},"nodeType":"YulCase","src":"22796:230:7","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22149:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"22157:2:7","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22146:2:7"},"nodeType":"YulFunctionCall","src":"22146:14:7"},"nodeType":"YulSwitch","src":"22139:887:7"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"21718:4:7","type":""},{"name":"src","nodeType":"YulTypedName","src":"21724:3:7","type":""}],"src":"21637:1395:7"},{"body":{"nodeType":"YulBlock","src":"23098:82:7","statements":[{"nodeType":"YulAssignment","src":"23108:66:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23166:5:7"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"23148:17:7"},"nodeType":"YulFunctionCall","src":"23148:24:7"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"23139:8:7"},"nodeType":"YulFunctionCall","src":"23139:34:7"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"23121:17:7"},"nodeType":"YulFunctionCall","src":"23121:53:7"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"23108:9:7"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23078:5:7","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"23088:9:7","type":""}],"src":"23038:142:7"},{"body":{"nodeType":"YulBlock","src":"23246:66:7","statements":[{"nodeType":"YulAssignment","src":"23256:50:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23300:5:7"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"23269:30:7"},"nodeType":"YulFunctionCall","src":"23269:37:7"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"23256:9:7"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23226:5:7","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"23236:9:7","type":""}],"src":"23186:126:7"},{"body":{"nodeType":"YulBlock","src":"23386:66:7","statements":[{"nodeType":"YulAssignment","src":"23396:50:7","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23440:5:7"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"23409:30:7"},"nodeType":"YulFunctionCall","src":"23409:37:7"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"23396:9:7"}]}]},"name":"convert_t_address_payable_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23366:5:7","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"23376:9:7","type":""}],"src":"23318:134:7"},{"body":{"nodeType":"YulBlock","src":"23531:74:7","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23548:3:7"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23592:5:7"}],"functionName":{"name":"convert_t_address_payable_to_t_address","nodeType":"YulIdentifier","src":"23553:38:7"},"nodeType":"YulFunctionCall","src":"23553:45:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23541:6:7"},"nodeType":"YulFunctionCall","src":"23541:58:7"},"nodeType":"YulExpressionStatement","src":"23541:58:7"}]},"name":"abi_encode_t_address_payable_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23519:5:7","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23526:3:7","type":""}],"src":"23458:147:7"},{"body":{"nodeType":"YulBlock","src":"23849:533:7","statements":[{"nodeType":"YulAssignment","src":"23859:27:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23871:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"23882:3:7","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23867:3:7"},"nodeType":"YulFunctionCall","src":"23867:19:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23859:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23940:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23953:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"23964:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23949:3:7"},"nodeType":"YulFunctionCall","src":"23949:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23896:43:7"},"nodeType":"YulFunctionCall","src":"23896:71:7"},"nodeType":"YulExpressionStatement","src":"23896:71:7"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24029:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24042:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"24053:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24038:3:7"},"nodeType":"YulFunctionCall","src":"24038:18:7"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23977:51:7"},"nodeType":"YulFunctionCall","src":"23977:80:7"},"nodeType":"YulExpressionStatement","src":"23977:80:7"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24111:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24124:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"24135:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24120:3:7"},"nodeType":"YulFunctionCall","src":"24120:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24067:43:7"},"nodeType":"YulFunctionCall","src":"24067:72:7"},"nodeType":"YulExpressionStatement","src":"24067:72:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24160:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"24171:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24156:3:7"},"nodeType":"YulFunctionCall","src":"24156:18:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24180:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"24186:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24176:3:7"},"nodeType":"YulFunctionCall","src":"24176:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24149:6:7"},"nodeType":"YulFunctionCall","src":"24149:48:7"},"nodeType":"YulExpressionStatement","src":"24149:48:7"},{"nodeType":"YulAssignment","src":"24206:86:7","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24278:6:7"},{"name":"tail","nodeType":"YulIdentifier","src":"24287:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24214:63:7"},"nodeType":"YulFunctionCall","src":"24214:78:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24206:4:7"}]},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"24346:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24359:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"24370:3:7","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24355:3:7"},"nodeType":"YulFunctionCall","src":"24355:19:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24302:43:7"},"nodeType":"YulFunctionCall","src":"24302:73:7"},"nodeType":"YulExpressionStatement","src":"24302:73:7"}]},"name":"abi_encode_tuple_t_address_t_address_payable_t_uint256_t_string_memory_ptr_t_uint256__to_t_address_t_address_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23789:9:7","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23801:6:7","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23809:6:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23817:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23825:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23833:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23844:4:7","type":""}],"src":"23611:771:7"},{"body":{"nodeType":"YulBlock","src":"24436:362:7","statements":[{"nodeType":"YulAssignment","src":"24446:25:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24469:1:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24451:17:7"},"nodeType":"YulFunctionCall","src":"24451:20:7"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24446:1:7"}]},{"nodeType":"YulAssignment","src":"24480:25:7","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24503:1:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24485:17:7"},"nodeType":"YulFunctionCall","src":"24485:20:7"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24480:1:7"}]},{"nodeType":"YulVariableDeclaration","src":"24514:28:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24537:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"24540:1:7"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"24533:3:7"},"nodeType":"YulFunctionCall","src":"24533:9:7"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"24518:11:7","type":""}]},{"nodeType":"YulAssignment","src":"24551:41:7","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"24580:11:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24562:17:7"},"nodeType":"YulFunctionCall","src":"24562:30:7"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"24551:7:7"}]},{"body":{"nodeType":"YulBlock","src":"24769:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24771:16:7"},"nodeType":"YulFunctionCall","src":"24771:18:7"},"nodeType":"YulExpressionStatement","src":"24771:18:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24702:1:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24695:6:7"},"nodeType":"YulFunctionCall","src":"24695:9:7"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24725:1:7"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"24732:7:7"},{"name":"x","nodeType":"YulIdentifier","src":"24741:1:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"24728:3:7"},"nodeType":"YulFunctionCall","src":"24728:15:7"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24722:2:7"},"nodeType":"YulFunctionCall","src":"24722:22:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"24675:2:7"},"nodeType":"YulFunctionCall","src":"24675:83:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24655:6:7"},"nodeType":"YulFunctionCall","src":"24655:113:7"},"nodeType":"YulIf","src":"24652:139:7"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24419:1:7","type":""},{"name":"y","nodeType":"YulTypedName","src":"24422:1:7","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"24428:7:7","type":""}],"src":"24388:410:7"},{"body":{"nodeType":"YulBlock","src":"24910:73:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24932:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"24940:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24928:3:7"},"nodeType":"YulFunctionCall","src":"24928:14:7"},{"hexValue":"496e73756666696369656e742066756e6420696e2074686520706f6f6c","kind":"string","nodeType":"YulLiteral","src":"24944:31:7","type":"","value":"Insufficient fund in the pool"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24921:6:7"},"nodeType":"YulFunctionCall","src":"24921:55:7"},"nodeType":"YulExpressionStatement","src":"24921:55:7"}]},"name":"store_literal_in_memory_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24902:6:7","type":""}],"src":"24804:179:7"},{"body":{"nodeType":"YulBlock","src":"25135:220:7","statements":[{"nodeType":"YulAssignment","src":"25145:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25211:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"25216:2:7","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25152:58:7"},"nodeType":"YulFunctionCall","src":"25152:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25145:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25317:3:7"}],"functionName":{"name":"store_literal_in_memory_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899","nodeType":"YulIdentifier","src":"25228:88:7"},"nodeType":"YulFunctionCall","src":"25228:93:7"},"nodeType":"YulExpressionStatement","src":"25228:93:7"},{"nodeType":"YulAssignment","src":"25330:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25341:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"25346:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25337:3:7"},"nodeType":"YulFunctionCall","src":"25337:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25330:3:7"}]}]},"name":"abi_encode_t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25123:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25131:3:7","type":""}],"src":"24989:366:7"},{"body":{"nodeType":"YulBlock","src":"25532:248:7","statements":[{"nodeType":"YulAssignment","src":"25542:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25554:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"25565:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25550:3:7"},"nodeType":"YulFunctionCall","src":"25550:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25542:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25589:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"25600:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25585:3:7"},"nodeType":"YulFunctionCall","src":"25585:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25608:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"25614:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25604:3:7"},"nodeType":"YulFunctionCall","src":"25604:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25578:6:7"},"nodeType":"YulFunctionCall","src":"25578:47:7"},"nodeType":"YulExpressionStatement","src":"25578:47:7"},{"nodeType":"YulAssignment","src":"25634:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25768:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25642:124:7"},"nodeType":"YulFunctionCall","src":"25642:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25634:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25512:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25527:4:7","type":""}],"src":"25361:419:7"},{"body":{"nodeType":"YulBlock","src":"25831:149:7","statements":[{"nodeType":"YulAssignment","src":"25841:25:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25864:1:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25846:17:7"},"nodeType":"YulFunctionCall","src":"25846:20:7"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"25841:1:7"}]},{"nodeType":"YulAssignment","src":"25875:25:7","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25898:1:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25880:17:7"},"nodeType":"YulFunctionCall","src":"25880:20:7"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"25875:1:7"}]},{"nodeType":"YulAssignment","src":"25909:17:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25921:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"25924:1:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25917:3:7"},"nodeType":"YulFunctionCall","src":"25917:9:7"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"25909:4:7"}]},{"body":{"nodeType":"YulBlock","src":"25951:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25953:16:7"},"nodeType":"YulFunctionCall","src":"25953:18:7"},"nodeType":"YulExpressionStatement","src":"25953:18:7"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"25942:4:7"},{"name":"x","nodeType":"YulIdentifier","src":"25948:1:7"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"25939:2:7"},"nodeType":"YulFunctionCall","src":"25939:11:7"},"nodeType":"YulIf","src":"25936:37:7"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"25817:1:7","type":""},{"name":"y","nodeType":"YulTypedName","src":"25820:1:7","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"25826:4:7","type":""}],"src":"25786:194:7"},{"body":{"nodeType":"YulBlock","src":"26014:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26031:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26034:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26024:6:7"},"nodeType":"YulFunctionCall","src":"26024:88:7"},"nodeType":"YulExpressionStatement","src":"26024:88:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26128:1:7","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26131:4:7","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26121:6:7"},"nodeType":"YulFunctionCall","src":"26121:15:7"},"nodeType":"YulExpressionStatement","src":"26121:15:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26152:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26155:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26145:6:7"},"nodeType":"YulFunctionCall","src":"26145:15:7"},"nodeType":"YulExpressionStatement","src":"26145:15:7"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"25986:180:7"},{"body":{"nodeType":"YulBlock","src":"26214:143:7","statements":[{"nodeType":"YulAssignment","src":"26224:25:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26247:1:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26229:17:7"},"nodeType":"YulFunctionCall","src":"26229:20:7"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26224:1:7"}]},{"nodeType":"YulAssignment","src":"26258:25:7","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26281:1:7"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26263:17:7"},"nodeType":"YulFunctionCall","src":"26263:20:7"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26258:1:7"}]},{"body":{"nodeType":"YulBlock","src":"26305:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"26307:16:7"},"nodeType":"YulFunctionCall","src":"26307:18:7"},"nodeType":"YulExpressionStatement","src":"26307:18:7"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26302:1:7"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26295:6:7"},"nodeType":"YulFunctionCall","src":"26295:9:7"},"nodeType":"YulIf","src":"26292:35:7"},{"nodeType":"YulAssignment","src":"26337:14:7","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26346:1:7"},{"name":"y","nodeType":"YulIdentifier","src":"26349:1:7"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"26342:3:7"},"nodeType":"YulFunctionCall","src":"26342:9:7"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"26337:1:7"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26203:1:7","type":""},{"name":"y","nodeType":"YulTypedName","src":"26206:1:7","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"26212:1:7","type":""}],"src":"26172:185:7"},{"body":{"nodeType":"YulBlock","src":"26469:69:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26491:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"26499:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26487:3:7"},"nodeType":"YulFunctionCall","src":"26487:14:7"},{"hexValue":"496e73756666696369656e7420746f6b656e20737570706c79","kind":"string","nodeType":"YulLiteral","src":"26503:27:7","type":"","value":"Insufficient token supply"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26480:6:7"},"nodeType":"YulFunctionCall","src":"26480:51:7"},"nodeType":"YulExpressionStatement","src":"26480:51:7"}]},"name":"store_literal_in_memory_a755cc50c9d762fab4401909210a5ee388e8968ca003bb660f98e04d784510a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26461:6:7","type":""}],"src":"26363:175:7"},{"body":{"nodeType":"YulBlock","src":"26690:220:7","statements":[{"nodeType":"YulAssignment","src":"26700:74:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26766:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"26771:2:7","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26707:58:7"},"nodeType":"YulFunctionCall","src":"26707:67:7"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26700:3:7"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26872:3:7"}],"functionName":{"name":"store_literal_in_memory_a755cc50c9d762fab4401909210a5ee388e8968ca003bb660f98e04d784510a8","nodeType":"YulIdentifier","src":"26783:88:7"},"nodeType":"YulFunctionCall","src":"26783:93:7"},"nodeType":"YulExpressionStatement","src":"26783:93:7"},{"nodeType":"YulAssignment","src":"26885:19:7","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26896:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"26901:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26892:3:7"},"nodeType":"YulFunctionCall","src":"26892:12:7"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26885:3:7"}]}]},"name":"abi_encode_t_stringliteral_a755cc50c9d762fab4401909210a5ee388e8968ca003bb660f98e04d784510a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26678:3:7","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26686:3:7","type":""}],"src":"26544:366:7"},{"body":{"nodeType":"YulBlock","src":"27087:248:7","statements":[{"nodeType":"YulAssignment","src":"27097:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27109:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"27120:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27105:3:7"},"nodeType":"YulFunctionCall","src":"27105:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27097:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27144:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"27155:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27140:3:7"},"nodeType":"YulFunctionCall","src":"27140:17:7"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27163:4:7"},{"name":"headStart","nodeType":"YulIdentifier","src":"27169:9:7"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27159:3:7"},"nodeType":"YulFunctionCall","src":"27159:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27133:6:7"},"nodeType":"YulFunctionCall","src":"27133:47:7"},"nodeType":"YulExpressionStatement","src":"27133:47:7"},{"nodeType":"YulAssignment","src":"27189:139:7","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27323:4:7"}],"functionName":{"name":"abi_encode_t_stringliteral_a755cc50c9d762fab4401909210a5ee388e8968ca003bb660f98e04d784510a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27197:124:7"},"nodeType":"YulFunctionCall","src":"27197:131:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27189:4:7"}]}]},"name":"abi_encode_tuple_t_stringliteral_a755cc50c9d762fab4401909210a5ee388e8968ca003bb660f98e04d784510a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27067:9:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27082:4:7","type":""}],"src":"26916:419:7"},{"body":{"nodeType":"YulBlock","src":"27495:288:7","statements":[{"nodeType":"YulAssignment","src":"27505:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27517:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"27528:2:7","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27513:3:7"},"nodeType":"YulFunctionCall","src":"27513:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27505:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27585:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27598:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"27609:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27594:3:7"},"nodeType":"YulFunctionCall","src":"27594:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27541:43:7"},"nodeType":"YulFunctionCall","src":"27541:71:7"},"nodeType":"YulExpressionStatement","src":"27541:71:7"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27666:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27679:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"27690:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27675:3:7"},"nodeType":"YulFunctionCall","src":"27675:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27622:43:7"},"nodeType":"YulFunctionCall","src":"27622:72:7"},"nodeType":"YulExpressionStatement","src":"27622:72:7"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27748:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27761:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"27772:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27757:3:7"},"nodeType":"YulFunctionCall","src":"27757:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27704:43:7"},"nodeType":"YulFunctionCall","src":"27704:72:7"},"nodeType":"YulExpressionStatement","src":"27704:72:7"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27451:9:7","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27463:6:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27471:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27479:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27490:4:7","type":""}],"src":"27341:442:7"},{"body":{"nodeType":"YulBlock","src":"27915:206:7","statements":[{"nodeType":"YulAssignment","src":"27925:26:7","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27937:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"27948:2:7","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27933:3:7"},"nodeType":"YulFunctionCall","src":"27933:18:7"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27925:4:7"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28005:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28018:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"28029:1:7","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28014:3:7"},"nodeType":"YulFunctionCall","src":"28014:17:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27961:43:7"},"nodeType":"YulFunctionCall","src":"27961:71:7"},"nodeType":"YulExpressionStatement","src":"27961:71:7"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28086:6:7"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28099:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"28110:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28095:3:7"},"nodeType":"YulFunctionCall","src":"28095:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28042:43:7"},"nodeType":"YulFunctionCall","src":"28042:72:7"},"nodeType":"YulExpressionStatement","src":"28042:72:7"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27879:9:7","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27891:6:7","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27899:6:7","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27910:4:7","type":""}],"src":"27789:332:7"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct FoterreToken.TransactionDetail -> struct FoterreToken.TransactionDetail\n    function abi_encode_t_struct$_TransactionDetail_$947_memory_ptr_to_t_struct$_TransactionDetail_$947_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // sender\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // message\n\n            let memberValue0 := mload(add(value, 0x60))\n\n            mstore(add(pos, 0x60), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // datetime\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_TransactionDetail_$947_memory_ptr_to_t_struct$_TransactionDetail_$947_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_TransactionDetail_$947_memory_ptr_to_t_struct$_TransactionDetail_$947_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct FoterreToken.TransactionDetail[] -> struct FoterreToken.TransactionDetail[]\n    function abi_encode_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_TransactionDetail_$947_memory_ptr_to_t_struct$_TransactionDetail_$947_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TransactionDetail_$947_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_6d84ad26e31dab99602e5848e20a3d31d72f14ed2a8a92b5d806058164b59134(memPtr) {\n\n        mstore(add(memPtr, 0), \"Your account has been frozen\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d84ad26e31dab99602e5848e20a3d31d72f14ed2a8a92b5d806058164b59134_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_6d84ad26e31dab99602e5848e20a3d31d72f14ed2a8a92b5d806058164b59134(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d84ad26e31dab99602e5848e20a3d31d72f14ed2a8a92b5d806058164b59134__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d84ad26e31dab99602e5848e20a3d31d72f14ed2a8a92b5d806058164b59134_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256_t_string_memory_ptr_t_uint256__to_t_address_t_address_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient fund in the pool\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_a755cc50c9d762fab4401909210a5ee388e8968ca003bb660f98e04d784510a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient token supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_a755cc50c9d762fab4401909210a5ee388e8968ca003bb660f98e04d784510a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_a755cc50c9d762fab4401909210a5ee388e8968ca003bb660f98e04d784510a8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a755cc50c9d762fab4401909210a5ee388e8968ca003bb660f98e04d784510a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a755cc50c9d762fab4401909210a5ee388e8968ca003bb660f98e04d784510a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":7,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"738":[{"length":32,"start":2605}],"900":[{"length":32,"start":4600},{"length":32,"start":4712},{"length":32,"start":5652},{"length":32,"start":6222},{"length":32,"start":6389},{"length":32,"start":6948}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063bada6e2311610097578063dd62ed3e11610071578063dd62ed3e1461050f578063e80a4d581461053f578063f09c69c71461056f578063f868e7661461058b576101c4565b8063bada6e23146104a5578063bafb8e83146104c1578063dcf6ea88146104df576101c4565b806390aaafb3116100d357806390aaafb31461041d57806395d89b4114610439578063a9059cbb14610457578063b2bdfa7b14610487576101c4565b806370a08231146103b557806385805723146103e55780638d1aadbf14610401576101c4565b806327506f5311610166578063313ce56711610140578063313ce5671461032b578063355274ea146103495780635506ed44146103675780636537188314610397576101c4565b806327506f53146102d15780632e7700f0146102ef5780632e9c3d941461030d576101c4565b806318160ddd116101a257806318160ddd1461023557806319a3c68d146102535780631e36aa631461028357806323b872dd146102a1576101c4565b8063044d1d4c146101c957806306fdde03146101e7578063095ea7b314610205575b600080fd5b6101d16105a7565b6040516101de919061202c565b60405180910390f35b6101ef6105ad565b6040516101fc91906120d7565b60405180910390f35b61021f600480360381019061021a9190612197565b61063f565b60405161022c91906121f2565b60405180910390f35b61023d610662565b60405161024a919061202c565b60405180910390f35b61026d6004803603810190610268919061220d565b61066c565b60405161027a91906121f2565b60405180910390f35b61028b61071a565b60405161029891906122f8565b60405180910390f35b6102bb60048036038101906102b6919061231a565b6107a8565b6040516102c891906121f2565b60405180910390f35b6102d96107d7565b6040516102e691906124fe565b60405180910390f35b6102f7610988565b604051610304919061202c565b60405180910390f35b610315610992565b60405161032291906122f8565b60405180910390f35b610333610a20565b604051610340919061253c565b60405180910390f35b610351610a29565b60405161035e919061202c565b60405180910390f35b610381600480360381019061037c9190612557565b610a51565b60405161038e9190612593565b60405180910390f35b61039f610a90565b6040516103ac919061202c565b60405180910390f35b6103cf60048036038101906103ca919061220d565b610a96565b6040516103dc919061202c565b60405180910390f35b6103ff60048036038101906103fa9190612721565b610ade565b005b61041b60048036038101906104169190612197565b610d90565b005b6104376004803603810190610432919061220d565b610f9b565b005b610441611018565b60405161044e91906120d7565b60405180910390f35b610471600480360381019061046c9190612197565b6110aa565b60405161047e91906121f2565b60405180910390f35b61048f6111f6565b60405161049c9190612593565b60405180910390f35b6104bf60048036038101906104ba9190612557565b61121a565b005b6104c9611290565b6040516104d6919061202c565b60405180910390f35b6104f960048036038101906104f4919061220d565b611296565b604051610506919061202c565b60405180910390f35b61052960048036038101906105249190612790565b61134a565b604051610536919061202c565b60405180910390f35b61055960048036038101906105549190612557565b6113d1565b6040516105669190612593565b60405180910390f35b61058960048036038101906105849190612557565b611410565b005b6105a560048036038101906105a09190612557565b61163d565b005b60075481565b6060600380546105bc906127ff565b80601f01602080910402602001604051908101604052809291908181526020018280546105e8906127ff565b80156106355780601f1061060a57610100808354040283529160200191610635565b820191906000526020600020905b81548152906001019060200180831161061857829003601f168201915b5050505050905090565b60008061064a61191f565b9050610657818585611927565b600191505092915050565b6000600254905090565b600080600090505b60098054905081101561070f578273ffffffffffffffffffffffffffffffffffffffff16600982815481106106ac576106ab612830565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036106fc576001915050610715565b80806107079061288e565b915050610674565b50600090505b919050565b6060600980548060200260200160405190810160405280929190818152602001828054801561079e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610754575b5050505050905090565b6000806107b361191f565b90506107c0858285611939565b6107cb8585856119cd565b60019150509392505050565b6060600d805480602002602001604051908101604052809291908181526020016000905b8282101561097f57838290600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820180546108e4906127ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610910906127ff565b801561095d5780601f106109325761010080835404028352916020019161095d565b820191906000526020600020905b81548152906001019060200180831161094057829003601f168201915b50505050508152602001600482015481525050815260200190600101906107fb565b50505050905090565b6000600854905090565b6060600a805480602002602001604051908101604052809291908181526020018280548015610a1657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109cc575b5050505050905090565b60006012905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600a8181548110610a6157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60005b600a80549050811015610bf9573373ffffffffffffffffffffffffffffffffffffffff16600a8281548110610b1957610b18612830565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610be6573373ffffffffffffffffffffffffffffffffffffffff167f95e4151200d357a599dac39756b80fcd6d76fd3d5b74d6adef1dad12411f27e3604051610ba390612922565b60405180910390a26040517fc033214d000000000000000000000000000000000000000000000000000000008152600401610bdd90612922565b60405180910390fd5b8080610bf19061288e565b915050610ae1565b50600160086000828254610c0d9190612942565b92505081905550600d6040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200142815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019081610d3f9190612b22565b506080820151816004015550507fc4b32d7ff75a51e487f3cbb5d3202f2efecca1f4c2b987e0039c1d3220b48a833384848442604051610d83959493929190612c49565b60405180910390a1505050565b60005b600a80549050811015610eab573373ffffffffffffffffffffffffffffffffffffffff16600a8281548110610dcb57610dca612830565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610e98573373ffffffffffffffffffffffffffffffffffffffff167f95e4151200d357a599dac39756b80fcd6d76fd3d5b74d6adef1dad12411f27e3604051610e5590612922565b60405180910390a26040517fc033214d000000000000000000000000000000000000000000000000000000008152600401610e8f90612922565b60405180910390fd5b8080610ea39061288e565b915050610d93565b50670de0b6b3a764000081610ec09190612ca3565b9050600754811115610f07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efe90612d31565b60405180910390fd5b6009829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600c6000828254610f7d9190612942565b92505081905550610f8e3382611ac1565b610f9782610f9b565b5050565b6000610fa682611296565b90506003811061101457600a829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b606060048054611027906127ff565b80601f0160208091040260200160405190810160405280929190818152602001828054611053906127ff565b80156110a05780601f10611075576101008083540402835291602001916110a0565b820191906000526020600020905b81548152906001019060200180831161108357829003601f168201915b5050505050905090565b600080600090505b600a805490508110156111ca573373ffffffffffffffffffffffffffffffffffffffff16600a82815481106110ea576110e9612830565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036111b7573373ffffffffffffffffffffffffffffffffffffffff167f95e4151200d357a599dac39756b80fcd6d76fd3d5b74d6adef1dad12411f27e360405161117490612922565b60405180910390a26040517fc033214d0000000000000000000000000000000000000000000000000000000081526004016111ae90612922565b60405180910390fd5b80806111c29061288e565b9150506110b2565b50670de0b6b3a7640000826111df9190612ca3565b91506111eb8383611b4e565b506001905092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b670de0b6b3a76400008161122e9190612ca3565b905080600660008282546112429190612d51565b92505081905550806007600082825461125b9190612942565b9250508190555061128d337f0000000000000000000000000000000000000000000000000000000000000000836119cd565b50565b60065481565b6000806000905060005b600980549050811015611340578373ffffffffffffffffffffffffffffffffffffffff16600982815481106112d8576112d7612830565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361132d5781806113299061288e565b9250505b80806113389061288e565b9150506112a0565b5080915050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600981815481106113e157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005b600a8054905081101561152b573373ffffffffffffffffffffffffffffffffffffffff16600a828154811061144b5761144a612830565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611518573373ffffffffffffffffffffffffffffffffffffffff167f95e4151200d357a599dac39756b80fcd6d76fd3d5b74d6adef1dad12411f27e36040516114d590612922565b60405180910390a26040517fc033214d00000000000000000000000000000000000000000000000000000000815260040161150f90612922565b60405180910390fd5b80806115239061288e565b915050611413565b50670de0b6b3a7640000816115409190612ca3565b905061154b3361066c565b156115dc57606460148261155f9190612ca3565b6115699190612db4565b600b81905550606460508261157e9190612ca3565b6115889190612db4565b9050806006600082825461159c9190612d51565b9250508190555080600560008282546115b59190612942565b92505081905550600b54600760008282546115d09190612942565b9250508190555061163a565b80600660008282546115ee9190612d51565b9250508190555080600560008282546116079190612942565b92505081905550611639337f0000000000000000000000000000000000000000000000000000000000000000836119cd565b5b50565b60005b600a80549050811015611758573373ffffffffffffffffffffffffffffffffffffffff16600a828154811061167857611677612830565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611745573373ffffffffffffffffffffffffffffffffffffffff167f95e4151200d357a599dac39756b80fcd6d76fd3d5b74d6adef1dad12411f27e360405161170290612922565b60405180910390a26040517fc033214d00000000000000000000000000000000000000000000000000000000815260040161173c90612922565b60405180910390fd5b80806117509061288e565b915050611640565b50670de0b6b3a76400008161176d9190612ca3565b90506117783361066c565b15611879576005548111156117c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117b990612e31565b60405180910390fd5b60646014826117d19190612ca3565b6117db9190612db4565b600b8190555060646050826117f09190612ca3565b6117fa9190612db4565b9050806005600082825461180e9190612d51565b9250508190555080600660008282546118279190612942565b92505081905550600b54600760008282546118429190612942565b925050819055506118747f000000000000000000000000000000000000000000000000000000000000000033836119cd565b61191c565b6005548111156118be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118b590612e31565b60405180910390fd5b80600560008282546118d09190612d51565b9250508190555080600660008282546118e99190612942565b9250508190555061191b7f000000000000000000000000000000000000000000000000000000000000000033836119cd565b5b50565b600033905090565b6119348383836001611b71565b505050565b6000611945848461134a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146119c757818110156119b7578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016119ae93929190612e51565b60405180910390fd5b6119c684848484036000611b71565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a3f5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611a369190612593565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611ab15760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611aa89190612593565b60405180910390fd5b611abc838383611d48565b505050565b600754811115611b06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611afd90612d31565b60405180910390fd5b8060076000828254611b189190612d51565b92505081905550611b4a7f000000000000000000000000000000000000000000000000000000000000000083836119cd565b5050565b600080611b5961191f565b9050611b668185856119cd565b600191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611be35760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611bda9190612593565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c555760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611c4c9190612593565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611d42578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611d39919061202c565b60405180910390a35b50505050565b611d53838383611dee565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611de9576000611d91610a29565b90506000611d9d610662565b905081811115611de65780826040517f9e79f854000000000000000000000000000000000000000000000000000000008152600401611ddd929190612e88565b60405180910390fd5b50505b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611e40578060026000828254611e349190612942565b92505081905550611f13565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611ecc578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611ec393929190612e51565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611f5c5780600260008282540392505081905550611fa9565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612006919061202c565b60405180910390a3505050565b6000819050919050565b61202681612013565b82525050565b6000602082019050612041600083018461201d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612081578082015181840152602081019050612066565b60008484015250505050565b6000601f19601f8301169050919050565b60006120a982612047565b6120b38185612052565b93506120c3818560208601612063565b6120cc8161208d565b840191505092915050565b600060208201905081810360008301526120f1818461209e565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006121388261210d565b9050919050565b6121488161212d565b811461215357600080fd5b50565b6000813590506121658161213f565b92915050565b61217481612013565b811461217f57600080fd5b50565b6000813590506121918161216b565b92915050565b600080604083850312156121ae576121ad612103565b5b60006121bc85828601612156565b92505060206121cd85828601612182565b9150509250929050565b60008115159050919050565b6121ec816121d7565b82525050565b600060208201905061220760008301846121e3565b92915050565b60006020828403121561222357612222612103565b5b600061223184828501612156565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61226f8161212d565b82525050565b60006122818383612266565b60208301905092915050565b6000602082019050919050565b60006122a58261223a565b6122af8185612245565b93506122ba83612256565b8060005b838110156122eb5781516122d28882612275565b97506122dd8361228d565b9250506001810190506122be565b5085935050505092915050565b60006020820190508181036000830152612312818461229a565b905092915050565b60008060006060848603121561233357612332612103565b5b600061234186828701612156565b935050602061235286828701612156565b925050604061236386828701612182565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6123a281612013565b82525050565b600082825260208201905092915050565b60006123c482612047565b6123ce81856123a8565b93506123de818560208601612063565b6123e78161208d565b840191505092915050565b600060a08301600083015161240a6000860182612266565b50602083015161241d6020860182612266565b5060408301516124306040860182612399565b506060830151848203606086015261244882826123b9565b915050608083015161245d6080860182612399565b508091505092915050565b600061247483836123f2565b905092915050565b6000602082019050919050565b60006124948261236d565b61249e8185612378565b9350836020820285016124b085612389565b8060005b858110156124ec57848403895281516124cd8582612468565b94506124d88361247c565b925060208a019950506001810190506124b4565b50829750879550505050505092915050565b600060208201905081810360008301526125188184612489565b905092915050565b600060ff82169050919050565b61253681612520565b82525050565b6000602082019050612551600083018461252d565b92915050565b60006020828403121561256d5761256c612103565b5b600061257b84828501612182565b91505092915050565b61258d8161212d565b82525050565b60006020820190506125a86000830184612584565b92915050565b60006125b98261210d565b9050919050565b6125c9816125ae565b81146125d457600080fd5b50565b6000813590506125e6816125c0565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61262e8261208d565b810181811067ffffffffffffffff8211171561264d5761264c6125f6565b5b80604052505050565b60006126606120f9565b905061266c8282612625565b919050565b600067ffffffffffffffff82111561268c5761268b6125f6565b5b6126958261208d565b9050602081019050919050565b82818337600083830152505050565b60006126c46126bf84612671565b612656565b9050828152602081018484840111156126e0576126df6125f1565b5b6126eb8482856126a2565b509392505050565b600082601f830112612708576127076125ec565b5b81356127188482602086016126b1565b91505092915050565b60008060006060848603121561273a57612739612103565b5b6000612748868287016125d7565b935050602061275986828701612182565b925050604084013567ffffffffffffffff81111561277a57612779612108565b5b612786868287016126f3565b9150509250925092565b600080604083850312156127a7576127a6612103565b5b60006127b585828601612156565b92505060206127c685828601612156565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061281757607f821691505b60208210810361282a576128296127d0565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061289982612013565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036128cb576128ca61285f565b5b600182019050919050565b7f596f7572206163636f756e7420686173206265656e2066726f7a656e00000000600082015250565b600061290c601c83612052565b9150612917826128d6565b602082019050919050565b6000602082019050818103600083015261293b816128ff565b9050919050565b600061294d82612013565b915061295883612013565b92508282019050808211156129705761296f61285f565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026129d87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261299b565b6129e2868361299b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000612a1f612a1a612a1584612013565b6129fa565b612013565b9050919050565b6000819050919050565b612a3983612a04565b612a4d612a4582612a26565b8484546129a8565b825550505050565b600090565b612a62612a55565b612a6d818484612a30565b505050565b5b81811015612a9157612a86600082612a5a565b600181019050612a73565b5050565b601f821115612ad657612aa781612976565b612ab08461298b565b81016020851015612abf578190505b612ad3612acb8561298b565b830182612a72565b50505b505050565b600082821c905092915050565b6000612af960001984600802612adb565b1980831691505092915050565b6000612b128383612ae8565b9150826002028217905092915050565b612b2b82612047565b67ffffffffffffffff811115612b4457612b436125f6565b5b612b4e82546127ff565b612b59828285612a95565b600060209050601f831160018114612b8c5760008415612b7a578287015190505b612b848582612b06565b865550612bec565b601f198416612b9a86612976565b60005b82811015612bc257848901518255600182019150602085019450602081019050612b9d565b86831015612bdf5784890151612bdb601f891682612ae8565b8355505b6001600288020188555050505b505050505050565b6000612c0f612c0a612c058461210d565b6129fa565b61210d565b9050919050565b6000612c2182612bf4565b9050919050565b6000612c3382612c16565b9050919050565b612c4381612c28565b82525050565b600060a082019050612c5e6000830188612584565b612c6b6020830187612c3a565b612c78604083018661201d565b8181036060830152612c8a818561209e565b9050612c99608083018461201d565b9695505050505050565b6000612cae82612013565b9150612cb983612013565b9250828202612cc781612013565b91508282048414831517612cde57612cdd61285f565b5b5092915050565b7f496e73756666696369656e742066756e6420696e2074686520706f6f6c000000600082015250565b6000612d1b601d83612052565b9150612d2682612ce5565b602082019050919050565b60006020820190508181036000830152612d4a81612d0e565b9050919050565b6000612d5c82612013565b9150612d6783612013565b9250828203905081811115612d7f57612d7e61285f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612dbf82612013565b9150612dca83612013565b925082612dda57612dd9612d85565b5b828204905092915050565b7f496e73756666696369656e7420746f6b656e20737570706c7900000000000000600082015250565b6000612e1b601983612052565b9150612e2682612de5565b602082019050919050565b60006020820190508181036000830152612e4a81612e0e565b9050919050565b6000606082019050612e666000830186612584565b612e73602083018561201d565b612e80604083018461201d565b949350505050565b6000604082019050612e9d600083018561201d565b612eaa602083018461201d565b939250505056fea2646970667358221220d99c00da68672599b3f28c6eb610c776a21240a46b735654b9d3414f4bee3dc264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xBADA6E23 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0xE80A4D58 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xF09C69C7 EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0xF868E766 EQ PUSH2 0x58B JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xBADA6E23 EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0xBAFB8E83 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0xDCF6EA88 EQ PUSH2 0x4DF JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x90AAAFB3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x90AAAFB3 EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x487 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x85805723 EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0x8D1AADBF EQ PUSH2 0x401 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x27506F53 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x313CE567 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x5506ED44 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x65371883 EQ PUSH2 0x397 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x27506F53 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x2E7700F0 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x2E9C3D94 EQ PUSH2 0x30D JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x19A3C68D EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x1E36AA63 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A1 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x44D1D4C EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x205 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH2 0x662 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x22F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x231A JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x24FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x22F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x333 PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x351 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39F PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x2721 JUMP JUMPDEST PUSH2 0xADE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0xD90 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x437 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH2 0xF9B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x441 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x471 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x21F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48F PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49C SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH2 0x121A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C9 PUSH2 0x1290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F4 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH2 0x1296 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x529 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x2790 JUMP JUMPDEST PUSH2 0x134A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x559 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x554 SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH2 0x13D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x589 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH2 0x1410 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH2 0x163D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5BC SWAP1 PUSH2 0x27FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5E8 SWAP1 PUSH2 0x27FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x635 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x60A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x635 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x618 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x64A PUSH2 0x191F JUMP JUMPDEST SWAP1 POP PUSH2 0x657 DUP2 DUP6 DUP6 PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x70F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6AC JUMPI PUSH2 0x6AB PUSH2 0x2830 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6FC JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x715 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x707 SWAP1 PUSH2 0x288E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x674 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x79E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x754 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7B3 PUSH2 0x191F JUMP JUMPDEST SWAP1 POP PUSH2 0x7C0 DUP6 DUP3 DUP6 PUSH2 0x1939 JUMP JUMPDEST PUSH2 0x7CB DUP6 DUP6 DUP6 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x97F JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x8E4 SWAP1 PUSH2 0x27FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x910 SWAP1 PUSH2 0x27FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x95D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x932 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x95D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x940 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x7FB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA16 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x9CC JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xBF9 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB19 JUMPI PUSH2 0xB18 PUSH2 0x2830 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBE6 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95E4151200D357A599DAC39756B80FCD6D76FD3D5B74D6ADEF1DAD12411F27E3 PUSH1 0x40 MLOAD PUSH2 0xBA3 SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH32 0xC033214D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDD SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0xBF1 SWAP1 PUSH2 0x288E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAE1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC0D SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0xD3F SWAP2 SWAP1 PUSH2 0x2B22 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP PUSH32 0xC4B32D7FF75A51E487F3CBB5D3202F2EFECCA1F4C2B987E0039C1D3220B48A83 CALLER DUP5 DUP5 DUP5 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xD83 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xEAB JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDCB JUMPI PUSH2 0xDCA PUSH2 0x2830 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE98 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95E4151200D357A599DAC39756B80FCD6D76FD3D5B74D6ADEF1DAD12411F27E3 PUSH1 0x40 MLOAD PUSH2 0xE55 SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH32 0xC033214D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8F SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0xEA3 SWAP1 PUSH2 0x288E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD93 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x2CA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0xF07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFE SWAP1 PUSH2 0x2D31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xC PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF7D SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF8E CALLER DUP3 PUSH2 0x1AC1 JUMP JUMPDEST PUSH2 0xF97 DUP3 PUSH2 0xF9B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA6 DUP3 PUSH2 0x1296 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 LT PUSH2 0x1014 JUMPI PUSH1 0xA DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1027 SWAP1 PUSH2 0x27FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1053 SWAP1 PUSH2 0x27FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10A0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1075 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10A0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1083 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x11CA JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10EA JUMPI PUSH2 0x10E9 PUSH2 0x2830 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11B7 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95E4151200D357A599DAC39756B80FCD6D76FD3D5B74D6ADEF1DAD12411F27E3 PUSH1 0x40 MLOAD PUSH2 0x1174 SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH32 0xC033214D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AE SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x11C2 SWAP1 PUSH2 0x288E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10B2 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x11DF SWAP2 SWAP1 PUSH2 0x2CA3 JUMP JUMPDEST SWAP2 POP PUSH2 0x11EB DUP4 DUP4 PUSH2 0x1B4E JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x122E SWAP2 SWAP1 PUSH2 0x2CA3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1242 SWAP2 SWAP1 PUSH2 0x2D51 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x125B SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x128D CALLER PUSH32 0x0 DUP4 PUSH2 0x19CD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1340 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12D8 JUMPI PUSH2 0x12D7 PUSH2 0x2830 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x132D JUMPI DUP2 DUP1 PUSH2 0x1329 SWAP1 PUSH2 0x288E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1338 SWAP1 PUSH2 0x288E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12A0 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x13E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x152B JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x144B JUMPI PUSH2 0x144A PUSH2 0x2830 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1518 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95E4151200D357A599DAC39756B80FCD6D76FD3D5B74D6ADEF1DAD12411F27E3 PUSH1 0x40 MLOAD PUSH2 0x14D5 SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH32 0xC033214D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150F SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x1523 SWAP1 PUSH2 0x288E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1413 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x1540 SWAP2 SWAP1 PUSH2 0x2CA3 JUMP JUMPDEST SWAP1 POP PUSH2 0x154B CALLER PUSH2 0x66C JUMP JUMPDEST ISZERO PUSH2 0x15DC JUMPI PUSH1 0x64 PUSH1 0x14 DUP3 PUSH2 0x155F SWAP2 SWAP1 PUSH2 0x2CA3 JUMP JUMPDEST PUSH2 0x1569 SWAP2 SWAP1 PUSH2 0x2DB4 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x50 DUP3 PUSH2 0x157E SWAP2 SWAP1 PUSH2 0x2CA3 JUMP JUMPDEST PUSH2 0x1588 SWAP2 SWAP1 PUSH2 0x2DB4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x159C SWAP2 SWAP1 PUSH2 0x2D51 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15B5 SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15D0 SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x163A JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15EE SWAP2 SWAP1 PUSH2 0x2D51 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1607 SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1639 CALLER PUSH32 0x0 DUP4 PUSH2 0x19CD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1758 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1678 JUMPI PUSH2 0x1677 PUSH2 0x2830 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1745 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95E4151200D357A599DAC39756B80FCD6D76FD3D5B74D6ADEF1DAD12411F27E3 PUSH1 0x40 MLOAD PUSH2 0x1702 SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH32 0xC033214D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x173C SWAP1 PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x1750 SWAP1 PUSH2 0x288E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1640 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x176D SWAP2 SWAP1 PUSH2 0x2CA3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1778 CALLER PUSH2 0x66C JUMP JUMPDEST ISZERO PUSH2 0x1879 JUMPI PUSH1 0x5 SLOAD DUP2 GT ISZERO PUSH2 0x17C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17B9 SWAP1 PUSH2 0x2E31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x14 DUP3 PUSH2 0x17D1 SWAP2 SWAP1 PUSH2 0x2CA3 JUMP JUMPDEST PUSH2 0x17DB SWAP2 SWAP1 PUSH2 0x2DB4 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x50 DUP3 PUSH2 0x17F0 SWAP2 SWAP1 PUSH2 0x2CA3 JUMP JUMPDEST PUSH2 0x17FA SWAP2 SWAP1 PUSH2 0x2DB4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x180E SWAP2 SWAP1 PUSH2 0x2D51 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1827 SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1842 SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1874 PUSH32 0x0 CALLER DUP4 PUSH2 0x19CD JUMP JUMPDEST PUSH2 0x191C JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 GT ISZERO PUSH2 0x18BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B5 SWAP1 PUSH2 0x2E31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x18D0 SWAP2 SWAP1 PUSH2 0x2D51 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x18E9 SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x191B PUSH32 0x0 CALLER DUP4 PUSH2 0x19CD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1934 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1B71 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1945 DUP5 DUP5 PUSH2 0x134A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x19C7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x19B7 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19AE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19C6 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1B71 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A3F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A36 SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AB1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA8 SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1ABC DUP4 DUP4 DUP4 PUSH2 0x1D48 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x1B06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AFD SWAP1 PUSH2 0x2D31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B18 SWAP2 SWAP1 PUSH2 0x2D51 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B4A PUSH32 0x0 DUP4 DUP4 PUSH2 0x19CD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1B59 PUSH2 0x191F JUMP JUMPDEST SWAP1 POP PUSH2 0x1B66 DUP2 DUP6 DUP6 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BE3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BDA SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C55 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C4C SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1D42 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D39 SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1D53 DUP4 DUP4 DUP4 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DE9 JUMPI PUSH1 0x0 PUSH2 0x1D91 PUSH2 0xA29 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D9D PUSH2 0x662 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1DE6 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DDD SWAP3 SWAP2 SWAP1 PUSH2 0x2E88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E40 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E34 SWAP2 SWAP1 PUSH2 0x2942 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F13 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1ECC JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EC3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F5C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1FA9 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2006 SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2026 DUP2 PUSH2 0x2013 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2041 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x201D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2081 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2066 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A9 DUP3 PUSH2 0x2047 JUMP JUMPDEST PUSH2 0x20B3 DUP2 DUP6 PUSH2 0x2052 JUMP JUMPDEST SWAP4 POP PUSH2 0x20C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x20CC DUP2 PUSH2 0x208D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20F1 DUP2 DUP5 PUSH2 0x209E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2138 DUP3 PUSH2 0x210D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2148 DUP2 PUSH2 0x212D JUMP JUMPDEST DUP2 EQ PUSH2 0x2153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2165 DUP2 PUSH2 0x213F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2174 DUP2 PUSH2 0x2013 JUMP JUMPDEST DUP2 EQ PUSH2 0x217F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2191 DUP2 PUSH2 0x216B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21AE JUMPI PUSH2 0x21AD PUSH2 0x2103 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21BC DUP6 DUP3 DUP7 ADD PUSH2 0x2156 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21CD DUP6 DUP3 DUP7 ADD PUSH2 0x2182 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21EC DUP2 PUSH2 0x21D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2207 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2223 JUMPI PUSH2 0x2222 PUSH2 0x2103 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2231 DUP5 DUP3 DUP6 ADD PUSH2 0x2156 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x226F DUP2 PUSH2 0x212D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2281 DUP4 DUP4 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22A5 DUP3 PUSH2 0x223A JUMP JUMPDEST PUSH2 0x22AF DUP2 DUP6 PUSH2 0x2245 JUMP JUMPDEST SWAP4 POP PUSH2 0x22BA DUP4 PUSH2 0x2256 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22EB JUMPI DUP2 MLOAD PUSH2 0x22D2 DUP9 DUP3 PUSH2 0x2275 JUMP JUMPDEST SWAP8 POP PUSH2 0x22DD DUP4 PUSH2 0x228D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x22BE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2312 DUP2 DUP5 PUSH2 0x229A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2333 JUMPI PUSH2 0x2332 PUSH2 0x2103 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2341 DUP7 DUP3 DUP8 ADD PUSH2 0x2156 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2352 DUP7 DUP3 DUP8 ADD PUSH2 0x2156 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2363 DUP7 DUP3 DUP8 ADD PUSH2 0x2182 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23A2 DUP2 PUSH2 0x2013 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C4 DUP3 PUSH2 0x2047 JUMP JUMPDEST PUSH2 0x23CE DUP2 DUP6 PUSH2 0x23A8 JUMP JUMPDEST SWAP4 POP PUSH2 0x23DE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x23E7 DUP2 PUSH2 0x208D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x240A PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2266 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x241D PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x2266 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x2430 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x2399 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x2448 DUP3 DUP3 PUSH2 0x23B9 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x245D PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x2399 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2474 DUP4 DUP4 PUSH2 0x23F2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2494 DUP3 PUSH2 0x236D JUMP JUMPDEST PUSH2 0x249E DUP2 DUP6 PUSH2 0x2378 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x24B0 DUP6 PUSH2 0x2389 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x24EC JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x24CD DUP6 DUP3 PUSH2 0x2468 JUMP JUMPDEST SWAP5 POP PUSH2 0x24D8 DUP4 PUSH2 0x247C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x24B4 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2518 DUP2 DUP5 PUSH2 0x2489 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2536 DUP2 PUSH2 0x2520 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2551 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x252D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x256D JUMPI PUSH2 0x256C PUSH2 0x2103 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x257B DUP5 DUP3 DUP6 ADD PUSH2 0x2182 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x258D DUP2 PUSH2 0x212D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25A8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2584 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B9 DUP3 PUSH2 0x210D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25C9 DUP2 PUSH2 0x25AE JUMP JUMPDEST DUP2 EQ PUSH2 0x25D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25E6 DUP2 PUSH2 0x25C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x262E DUP3 PUSH2 0x208D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x264D JUMPI PUSH2 0x264C PUSH2 0x25F6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2660 PUSH2 0x20F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x266C DUP3 DUP3 PUSH2 0x2625 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x268C JUMPI PUSH2 0x268B PUSH2 0x25F6 JUMP JUMPDEST JUMPDEST PUSH2 0x2695 DUP3 PUSH2 0x208D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C4 PUSH2 0x26BF DUP5 PUSH2 0x2671 JUMP JUMPDEST PUSH2 0x2656 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x26E0 JUMPI PUSH2 0x26DF PUSH2 0x25F1 JUMP JUMPDEST JUMPDEST PUSH2 0x26EB DUP5 DUP3 DUP6 PUSH2 0x26A2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2708 JUMPI PUSH2 0x2707 PUSH2 0x25EC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2718 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x26B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x273A JUMPI PUSH2 0x2739 PUSH2 0x2103 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2748 DUP7 DUP3 DUP8 ADD PUSH2 0x25D7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2759 DUP7 DUP3 DUP8 ADD PUSH2 0x2182 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x277A JUMPI PUSH2 0x2779 PUSH2 0x2108 JUMP JUMPDEST JUMPDEST PUSH2 0x2786 DUP7 DUP3 DUP8 ADD PUSH2 0x26F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27A7 JUMPI PUSH2 0x27A6 PUSH2 0x2103 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27B5 DUP6 DUP3 DUP7 ADD PUSH2 0x2156 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x27C6 DUP6 DUP3 DUP7 ADD PUSH2 0x2156 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2817 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x282A JUMPI PUSH2 0x2829 PUSH2 0x27D0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2899 DUP3 PUSH2 0x2013 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x28CB JUMPI PUSH2 0x28CA PUSH2 0x285F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7572206163636F756E7420686173206265656E2066726F7A656E00000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x290C PUSH1 0x1C DUP4 PUSH2 0x2052 JUMP JUMPDEST SWAP2 POP PUSH2 0x2917 DUP3 PUSH2 0x28D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x293B DUP2 PUSH2 0x28FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x294D DUP3 PUSH2 0x2013 JUMP JUMPDEST SWAP2 POP PUSH2 0x2958 DUP4 PUSH2 0x2013 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2970 JUMPI PUSH2 0x296F PUSH2 0x285F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x29D8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x299B JUMP JUMPDEST PUSH2 0x29E2 DUP7 DUP4 PUSH2 0x299B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A1F PUSH2 0x2A1A PUSH2 0x2A15 DUP5 PUSH2 0x2013 JUMP JUMPDEST PUSH2 0x29FA JUMP JUMPDEST PUSH2 0x2013 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A39 DUP4 PUSH2 0x2A04 JUMP JUMPDEST PUSH2 0x2A4D PUSH2 0x2A45 DUP3 PUSH2 0x2A26 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x29A8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2A62 PUSH2 0x2A55 JUMP JUMPDEST PUSH2 0x2A6D DUP2 DUP5 DUP5 PUSH2 0x2A30 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2A91 JUMPI PUSH2 0x2A86 PUSH1 0x0 DUP3 PUSH2 0x2A5A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2A73 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2AD6 JUMPI PUSH2 0x2AA7 DUP2 PUSH2 0x2976 JUMP JUMPDEST PUSH2 0x2AB0 DUP5 PUSH2 0x298B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2ABF JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2AD3 PUSH2 0x2ACB DUP6 PUSH2 0x298B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2A72 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AF9 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2ADB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B12 DUP4 DUP4 PUSH2 0x2AE8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B2B DUP3 PUSH2 0x2047 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B44 JUMPI PUSH2 0x2B43 PUSH2 0x25F6 JUMP JUMPDEST JUMPDEST PUSH2 0x2B4E DUP3 SLOAD PUSH2 0x27FF JUMP JUMPDEST PUSH2 0x2B59 DUP3 DUP3 DUP6 PUSH2 0x2A95 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2B8C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2B7A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2B84 DUP6 DUP3 PUSH2 0x2B06 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2BEC JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2B9A DUP7 PUSH2 0x2976 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2BC2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2B9D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2BDF JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2BDB PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2AE8 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C0F PUSH2 0x2C0A PUSH2 0x2C05 DUP5 PUSH2 0x210D JUMP JUMPDEST PUSH2 0x29FA JUMP JUMPDEST PUSH2 0x210D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C21 DUP3 PUSH2 0x2BF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C33 DUP3 PUSH2 0x2C16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C43 DUP2 PUSH2 0x2C28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2C5E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2584 JUMP JUMPDEST PUSH2 0x2C6B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2C3A JUMP JUMPDEST PUSH2 0x2C78 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x201D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2C8A DUP2 DUP6 PUSH2 0x209E JUMP JUMPDEST SWAP1 POP PUSH2 0x2C99 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x201D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CAE DUP3 PUSH2 0x2013 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CB9 DUP4 PUSH2 0x2013 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2CC7 DUP2 PUSH2 0x2013 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2CDE JUMPI PUSH2 0x2CDD PUSH2 0x285F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E6420696E2074686520706F6F6C000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D1B PUSH1 0x1D DUP4 PUSH2 0x2052 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D26 DUP3 PUSH2 0x2CE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D4A DUP2 PUSH2 0x2D0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D5C DUP3 PUSH2 0x2013 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D67 DUP4 PUSH2 0x2013 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2D7F JUMPI PUSH2 0x2D7E PUSH2 0x285F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2DBF DUP3 PUSH2 0x2013 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DCA DUP4 PUSH2 0x2013 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2DDA JUMPI PUSH2 0x2DD9 PUSH2 0x2D85 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E20737570706C7900000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E1B PUSH1 0x19 DUP4 PUSH2 0x2052 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E26 DUP3 PUSH2 0x2DE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E4A DUP2 PUSH2 0x2E0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2E66 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2584 JUMP JUMPDEST PUSH2 0x2E73 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x201D JUMP JUMPDEST PUSH2 0x2E80 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x201D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E9D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x201D JUMP JUMPDEST PUSH2 0x2EAA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x201D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 SWAP13 STOP 0xDA PUSH9 0x672599B3F28C6EB610 0xC7 PUSH23 0xA21240A46B735654B9D3414F4BEE3DC264736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"285:6697:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;454:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4994:278:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5317:119;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6725:148:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6879:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5442:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;923:81:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;701:32:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;390:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6238:481:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4208:399;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4664:278;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2276:93:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3585:205:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;328:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5977:211;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;421:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5606:330;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;655:40:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3018:504;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2262:696;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;454:39;;;;:::o;2074:89:1:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;4994:278:6:-;5057:4;5078:9;5090:1;5078:13;;5073:171;5097:23;:30;;;;5093:1;:34;5073:171;;;5182:6;5152:36;;:23;5176:1;5152:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:36;;;5148:86;;5215:4;5208:11;;;;;5148:86;5129:3;;;;;:::i;:::-;;;;5073:171;;;;5260:5;5253:12;;4994:278;;;;:::o;5317:119::-;5371:16;5406:23;5399:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5317:119;:::o;5039:244:1:-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;6725:148:6:-;6800:26;6849:17;6842:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6725:148;:::o;6879:101::-;6931:7;6957:16;;6950:23;;6879:101;:::o;5442:107::-;5492:16;5527:15;5520:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5442:107;:::o;3002:82:1:-;3051:5;3075:2;3068:9;;3002:82;:::o;923:81:3:-;967:7;993:4;986:11;;923:81;:::o;701:32:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;390:25::-;;;;:::o;3299:116:1:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;6238:481:6:-;1396:9;1391:344;1415:15;:22;;;;1411:1;:26;1391:344;;;1484:10;1462:32;;:15;1478:1;1462:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:32;;;1458:267;;1559:10;1519:120;;;;;;;;:::i;:::-;;;;;;;;1664:46;;;;;;;;;;:::i;:::-;;;;;;;;1458:267;1439:3;;;;;:::i;:::-;;;;1391:344;;;;6406:1:::1;6386:16;;:21;;;;;;;:::i;:::-;;;;;;;;6417:17;6453:168;;;;;;;;6488:10;6453:168;;;;;;6516:9;6453:168;;;;;;6543:6;6453:168;;;;6567:7;6453:168;;;;6592:15;6453:168;;::::0;6417:214:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;6647:65;6656:10;6668:9;6679:6;6687:7;6696:15;6647:65;;;;;;;;;;:::i;:::-;;;;;;;;6238:481:::0;;;:::o;4208:399::-;1396:9;1391:344;1415:15;:22;;;;1411:1;:26;1391:344;;;1484:10;1462:32;;:15;1478:1;1462:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:32;;;1458:267;;1559:10;1519:120;;;;;;;;:::i;:::-;;;;;;;;1664:46;;;;;;;;;;:::i;:::-;;;;;;;;1458:267;1439:3;;;;;:::i;:::-;;;;1391:344;;;;4311:4:::1;4302:6;:13;;;;:::i;:::-;4293:22;;4356:24;;4346:6;:34;;4325:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;4445:23;4474:6;4445:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4514:1;4491:19;;:24;;;;;;;:::i;:::-;;;;;;;;4525:35;4541:10;4553:6;4525:15;:35::i;:::-;4571:29;4593:6;4571:21;:29::i;:::-;4208:399:::0;;:::o;4664:278::-;4793:19;4815:36;4844:6;4815:28;:36::i;:::-;4793:58;;4880:1;4865:11;:16;4861:75;;4897:15;4918:6;4897:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4861:75;4718:224;4664:278;:::o;2276:93:1:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3585:205:6:-;3688:4;1396:9;1408:1;1396:13;;1391:344;1415:15;:22;;;;1411:1;:26;1391:344;;;1484:10;1462:32;;:15;1478:1;1462:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:32;;;1458:267;;1559:10;1519:120;;;;;;;;:::i;:::-;;;;;;;;1664:46;;;;;;;;;;:::i;:::-;;;;;;;;1458:267;1439:3;;;;;:::i;:::-;;;;1391:344;;;;3722:4:::1;3713:6;:13;;;;:::i;:::-;3704:22;;3736:26;3751:2;3755:6;3736:14;:26::i;:::-;;3779:4;3772:11;;3585:205:::0;;;;:::o;328:31::-;;;:::o;5977:211::-;6054:4;6045:6;:13;;;;:::i;:::-;6036:22;;6084:6;6068:12;;:22;;;;;;;:::i;:::-;;;;;;;;6128:6;6100:24;;:34;;;;;;;:::i;:::-;;;;;;;;6144:37;6154:10;6166:6;6174;6144:9;:37::i;:::-;5977:211;:::o;421:27::-;;;;:::o;5606:330::-;5695:7;5714:13;5730:1;5714:17;;5746:9;5741:167;5765:23;:30;;;;5761:1;:34;5741:167;;;5850:6;5820:36;;:23;5844:1;5820:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:36;;;5816:82;;5876:7;;;;;:::i;:::-;;;;5816:82;5797:3;;;;;:::i;:::-;;;;5741:167;;;;5924:5;5917:12;;;5606:330;;;:::o;3846:140:1:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;655:40:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3018:504::-;1396:9;1391:344;1415:15;:22;;;;1411:1;:26;1391:344;;;1484:10;1462:32;;:15;1478:1;1462:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:32;;;1458:267;;1559:10;1519:120;;;;;;;;:::i;:::-;;;;;;;;1664:46;;;;;;;;;;:::i;:::-;;;;;;;;1458:267;1439:3;;;;;:::i;:::-;;;;1391:344;;;;3103:4:::1;3094:6;:13;;;;:::i;:::-;3085:22;;3121:28;3138:10;3121:16;:28::i;:::-;3117:399;;;3197:3;3191:2;3182:6;:11;;;;:::i;:::-;3181:19;;;;:::i;:::-;3165:13;:35;;;;3239:3;3233:2;3224:6;:11;;;;:::i;:::-;3223:19;;;;:::i;:::-;3214:28;;3272:6;3256:12;;:22;;;;;;;:::i;:::-;;;;;;;;3306:6;3292:10;;:20;;;;;;;:::i;:::-;;;;;;;;3354:13;;3326:24;;:41;;;;;;;:::i;:::-;;;;;;;;3117:399;;;3414:6;3398:12;;:22;;;;;;;:::i;:::-;;;;;;;;3448:6;3434:10;;:20;;;;;;;:::i;:::-;;;;;;;;3468:37;3478:10;3490:6;3498;3468:9;:37::i;:::-;3117:399;3018:504:::0;:::o;2262:696::-;1396:9;1391:344;1415:15;:22;;;;1411:1;:26;1391:344;;;1484:10;1462:32;;:15;1478:1;1462:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:32;;;1458:267;;1559:10;1519:120;;;;;;;;:::i;:::-;;;;;;;;1664:46;;;;;;;;;;:::i;:::-;;;;;;;;1458:267;1439:3;;;;;:::i;:::-;;;;1391:344;;;;2344:4:::1;2335:6;:13;;;;:::i;:::-;2326:22;;2362:28;2379:10;2362:16;:28::i;:::-;2358:594;;;2424:10;;2414:6;:20;;2406:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2510:3;2504:2;2495:6;:11;;;;:::i;:::-;2494:19;;;;:::i;:::-;2478:13;:35;;;;2552:3;2546:2;2537:6;:11;;;;:::i;:::-;2536:19;;;;:::i;:::-;2527:28;;2583:6;2569:10;;:20;;;;;;;:::i;:::-;;;;;;;;2619:6;2603:12;;:22;;;;;;;:::i;:::-;;;;;;;;2667:13;;2639:24;;:41;;;;;;;:::i;:::-;;;;;;;;2694:37;2704:6;2712:10;2724:6;2694:9;:37::i;:::-;2358:594;;;2780:10;;2770:6;:20;;2762:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2848:6;2834:10;;:20;;;;;;;:::i;:::-;;;;;;;;2884:6;2868:12;;:22;;;;;;;:::i;:::-;;;;;;;;2904:37;2914:6;2922:10;2934:6;2904:9;:37::i;:::-;2358:594;2262:696:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:1:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3872:280:6:-;3979:24;;3969:6;:34;;3948:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;4096:6;4068:24;;:34;;;;;;;:::i;:::-;;;;;;;;4112:33;4122:6;4130;4138;4112:9;:33::i;:::-;3872:280;;:::o;3610:178:1:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;1059:371:3:-;1153:30;1167:4;1173:2;1177:5;1153:13;:30::i;:::-;1214:1;1198:18;;:4;:18;;;1194:230;;1232:17;1252:5;:3;:5::i;:::-;1232:25;;1271:14;1288:13;:11;:13::i;:::-;1271:30;;1328:9;1319:6;:18;1315:99;;;1381:6;1389:9;1364:35;;;;;;;;;;;;:::i;:::-;;;;;;;;1315:99;1218:206;;1194:230;1059:371;;;:::o;6271:1107:1:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:77:7:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:246::-;803:1;813:113;827:6;824:1;821:13;813:113;;;912:1;907:3;903:11;897:18;893:1;888:3;884:11;877:39;849:2;846:1;842:10;837:15;;813:113;;;960:1;951:6;946:3;942:16;935:27;784:184;722:246;;;:::o;974:102::-;1015:6;1066:2;1062:7;1057:2;1050:5;1046:14;1042:28;1032:38;;974:102;;;:::o;1082:377::-;1170:3;1198:39;1231:5;1198:39;:::i;:::-;1253:71;1317:6;1312:3;1253:71;:::i;:::-;1246:78;;1333:65;1391:6;1386:3;1379:4;1372:5;1368:16;1333:65;:::i;:::-;1423:29;1445:6;1423:29;:::i;:::-;1418:3;1414:39;1407:46;;1174:285;1082:377;;;;:::o;1465:313::-;1578:4;1616:2;1605:9;1601:18;1593:26;;1665:9;1659:4;1655:20;1651:1;1640:9;1636:17;1629:47;1693:78;1766:4;1757:6;1693:78;:::i;:::-;1685:86;;1465:313;;;;:::o;1784:75::-;1817:6;1850:2;1844:9;1834:19;;1784:75;:::o;1865:117::-;1974:1;1971;1964:12;1988:117;2097:1;2094;2087:12;2111:126;2148:7;2188:42;2181:5;2177:54;2166:65;;2111:126;;;:::o;2243:96::-;2280:7;2309:24;2327:5;2309:24;:::i;:::-;2298:35;;2243:96;;;:::o;2345:122::-;2418:24;2436:5;2418:24;:::i;:::-;2411:5;2408:35;2398:63;;2457:1;2454;2447:12;2398:63;2345:122;:::o;2473:139::-;2519:5;2557:6;2544:20;2535:29;;2573:33;2600:5;2573:33;:::i;:::-;2473:139;;;;:::o;2618:122::-;2691:24;2709:5;2691:24;:::i;:::-;2684:5;2681:35;2671:63;;2730:1;2727;2720:12;2671:63;2618:122;:::o;2746:139::-;2792:5;2830:6;2817:20;2808:29;;2846:33;2873:5;2846:33;:::i;:::-;2746:139;;;;:::o;2891:474::-;2959:6;2967;3016:2;3004:9;2995:7;2991:23;2987:32;2984:119;;;3022:79;;:::i;:::-;2984:119;3142:1;3167:53;3212:7;3203:6;3192:9;3188:22;3167:53;:::i;:::-;3157:63;;3113:117;3269:2;3295:53;3340:7;3331:6;3320:9;3316:22;3295:53;:::i;:::-;3285:63;;3240:118;2891:474;;;;;:::o;3371:90::-;3405:7;3448:5;3441:13;3434:21;3423:32;;3371:90;;;:::o;3467:109::-;3548:21;3563:5;3548:21;:::i;:::-;3543:3;3536:34;3467:109;;:::o;3582:210::-;3669:4;3707:2;3696:9;3692:18;3684:26;;3720:65;3782:1;3771:9;3767:17;3758:6;3720:65;:::i;:::-;3582:210;;;;:::o;3798:329::-;3857:6;3906:2;3894:9;3885:7;3881:23;3877:32;3874:119;;;3912:79;;:::i;:::-;3874:119;4032:1;4057:53;4102:7;4093:6;4082:9;4078:22;4057:53;:::i;:::-;4047:63;;4003:117;3798:329;;;;:::o;4133:114::-;4200:6;4234:5;4228:12;4218:22;;4133:114;;;:::o;4253:184::-;4352:11;4386:6;4381:3;4374:19;4426:4;4421:3;4417:14;4402:29;;4253:184;;;;:::o;4443:132::-;4510:4;4533:3;4525:11;;4563:4;4558:3;4554:14;4546:22;;4443:132;;;:::o;4581:108::-;4658:24;4676:5;4658:24;:::i;:::-;4653:3;4646:37;4581:108;;:::o;4695:179::-;4764:10;4785:46;4827:3;4819:6;4785:46;:::i;:::-;4863:4;4858:3;4854:14;4840:28;;4695:179;;;;:::o;4880:113::-;4950:4;4982;4977:3;4973:14;4965:22;;4880:113;;;:::o;5029:732::-;5148:3;5177:54;5225:5;5177:54;:::i;:::-;5247:86;5326:6;5321:3;5247:86;:::i;:::-;5240:93;;5357:56;5407:5;5357:56;:::i;:::-;5436:7;5467:1;5452:284;5477:6;5474:1;5471:13;5452:284;;;5553:6;5547:13;5580:63;5639:3;5624:13;5580:63;:::i;:::-;5573:70;;5666:60;5719:6;5666:60;:::i;:::-;5656:70;;5512:224;5499:1;5496;5492:9;5487:14;;5452:284;;;5456:14;5752:3;5745:10;;5153:608;;;5029:732;;;;:::o;5767:373::-;5910:4;5948:2;5937:9;5933:18;5925:26;;5997:9;5991:4;5987:20;5983:1;5972:9;5968:17;5961:47;6025:108;6128:4;6119:6;6025:108;:::i;:::-;6017:116;;5767:373;;;;:::o;6146:619::-;6223:6;6231;6239;6288:2;6276:9;6267:7;6263:23;6259:32;6256:119;;;6294:79;;:::i;:::-;6256:119;6414:1;6439:53;6484:7;6475:6;6464:9;6460:22;6439:53;:::i;:::-;6429:63;;6385:117;6541:2;6567:53;6612:7;6603:6;6592:9;6588:22;6567:53;:::i;:::-;6557:63;;6512:118;6669:2;6695:53;6740:7;6731:6;6720:9;6716:22;6695:53;:::i;:::-;6685:63;;6640:118;6146:619;;;;;:::o;6771:148::-;6872:6;6906:5;6900:12;6890:22;;6771:148;;;:::o;6925:218::-;7058:11;7092:6;7087:3;7080:19;7132:4;7127:3;7123:14;7108:29;;6925:218;;;;:::o;7149:166::-;7250:4;7273:3;7265:11;;7303:4;7298:3;7294:14;7286:22;;7149:166;;;:::o;7321:108::-;7398:24;7416:5;7398:24;:::i;:::-;7393:3;7386:37;7321:108;;:::o;7435:159::-;7509:11;7543:6;7538:3;7531:19;7583:4;7578:3;7574:14;7559:29;;7435:159;;;;:::o;7600:357::-;7678:3;7706:39;7739:5;7706:39;:::i;:::-;7761:61;7815:6;7810:3;7761:61;:::i;:::-;7754:68;;7831:65;7889:6;7884:3;7877:4;7870:5;7866:16;7831:65;:::i;:::-;7921:29;7943:6;7921:29;:::i;:::-;7916:3;7912:39;7905:46;;7682:275;7600:357;;;;:::o;8049:1152::-;8176:3;8212:4;8207:3;8203:14;8301:4;8294:5;8290:16;8284:23;8320:63;8377:4;8372:3;8368:14;8354:12;8320:63;:::i;:::-;8227:166;8480:4;8473:5;8469:16;8463:23;8499:63;8556:4;8551:3;8547:14;8533:12;8499:63;:::i;:::-;8403:169;8656:4;8649:5;8645:16;8639:23;8675:63;8732:4;8727:3;8723:14;8709:12;8675:63;:::i;:::-;8582:166;8833:4;8826:5;8822:16;8816:23;8886:3;8880:4;8876:14;8869:4;8864:3;8860:14;8853:38;8912:73;8980:4;8966:12;8912:73;:::i;:::-;8904:81;;8758:238;9082:4;9075:5;9071:16;9065:23;9101:63;9158:4;9153:3;9149:14;9135:12;9101:63;:::i;:::-;9006:168;9191:4;9184:11;;8181:1020;8049:1152;;;;:::o;9207:292::-;9344:10;9379:114;9489:3;9481:6;9379:114;:::i;:::-;9365:128;;9207:292;;;;:::o;9505:147::-;9609:4;9641;9636:3;9632:14;9624:22;;9505:147;;;:::o;9748:1183::-;9935:3;9964:88;10046:5;9964:88;:::i;:::-;10068:120;10181:6;10176:3;10068:120;:::i;:::-;10061:127;;10214:3;10259:4;10251:6;10247:17;10242:3;10238:27;10289:90;10373:5;10289:90;:::i;:::-;10402:7;10433:1;10418:468;10443:6;10440:1;10437:13;10418:468;;;10514:9;10508:4;10504:20;10499:3;10492:33;10565:6;10559:13;10593:132;10720:4;10705:13;10593:132;:::i;:::-;10585:140;;10748:94;10835:6;10748:94;:::i;:::-;10738:104;;10871:4;10866:3;10862:14;10855:21;;10478:408;10465:1;10462;10458:9;10453:14;;10418:468;;;10422:14;10902:4;10895:11;;10922:3;10915:10;;9940:991;;;;;9748:1183;;;;:::o;10937:509::-;11148:4;11186:2;11175:9;11171:18;11163:26;;11235:9;11229:4;11225:20;11221:1;11210:9;11206:17;11199:47;11263:176;11434:4;11425:6;11263:176;:::i;:::-;11255:184;;10937:509;;;;:::o;11452:86::-;11487:7;11527:4;11520:5;11516:16;11505:27;;11452:86;;;:::o;11544:112::-;11627:22;11643:5;11627:22;:::i;:::-;11622:3;11615:35;11544:112;;:::o;11662:214::-;11751:4;11789:2;11778:9;11774:18;11766:26;;11802:67;11866:1;11855:9;11851:17;11842:6;11802:67;:::i;:::-;11662:214;;;;:::o;11882:329::-;11941:6;11990:2;11978:9;11969:7;11965:23;11961:32;11958:119;;;11996:79;;:::i;:::-;11958:119;12116:1;12141:53;12186:7;12177:6;12166:9;12162:22;12141:53;:::i;:::-;12131:63;;12087:117;11882:329;;;;:::o;12217:118::-;12304:24;12322:5;12304:24;:::i;:::-;12299:3;12292:37;12217:118;;:::o;12341:222::-;12434:4;12472:2;12461:9;12457:18;12449:26;;12485:71;12553:1;12542:9;12538:17;12529:6;12485:71;:::i;:::-;12341:222;;;;:::o;12569:104::-;12614:7;12643:24;12661:5;12643:24;:::i;:::-;12632:35;;12569:104;;;:::o;12679:138::-;12760:32;12786:5;12760:32;:::i;:::-;12753:5;12750:43;12740:71;;12807:1;12804;12797:12;12740:71;12679:138;:::o;12823:155::-;12877:5;12915:6;12902:20;12893:29;;12931:41;12966:5;12931:41;:::i;:::-;12823:155;;;;:::o;12984:117::-;13093:1;13090;13083:12;13107:117;13216:1;13213;13206:12;13230:180;13278:77;13275:1;13268:88;13375:4;13372:1;13365:15;13399:4;13396:1;13389:15;13416:281;13499:27;13521:4;13499:27;:::i;:::-;13491:6;13487:40;13629:6;13617:10;13614:22;13593:18;13581:10;13578:34;13575:62;13572:88;;;13640:18;;:::i;:::-;13572:88;13680:10;13676:2;13669:22;13459:238;13416:281;;:::o;13703:129::-;13737:6;13764:20;;:::i;:::-;13754:30;;13793:33;13821:4;13813:6;13793:33;:::i;:::-;13703:129;;;:::o;13838:308::-;13900:4;13990:18;13982:6;13979:30;13976:56;;;14012:18;;:::i;:::-;13976:56;14050:29;14072:6;14050:29;:::i;:::-;14042:37;;14134:4;14128;14124:15;14116:23;;13838:308;;;:::o;14152:146::-;14249:6;14244:3;14239;14226:30;14290:1;14281:6;14276:3;14272:16;14265:27;14152:146;;;:::o;14304:425::-;14382:5;14407:66;14423:49;14465:6;14423:49;:::i;:::-;14407:66;:::i;:::-;14398:75;;14496:6;14489:5;14482:21;14534:4;14527:5;14523:16;14572:3;14563:6;14558:3;14554:16;14551:25;14548:112;;;14579:79;;:::i;:::-;14548:112;14669:54;14716:6;14711:3;14706;14669:54;:::i;:::-;14388:341;14304:425;;;;;:::o;14749:340::-;14805:5;14854:3;14847:4;14839:6;14835:17;14831:27;14821:122;;14862:79;;:::i;:::-;14821:122;14979:6;14966:20;15004:79;15079:3;15071:6;15064:4;15056:6;15052:17;15004:79;:::i;:::-;14995:88;;14811:278;14749:340;;;;:::o;15095:815::-;15190:6;15198;15206;15255:2;15243:9;15234:7;15230:23;15226:32;15223:119;;;15261:79;;:::i;:::-;15223:119;15381:1;15406:61;15459:7;15450:6;15439:9;15435:22;15406:61;:::i;:::-;15396:71;;15352:125;15516:2;15542:53;15587:7;15578:6;15567:9;15563:22;15542:53;:::i;:::-;15532:63;;15487:118;15672:2;15661:9;15657:18;15644:32;15703:18;15695:6;15692:30;15689:117;;;15725:79;;:::i;:::-;15689:117;15830:63;15885:7;15876:6;15865:9;15861:22;15830:63;:::i;:::-;15820:73;;15615:288;15095:815;;;;;:::o;15916:474::-;15984:6;15992;16041:2;16029:9;16020:7;16016:23;16012:32;16009:119;;;16047:79;;:::i;:::-;16009:119;16167:1;16192:53;16237:7;16228:6;16217:9;16213:22;16192:53;:::i;:::-;16182:63;;16138:117;16294:2;16320:53;16365:7;16356:6;16345:9;16341:22;16320:53;:::i;:::-;16310:63;;16265:118;15916:474;;;;;:::o;16396:180::-;16444:77;16441:1;16434:88;16541:4;16538:1;16531:15;16565:4;16562:1;16555:15;16582:320;16626:6;16663:1;16657:4;16653:12;16643:22;;16710:1;16704:4;16700:12;16731:18;16721:81;;16787:4;16779:6;16775:17;16765:27;;16721:81;16849:2;16841:6;16838:14;16818:18;16815:38;16812:84;;16868:18;;:::i;:::-;16812:84;16633:269;16582:320;;;:::o;16908:180::-;16956:77;16953:1;16946:88;17053:4;17050:1;17043:15;17077:4;17074:1;17067:15;17094:180;17142:77;17139:1;17132:88;17239:4;17236:1;17229:15;17263:4;17260:1;17253:15;17280:233;17319:3;17342:24;17360:5;17342:24;:::i;:::-;17333:33;;17388:66;17381:5;17378:77;17375:103;;17458:18;;:::i;:::-;17375:103;17505:1;17498:5;17494:13;17487:20;;17280:233;;;:::o;17519:178::-;17659:30;17655:1;17647:6;17643:14;17636:54;17519:178;:::o;17703:366::-;17845:3;17866:67;17930:2;17925:3;17866:67;:::i;:::-;17859:74;;17942:93;18031:3;17942:93;:::i;:::-;18060:2;18055:3;18051:12;18044:19;;17703:366;;;:::o;18075:419::-;18241:4;18279:2;18268:9;18264:18;18256:26;;18328:9;18322:4;18318:20;18314:1;18303:9;18299:17;18292:47;18356:131;18482:4;18356:131;:::i;:::-;18348:139;;18075:419;;;:::o;18500:191::-;18540:3;18559:20;18577:1;18559:20;:::i;:::-;18554:25;;18593:20;18611:1;18593:20;:::i;:::-;18588:25;;18636:1;18633;18629:9;18622:16;;18657:3;18654:1;18651:10;18648:36;;;18664:18;;:::i;:::-;18648:36;18500:191;;;;:::o;18697:141::-;18746:4;18769:3;18761:11;;18792:3;18789:1;18782:14;18826:4;18823:1;18813:18;18805:26;;18697:141;;;:::o;18844:93::-;18881:6;18928:2;18923;18916:5;18912:14;18908:23;18898:33;;18844:93;;;:::o;18943:107::-;18987:8;19037:5;19031:4;19027:16;19006:37;;18943:107;;;;:::o;19056:393::-;19125:6;19175:1;19163:10;19159:18;19198:97;19228:66;19217:9;19198:97;:::i;:::-;19316:39;19346:8;19335:9;19316:39;:::i;:::-;19304:51;;19388:4;19384:9;19377:5;19373:21;19364:30;;19437:4;19427:8;19423:19;19416:5;19413:30;19403:40;;19132:317;;19056:393;;;;;:::o;19455:60::-;19483:3;19504:5;19497:12;;19455:60;;;:::o;19521:142::-;19571:9;19604:53;19622:34;19631:24;19649:5;19631:24;:::i;:::-;19622:34;:::i;:::-;19604:53;:::i;:::-;19591:66;;19521:142;;;:::o;19669:75::-;19712:3;19733:5;19726:12;;19669:75;;;:::o;19750:269::-;19860:39;19891:7;19860:39;:::i;:::-;19921:91;19970:41;19994:16;19970:41;:::i;:::-;19962:6;19955:4;19949:11;19921:91;:::i;:::-;19915:4;19908:105;19826:193;19750:269;;;:::o;20025:73::-;20070:3;20025:73;:::o;20104:189::-;20181:32;;:::i;:::-;20222:65;20280:6;20272;20266:4;20222:65;:::i;:::-;20157:136;20104:189;;:::o;20299:186::-;20359:120;20376:3;20369:5;20366:14;20359:120;;;20430:39;20467:1;20460:5;20430:39;:::i;:::-;20403:1;20396:5;20392:13;20383:22;;20359:120;;;20299:186;;:::o;20491:543::-;20592:2;20587:3;20584:11;20581:446;;;20626:38;20658:5;20626:38;:::i;:::-;20710:29;20728:10;20710:29;:::i;:::-;20700:8;20696:44;20893:2;20881:10;20878:18;20875:49;;;20914:8;20899:23;;20875:49;20937:80;20993:22;21011:3;20993:22;:::i;:::-;20983:8;20979:37;20966:11;20937:80;:::i;:::-;20596:431;;20581:446;20491:543;;;:::o;21040:117::-;21094:8;21144:5;21138:4;21134:16;21113:37;;21040:117;;;;:::o;21163:169::-;21207:6;21240:51;21288:1;21284:6;21276:5;21273:1;21269:13;21240:51;:::i;:::-;21236:56;21321:4;21315;21311:15;21301:25;;21214:118;21163:169;;;;:::o;21337:295::-;21413:4;21559:29;21584:3;21578:4;21559:29;:::i;:::-;21551:37;;21621:3;21618:1;21614:11;21608:4;21605:21;21597:29;;21337:295;;;;:::o;21637:1395::-;21754:37;21787:3;21754:37;:::i;:::-;21856:18;21848:6;21845:30;21842:56;;;21878:18;;:::i;:::-;21842:56;21922:38;21954:4;21948:11;21922:38;:::i;:::-;22007:67;22067:6;22059;22053:4;22007:67;:::i;:::-;22101:1;22125:4;22112:17;;22157:2;22149:6;22146:14;22174:1;22169:618;;;;22831:1;22848:6;22845:77;;;22897:9;22892:3;22888:19;22882:26;22873:35;;22845:77;22948:67;23008:6;23001:5;22948:67;:::i;:::-;22942:4;22935:81;22804:222;22139:887;;22169:618;22221:4;22217:9;22209:6;22205:22;22255:37;22287:4;22255:37;:::i;:::-;22314:1;22328:208;22342:7;22339:1;22336:14;22328:208;;;22421:9;22416:3;22412:19;22406:26;22398:6;22391:42;22472:1;22464:6;22460:14;22450:24;;22519:2;22508:9;22504:18;22491:31;;22365:4;22362:1;22358:12;22353:17;;22328:208;;;22564:6;22555:7;22552:19;22549:179;;;22622:9;22617:3;22613:19;22607:26;22665:48;22707:4;22699:6;22695:17;22684:9;22665:48;:::i;:::-;22657:6;22650:64;22572:156;22549:179;22774:1;22770;22762:6;22758:14;22754:22;22748:4;22741:36;22176:611;;;22139:887;;21729:1303;;;21637:1395;;:::o;23038:142::-;23088:9;23121:53;23139:34;23148:24;23166:5;23148:24;:::i;:::-;23139:34;:::i;:::-;23121:53;:::i;:::-;23108:66;;23038:142;;;:::o;23186:126::-;23236:9;23269:37;23300:5;23269:37;:::i;:::-;23256:50;;23186:126;;;:::o;23318:134::-;23376:9;23409:37;23440:5;23409:37;:::i;:::-;23396:50;;23318:134;;;:::o;23458:147::-;23553:45;23592:5;23553:45;:::i;:::-;23548:3;23541:58;23458:147;;:::o;23611:771::-;23844:4;23882:3;23871:9;23867:19;23859:27;;23896:71;23964:1;23953:9;23949:17;23940:6;23896:71;:::i;:::-;23977:80;24053:2;24042:9;24038:18;24029:6;23977:80;:::i;:::-;24067:72;24135:2;24124:9;24120:18;24111:6;24067:72;:::i;:::-;24186:9;24180:4;24176:20;24171:2;24160:9;24156:18;24149:48;24214:78;24287:4;24278:6;24214:78;:::i;:::-;24206:86;;24302:73;24370:3;24359:9;24355:19;24346:6;24302:73;:::i;:::-;23611:771;;;;;;;;:::o;24388:410::-;24428:7;24451:20;24469:1;24451:20;:::i;:::-;24446:25;;24485:20;24503:1;24485:20;:::i;:::-;24480:25;;24540:1;24537;24533:9;24562:30;24580:11;24562:30;:::i;:::-;24551:41;;24741:1;24732:7;24728:15;24725:1;24722:22;24702:1;24695:9;24675:83;24652:139;;24771:18;;:::i;:::-;24652:139;24436:362;24388:410;;;;:::o;24804:179::-;24944:31;24940:1;24932:6;24928:14;24921:55;24804:179;:::o;24989:366::-;25131:3;25152:67;25216:2;25211:3;25152:67;:::i;:::-;25145:74;;25228:93;25317:3;25228:93;:::i;:::-;25346:2;25341:3;25337:12;25330:19;;24989:366;;;:::o;25361:419::-;25527:4;25565:2;25554:9;25550:18;25542:26;;25614:9;25608:4;25604:20;25600:1;25589:9;25585:17;25578:47;25642:131;25768:4;25642:131;:::i;:::-;25634:139;;25361:419;;;:::o;25786:194::-;25826:4;25846:20;25864:1;25846:20;:::i;:::-;25841:25;;25880:20;25898:1;25880:20;:::i;:::-;25875:25;;25924:1;25921;25917:9;25909:17;;25948:1;25942:4;25939:11;25936:37;;;25953:18;;:::i;:::-;25936:37;25786:194;;;;:::o;25986:180::-;26034:77;26031:1;26024:88;26131:4;26128:1;26121:15;26155:4;26152:1;26145:15;26172:185;26212:1;26229:20;26247:1;26229:20;:::i;:::-;26224:25;;26263:20;26281:1;26263:20;:::i;:::-;26258:25;;26302:1;26292:35;;26307:18;;:::i;:::-;26292:35;26349:1;26346;26342:9;26337:14;;26172:185;;;;:::o;26363:175::-;26503:27;26499:1;26491:6;26487:14;26480:51;26363:175;:::o;26544:366::-;26686:3;26707:67;26771:2;26766:3;26707:67;:::i;:::-;26700:74;;26783:93;26872:3;26783:93;:::i;:::-;26901:2;26896:3;26892:12;26885:19;;26544:366;;;:::o;26916:419::-;27082:4;27120:2;27109:9;27105:18;27097:26;;27169:9;27163:4;27159:20;27155:1;27144:9;27140:17;27133:47;27197:131;27323:4;27197:131;:::i;:::-;27189:139;;26916:419;;;:::o;27341:442::-;27490:4;27528:2;27517:9;27513:18;27505:26;;27541:71;27609:1;27598:9;27594:17;27585:6;27541:71;:::i;:::-;27622:72;27690:2;27679:9;27675:18;27666:6;27622:72;:::i;:::-;27704;27772:2;27761:9;27757:18;27748:6;27704:72;:::i;:::-;27341:442;;;;;;:::o;27789:332::-;27910:4;27948:2;27937:9;27933:18;27925:26;;27961:71;28029:1;28018:9;28014:17;28005:6;27961:71;:::i;:::-;28042:72;28110:2;28099:9;28095:18;28086:6;28042:72;:::i;:::-;27789:332;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2401400","executionCost":"infinite","totalCost":"infinite"},"external":{"_owner()":"infinite","addToReversePool(uint256)":"infinite","allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2887","cap()":"infinite","decimals()":"388","deployToBlockchain(address,uint256,string)":"infinite","fraudulentUserAddresses(uint256)":"5022","frozenAddresses(uint256)":"5045","getAllFraudulentUsers()":"infinite","getAllFrozenUsers()":"infinite","getAllTransactions()":"infinite","getFraudulentUserReportCount(address)":"infinite","getTransactionCount()":"2505","isFraudulentUser(address)":"infinite","marketSupply()":"2496","name()":"infinite","ownerToken()":"2540","reportForReverse(address,uint256)":"infinite","restrictAccountAccess(address)":"infinite","reverseTransactionSupply()":"2476","symbol()":"infinite","totalSupply()":"2483","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","userDeposit(uint256)":"infinite","userWithdrawal(uint256)":"infinite"},"internal":{"reverseTransfer(address,uint256)":"infinite"}},"methodIdentifiers":{"_owner()":"b2bdfa7b","addToReversePool(uint256)":"bada6e23","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","cap()":"355274ea","decimals()":"313ce567","deployToBlockchain(address,uint256,string)":"85805723","fraudulentUserAddresses(uint256)":"e80a4d58","frozenAddresses(uint256)":"5506ed44","getAllFraudulentUsers()":"1e36aa63","getAllFrozenUsers()":"2e9c3d94","getAllTransactions()":"27506f53","getFraudulentUserReportCount(address)":"dcf6ea88","getTransactionCount()":"2e7700f0","isFraudulentUser(address)":"19a3c68d","marketSupply()":"bafb8e83","name()":"06fdde03","ownerToken()":"65371883","reportForReverse(address,uint256)":"8d1aadbf","restrictAccountAccess(address)":"90aaafb3","reverseTransactionSupply()":"044d1d4c","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","userDeposit(uint256)":"f868e766","userWithdrawal(uint256)":"f09c69c7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"max_supply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20InvalidCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"restrictAccess\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"AccountFrozenEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"datetime\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addToReversePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"deployToBlockchain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fraudulentUserAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"frozenAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllFraudulentUsers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllFrozenUsers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTransactions\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"datetime\",\"type\":\"uint256\"}],\"internalType\":\"struct FoterreToken.TransactionDetail[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"getFraudulentUserReportCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransactionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isFraudulentUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"reportForReverse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"restrictAccountAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reverseTransactionSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"userDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"userWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20ExceededCap(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidCap(uint256)\":[{\"details\":\"The supplied cap is not a valid cap.\"}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FoterreToken.sol\":\"FoterreToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Capped.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC20} from \\\"../ERC20.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\\n */\\nabstract contract ERC20Capped is ERC20 {\\n    uint256 private immutable _cap;\\n\\n    /**\\n     * @dev Total supply cap has been exceeded.\\n     */\\n    error ERC20ExceededCap(uint256 increasedSupply, uint256 cap);\\n\\n    /**\\n     * @dev The supplied cap is not a valid cap.\\n     */\\n    error ERC20InvalidCap(uint256 cap);\\n\\n    /**\\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\\n     * set once during construction.\\n     */\\n    constructor(uint256 cap_) {\\n        if (cap_ == 0) {\\n            revert ERC20InvalidCap(0);\\n        }\\n        _cap = cap_;\\n    }\\n\\n    /**\\n     * @dev Returns the cap on the token's total supply.\\n     */\\n    function cap() public view virtual returns (uint256) {\\n        return _cap;\\n    }\\n\\n    /**\\n     * @dev See {ERC20-_update}.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual override {\\n        super._update(from, to, value);\\n\\n        if (from == address(0)) {\\n            uint256 maxSupply = cap();\\n            uint256 supply = totalSupply();\\n            if (supply > maxSupply) {\\n                revert ERC20ExceededCap(supply, maxSupply);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9a961321311c070327b31fba89d821346225a411f946c9e84b330afdfdbb1d60\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/FoterreToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\\\";\\n\\n//Error Handling Section\\nerror notOwner(string message);\\nerror restrictAccess(string message);\\n\\ncontract FoterreToken is ERC20Capped {\\n    address public immutable _owner;\\n\\n    //Token Supply Pool\\n    uint256 public ownerToken;\\n    uint256 public marketSupply;\\n    uint256 public reverseTransactionSupply;\\n\\n    uint256 transactionCount;\\n\\n    event AccountFrozenEvent(address indexed account, string message);\\n    //To store scammer address in the smart contract\\n    address[] public fraudulentUserAddresses;\\n    address[] public frozenAddresses;\\n    uint256 penaltyAmount;\\n    uint256 fraudulentUserCount;\\n\\n    //To store transaction details\\n    event Transfer(\\n        address sender,\\n        address recipient,\\n        uint amount,\\n        string message,\\n        uint256 datetime\\n    );\\n\\n    struct TransactionDetail {\\n        address sender;\\n        address recipient;\\n        uint256 amount;\\n        string message;\\n        uint256 datetime;\\n    }\\n\\n    TransactionDetail[] transactionStruct;\\n\\n    //Modifier Section\\n    modifier ownerAccess() {\\n        if (msg.sender != _owner) {\\n            revert notOwner(\\\"You are not the owner\\\");\\n        }\\n        _;\\n    }\\n    modifier notFrozen() {\\n        for (uint256 i = 0; i < frozenAddresses.length; i++) {\\n            if (frozenAddresses[i] == msg.sender) {\\n                emit AccountFrozenEvent(\\n                    msg.sender,\\n                    \\\"Your account has been frozen\\\"\\n                );\\n                revert restrictAccess(\\\"Your account has been frozen\\\");\\n            }\\n        }\\n        _;\\n    }\\n\\n    constructor(\\n        uint256 max_supply\\n    ) ERC20(\\\"Foterre\\\", \\\"FOTE\\\") ERC20Capped(max_supply * 1e18) {\\n        _owner = msg.sender;\\n        uint256 initialTokenSupply = 120000000000 * 1e18; //50% of total supply\\n        uint256 initial_reversePool = 30000000000 * 1e18;\\n\\n        ownerToken = initialTokenSupply;\\n        reverseTransactionSupply = initial_reversePool;\\n\\n        _mint(_owner, initialTokenSupply);\\n        _mint(_owner, initial_reversePool);\\n    }\\n\\n    //Deduct contract token to User\\n    function userDeposit(uint256 amount) public notFrozen {\\n        amount = amount * 1e18;\\n        if (isFraudulentUser(msg.sender)) {\\n            require(amount <= ownerToken, \\\"Insufficient token supply\\\");\\n            penaltyAmount = (amount * 20) / 100;\\n            amount = (amount * 80) / 100;\\n            ownerToken -= amount;\\n            marketSupply += amount;\\n            reverseTransactionSupply += penaltyAmount;\\n            _transfer(_owner, msg.sender, amount);\\n        } else {\\n            require(amount <= ownerToken, \\\"Insufficient token supply\\\");\\n            ownerToken -= amount;\\n            marketSupply += amount;\\n            _transfer(_owner, msg.sender, amount);\\n        }\\n    }\\n\\n    //User withdraw by sending token back to contract\\n    function userWithdrawal(uint256 amount) public notFrozen {\\n        amount = amount * 1e18;\\n        if (isFraudulentUser(msg.sender)) {\\n            penaltyAmount = (amount * 20) / 100;\\n            amount = (amount * 80) / 100;\\n            marketSupply -= amount;\\n            ownerToken += amount;\\n            reverseTransactionSupply += penaltyAmount;\\n        } else {\\n            marketSupply -= amount;\\n            ownerToken += amount;\\n            _transfer(msg.sender, _owner, amount);\\n        }\\n    }\\n\\n    //Override transfer for having different supply pool\\n    function transfer(\\n        address to,\\n        uint256 amount\\n    ) public override notFrozen returns (bool) {\\n        amount = amount * 1e18;\\n        super.transfer(to, amount);\\n        return true;\\n    }\\n\\n    //Owner called this function to send fund from reverse transaction pool\\n    function reverseTransfer(address victim, uint256 amount) internal {\\n        require(\\n            amount <= reverseTransactionSupply,\\n            \\\"Insufficient fund in the pool\\\"\\n        );\\n        reverseTransactionSupply -= amount;\\n        _transfer(_owner, victim, amount);\\n    }\\n\\n    //User report scammer for reverse transaction\\n    function reportForReverse(address target, uint256 amount) public notFrozen {\\n        amount = amount * 1e18;\\n        require(\\n            amount <= reverseTransactionSupply,\\n            \\\"Insufficient fund in the pool\\\"\\n        );\\n        fraudulentUserAddresses.push(target);\\n        fraudulentUserCount += 1;\\n        reverseTransfer(msg.sender, amount);\\n\\n        restrictAccountAccess(target);\\n    }\\n\\n    //Check if target address existed in frauduser\\n    function restrictAccountAccess(address target) public {\\n        // Check if the user has been reported more than 3 times\\n        uint256 reportCount = getFraudulentUserReportCount(target);\\n        if (reportCount >= 3) {\\n            frozenAddresses.push(target);\\n        }\\n    }\\n\\n    //To check if the user is fraudulent user\\n    function isFraudulentUser(address target) public view returns (bool) {\\n        for (uint256 i = 0; i < fraudulentUserAddresses.length; i++) {\\n            if (fraudulentUserAddresses[i] == target) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    //To show fraudulent usser address\\n    function getAllFraudulentUsers() public view returns (address[] memory) {\\n        return fraudulentUserAddresses;\\n    }\\n\\n    function getAllFrozenUsers() public view returns (address[] memory) {\\n        return frozenAddresses;\\n    }\\n\\n    //To check if the reported user existed before\\n    function getFraudulentUserReportCount(\\n        address target\\n    ) public view returns (uint256) {\\n        uint256 count = 0;\\n        for (uint256 i = 0; i < fraudulentUserAddresses.length; i++) {\\n            if (fraudulentUserAddresses[i] == target) {\\n                count++;\\n            }\\n        }\\n        return count;\\n    }\\n\\n    //Donation to the help victims\\n    function addToReversePool(uint256 amount) public {\\n        amount = amount * 1e18;\\n        marketSupply -= amount;\\n        reverseTransactionSupply += amount;\\n        _transfer(msg.sender, _owner, amount);\\n    }\\n\\n    //Add transaction history to Blockchain\\n    function deployToBlockchain(\\n        address payable recipient,\\n        uint amount,\\n        string memory message\\n    ) public notFrozen {\\n        transactionCount += 1;\\n        transactionStruct.push(\\n            TransactionDetail(\\n                msg.sender,\\n                recipient,\\n                amount,\\n                message,\\n                block.timestamp\\n            )\\n        );\\n\\n        emit Transfer(msg.sender, recipient, amount, message, block.timestamp);\\n    }\\n\\n    function getAllTransactions()\\n        public\\n        view\\n        returns (TransactionDetail[] memory)\\n    {\\n        return transactionStruct;\\n    }\\n\\n    function getTransactionCount() public view returns (uint256) {\\n        return transactionCount;\\n    }\\n}\\n\",\"keccak256\":\"0xa9061d26891ae9e854978d798efd15948de78db100dab4f43435901fa9f005c8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":159,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":165,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":167,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":169,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":171,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":902,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"ownerToken","offset":0,"slot":"5","type":"t_uint256"},{"astId":904,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"marketSupply","offset":0,"slot":"6","type":"t_uint256"},{"astId":906,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"reverseTransactionSupply","offset":0,"slot":"7","type":"t_uint256"},{"astId":908,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"transactionCount","offset":0,"slot":"8","type":"t_uint256"},{"astId":917,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"fraudulentUserAddresses","offset":0,"slot":"9","type":"t_array(t_address)dyn_storage"},{"astId":920,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"frozenAddresses","offset":0,"slot":"10","type":"t_array(t_address)dyn_storage"},{"astId":922,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"penaltyAmount","offset":0,"slot":"11","type":"t_uint256"},{"astId":924,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"fraudulentUserCount","offset":0,"slot":"12","type":"t_uint256"},{"astId":951,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"transactionStruct","offset":0,"slot":"13","type":"t_array(t_struct(TransactionDetail)947_storage)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_struct(TransactionDetail)947_storage)dyn_storage":{"base":"t_struct(TransactionDetail)947_storage","encoding":"dynamic_array","label":"struct FoterreToken.TransactionDetail[]","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(TransactionDetail)947_storage":{"encoding":"inplace","label":"struct FoterreToken.TransactionDetail","members":[{"astId":938,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"sender","offset":0,"slot":"0","type":"t_address"},{"astId":940,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"recipient","offset":0,"slot":"1","type":"t_address"},{"astId":942,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"amount","offset":0,"slot":"2","type":"t_uint256"},{"astId":944,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"message","offset":0,"slot":"3","type":"t_string_storage"},{"astId":946,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"datetime","offset":0,"slot":"4","type":"t_uint256"}],"numberOfBytes":"160"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}