{"id":"e786ecebcdf95c3dd99e123c51f3d4f2","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Capped.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\n\n/**\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\n */\nabstract contract ERC20Capped is ERC20 {\n    uint256 private immutable _cap;\n\n    /**\n     * @dev Total supply cap has been exceeded.\n     */\n    error ERC20ExceededCap(uint256 increasedSupply, uint256 cap);\n\n    /**\n     * @dev The supplied cap is not a valid cap.\n     */\n    error ERC20InvalidCap(uint256 cap);\n\n    /**\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\n     * set once during construction.\n     */\n    constructor(uint256 cap_) {\n        if (cap_ == 0) {\n            revert ERC20InvalidCap(0);\n        }\n        _cap = cap_;\n    }\n\n    /**\n     * @dev Returns the cap on the token's total supply.\n     */\n    function cap() public view virtual returns (uint256) {\n        return _cap;\n    }\n\n    /**\n     * @dev See {ERC20-_update}.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override {\n        super._update(from, to, value);\n\n        if (from == address(0)) {\n            uint256 maxSupply = cap();\n            uint256 supply = totalSupply();\n            if (supply > maxSupply) {\n                revert ERC20ExceededCap(supply, maxSupply);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"contracts/FoterreToken.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\";\n\n//Error Handling Section\nerror notOwner(string message);\n\ncontract FoterreToken is ERC20Capped {\n    address public immutable _owner;\n\n    uint256 public marketSupply;\n    uint256 public reverseTransactionSupply;\n\n    event Penalty(address indexed scammer, uint256 penaltyAmount);\n\n    //Modifier Section\n    modifier ownerAccess() {\n        if (msg.sender != _owner) {\n            revert notOwner(\"You are not the owner\");\n        }\n        _;\n    }\n\n    constructor(\n        uint256 max_supply\n    ) ERC20(\"Foterre\", \"FOTE\") ERC20Capped(max_supply * 1e18) {\n        _owner = msg.sender;\n        uint256 initialTokenSupply = 120000000000 * 1e18; //50% of total supply\n        uint256 initial_reversePool = 30000000000 * 1e18;\n\n        marketSupply = initialTokenSupply;\n        reverseTransactionSupply = initial_reversePool;\n\n        _mint(_owner, initialTokenSupply);\n        _mint(_owner, initial_reversePool);\n    }\n\n    //Override transfer for having different supply pool\n    function transfer(\n        address to,\n        uint256 amount\n    ) public override returns (bool) {\n        amount = amount * 1e18;\n        require(amount <= marketSupply, \"Insufficient market supply\");\n        marketSupply -= amount;\n        super.transfer(to, amount);\n        return true;\n    }\n\n    //Owner called this function to send fund from reverse transaction pool\n    function reverseTransfer(\n        address victim,\n        address target,\n        uint256 amount\n    ) public ownerAccess {\n        require(\n            amount <= reverseTransactionSupply,\n            \"Insufficient fund in the pool\"\n        );\n        amount = amount * 1e18;\n        reverseTransactionSupply -= amount;\n        _transfer(_owner, victim, amount);\n\n        penalizeFraud(target, amount); //\n    }\n\n    function penalizeFraud(address scammer, uint256 amount) internal {\n        require(\n            balanceOf(scammer) >= amount,\n            \"Insufficient balance for penalty\"\n        );\n        _transfer(scammer, _owner, amount);\n        reverseTransactionSupply += amount;\n\n        emit Penalty(scammer, amount); //\n    }\n\n    function addToReversePool(address sender, uint256 amount) public {\n        amount = amount * 1e18;\n        reverseTransactionSupply += amount;\n        _transfer(sender, _owner, amount);\n    }\n\n    function mintToReverseTransactionPool(uint256 amount) public ownerAccess {\n        amount = amount * 1e18;\n        reverseTransactionSupply += amount;\n        _mint(msg.sender, amount);\n    }\n}\n"},"contracts/Transaction.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\ncontract Transaction {\n    uint256 transactionCount;\n\n    event Transfer(\n        address sender,\n        address recipient,\n        uint amount,\n        string message,\n        uint256 datetime,\n        string keyword\n    );\n\n    struct TransactionDetail {\n        address sender;\n        address recipient;\n        uint256 amount;\n        string message;\n        uint256 datetime;\n        string keyword;\n    }\n\n    TransactionDetail[] transactionStruct;\n\n    function deployToBlockchain(\n        address payable recipient,\n        uint amount,\n        string memory message,\n        string memory keyword\n    ) public {\n        transactionCount += 1;\n        transactionStruct.push(\n            TransactionDetail(\n                msg.sender,\n                recipient,\n                amount,\n                message,\n                block.timestamp,\n                keyword\n            )\n        );\n\n        emit Transfer(\n            msg.sender,\n            recipient,\n            amount,\n            message,\n            block.timestamp,\n            keyword\n        );\n    }\n\n    function getAllTransactions()\n        public\n        view\n        returns (TransactionDetail[] memory)\n    {\n        return transactionStruct;\n    }\n\n    function getTransactionCount() public view returns (uint256) {\n        return transactionCount;\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[136],"IERC20Errors":[41],"IERC721Errors":[89]},"id":137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"138:139:0","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":41,"linearizedBaseContracts":[41],"name":"IERC20Errors","nameLocation":"288:12:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"307:309:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":11,"name":"ERC20InsufficientBalance","nameLocation":"627:24:0","nodeType":"ErrorDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"sender","nameLocation":"660:6:0","nodeType":"VariableDeclaration","scope":11,"src":"652:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"balance","nameLocation":"676:7:0","nodeType":"VariableDeclaration","scope":11,"src":"668:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"needed","nameLocation":"693:6:0","nodeType":"VariableDeclaration","scope":11,"src":"685:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:0"},"src":"621:80:0"},{"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"707:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":16,"name":"ERC20InvalidSender","nameLocation":"870:18:0","nodeType":"ErrorDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"sender","nameLocation":"897:6:0","nodeType":"VariableDeclaration","scope":16,"src":"889:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:0"},"src":"864:41:0"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"911:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":21,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:0","nodeType":"ErrorDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:0","nodeType":"VariableDeclaration","scope":21,"src":"1102:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:0"},"src":"1075:45:0"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"1126:345:0","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":30,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"spender","nameLocation":"1517:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1509:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:0","nodeType":"VariableDeclaration","scope":30,"src":"1526:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"needed","nameLocation":"1553:6:0","nodeType":"VariableDeclaration","scope":30,"src":"1545:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:0"},"src":"1476:85:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1567:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":35,"name":"ERC20InvalidApprover","nameLocation":"1752:20:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"approver","nameLocation":"1781:8:0","nodeType":"VariableDeclaration","scope":35,"src":"1773:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:0"},"src":"1746:45:0"},{"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"1797:195:0","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":40,"name":"ERC20InvalidSpender","nameLocation":"2003:19:0","nodeType":"ErrorDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"spender","nameLocation":"2031:7:0","nodeType":"VariableDeclaration","scope":40,"src":"2023:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:0"},"src":"1997:43:0"}],"scope":137,"src":"278:1764:0","usedErrors":[11,16,21,30,35,40],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2044:141:0","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":89,"linearizedBaseContracts":[89],"name":"IERC721Errors","nameLocation":"2196:13:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"2216:219:0","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":47,"name":"ERC721InvalidOwner","nameLocation":"2446:18:0","nodeType":"ErrorDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"owner","nameLocation":"2473:5:0","nodeType":"VariableDeclaration","scope":47,"src":"2465:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:0"},"src":"2440:40:0"},{"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"2486:132:0","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":52,"name":"ERC721NonexistentToken","nameLocation":"2629:22:0","nodeType":"ErrorDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:0","nodeType":"VariableDeclaration","scope":52,"src":"2652:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:0"},"src":"2623:46:0"},{"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2675:289:0","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":61,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:0","nodeType":"ErrorDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"sender","nameLocation":"3004:6:0","nodeType":"VariableDeclaration","scope":61,"src":"2996:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:0","nodeType":"VariableDeclaration","scope":61,"src":"3012:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"owner","nameLocation":"3037:5:0","nodeType":"VariableDeclaration","scope":61,"src":"3029:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:0"},"src":"2969:75:0"},{"documentation":{"id":62,"nodeType":"StructuredDocumentation","src":"3050:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":66,"name":"ERC721InvalidSender","nameLocation":"3213:19:0","nodeType":"ErrorDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"sender","nameLocation":"3241:6:0","nodeType":"VariableDeclaration","scope":66,"src":"3233:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:0"},"src":"3207:42:0"},{"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"3255:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":71,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:0","nodeType":"ErrorDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:0","nodeType":"VariableDeclaration","scope":71,"src":"3447:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:0"},"src":"3419:46:0"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3471:247:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":78,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:0","nodeType":"ErrorDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"operator","nameLocation":"3764:8:0","nodeType":"VariableDeclaration","scope":78,"src":"3756:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:0","nodeType":"VariableDeclaration","scope":78,"src":"3774:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:0"},"src":"3723:68:0"},{"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"3797:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":83,"name":"ERC721InvalidApprover","nameLocation":"3982:21:0","nodeType":"ErrorDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"approver","nameLocation":"4012:8:0","nodeType":"VariableDeclaration","scope":83,"src":"4004:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:0"},"src":"3976:46:0"},{"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"4028:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":88,"name":"ERC721InvalidOperator","nameLocation":"4236:21:0","nodeType":"ErrorDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"operator","nameLocation":"4266:8:0","nodeType":"VariableDeclaration","scope":88,"src":"4258:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:0"},"src":"4230:46:0"}],"scope":137,"src":"2186:2092:0","usedErrors":[47,52,61,66,71,78,83,88],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"4280:143:0","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":136,"linearizedBaseContracts":[136],"name":"IERC1155Errors","nameLocation":"4434:14:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"4455:361:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":101,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:0","nodeType":"ErrorDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"sender","nameLocation":"4862:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4854:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"balance","nameLocation":"4878:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4870:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"needed","nameLocation":"4895:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4887:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4903:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:0"},"src":"4821:99:0"},{"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"4926:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":106,"name":"ERC1155InvalidSender","nameLocation":"5089:20:0","nodeType":"ErrorDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"sender","nameLocation":"5118:6:0","nodeType":"VariableDeclaration","scope":106,"src":"5110:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:0"},"src":"5083:43:0"},{"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"5132:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":111,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:0","nodeType":"ErrorDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:0","nodeType":"VariableDeclaration","scope":111,"src":"5325:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:0"},"src":"5296:47:0"},{"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"5349:256:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":118,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:0","nodeType":"ErrorDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"operator","nameLocation":"5653:8:0","nodeType":"VariableDeclaration","scope":118,"src":"5645:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"owner","nameLocation":"5671:5:0","nodeType":"VariableDeclaration","scope":118,"src":"5663:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":115,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:0"},"src":"5610:68:0"},{"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"5684:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":123,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:0","nodeType":"ErrorDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"approver","nameLocation":"5900:8:0","nodeType":"VariableDeclaration","scope":123,"src":"5892:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:0"},"src":"5863:47:0"},{"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"5916:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":128,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:0","nodeType":"ErrorDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"operator","nameLocation":"6155:8:0","nodeType":"VariableDeclaration","scope":128,"src":"6147:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:0"},"src":"6118:47:0"},{"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"6171:280:0","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":135,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:0","nodeType":"ErrorDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:0","nodeType":"VariableDeclaration","scope":135,"src":"6488:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:0","nodeType":"VariableDeclaration","scope":135,"src":"6507:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:0"},"src":"6456:73:0"}],"scope":137,"src":"4424:2107:0","usedErrors":[101,106,111,118,123,128,135],"usedEvents":[]}],"src":"112:6420:0"},"id":0},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[884],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[854]},"id":652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":730,"src":"131:36:1","symbolAliases":[{"foreign":{"id":139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"139:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":855,"src":"168:63:1","symbolAliases":[{"foreign":{"id":141,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"176:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":885,"src":"232:48:1","symbolAliases":[{"foreign":{"id":143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"240:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":137,"src":"281:65:1","symbolAliases":[{"foreign":{"id":145,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"289:12:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":148,"name":"Context","nameLocations":["1428:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":884,"src":"1428:7:1"},"id":149,"nodeType":"InheritanceSpecifier","src":"1428:7:1"},{"baseName":{"id":150,"name":"IERC20","nameLocations":["1437:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"1437:6:1"},"id":151,"nodeType":"InheritanceSpecifier","src":"1437:6:1"},{"baseName":{"id":152,"name":"IERC20Metadata","nameLocations":["1445:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":854,"src":"1445:14:1"},"id":153,"nodeType":"InheritanceSpecifier","src":"1445:14:1"},{"baseName":{"id":154,"name":"IERC20Errors","nameLocations":["1461:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"1461:12:1"},"id":155,"nodeType":"InheritanceSpecifier","src":"1461:12:1"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"348:1052:1","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":651,"linearizedBaseContracts":[651,41,854,729,884],"name":"ERC20","nameLocation":"1419:5:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":159,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:1","nodeType":"VariableDeclaration","scope":651,"src":"1480:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":158,"keyName":"account","keyNameLocation":"1496:7:1","keyType":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":165,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:1","nodeType":"VariableDeclaration","scope":651,"src":"1540:83:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":164,"keyName":"account","keyNameLocation":"1556:7:1","keyType":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":163,"keyName":"spender","keyNameLocation":"1583:7:1","keyType":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":167,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:1","nodeType":"VariableDeclaration","scope":651,"src":"1630:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":169,"mutability":"mutable","name":"_name","nameLocation":"1680:5:1","nodeType":"VariableDeclaration","scope":651,"src":"1665:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":168,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":171,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:1","nodeType":"VariableDeclaration","scope":651,"src":"1691:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":170,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":187,"nodeType":"Block","src":"1952:57:1","statements":[{"expression":{"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":179,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"1962:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":180,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"1970:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":182,"nodeType":"ExpressionStatement","src":"1962:13:1"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":183,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"1985:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1995:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":186,"nodeType":"ExpressionStatement","src":"1985:17:1"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"1720:171:1","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":188,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"name_","nameLocation":"1922:5:1","nodeType":"VariableDeclaration","scope":188,"src":"1908:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":173,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:1","nodeType":"VariableDeclaration","scope":188,"src":"1929:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":175,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:1"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"1952:0:1"},"scope":651,"src":"1896:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[841],"body":{"id":196,"nodeType":"Block","src":"2134:29:1","statements":[{"expression":{"id":194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"2151:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":193,"id":195,"nodeType":"Return","src":"2144:12:1"}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"2015:54:1","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":197,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:1","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"2087:2:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"2119:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":191,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:1"},"scope":651,"src":"2074:89:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[847],"body":{"id":205,"nodeType":"Block","src":"2338:31:1","statements":[{"expression":{"id":203,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2355:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":202,"id":204,"nodeType":"Return","src":"2348:14:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2169:102:1","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":206,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:1","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"2291:2:1"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"2323:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":200,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:1"},"scope":651,"src":"2276:93:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[853],"body":{"id":214,"nodeType":"Block","src":"3058:26:1","statements":[{"expression":{"hexValue":"3138","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":211,"id":213,"nodeType":"Return","src":"3068:9:1"}]},"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"2375:622:1","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:1","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"3019:2:1"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":215,"src":"3051:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":209,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:1"},"scope":651,"src":"3002:82:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[678],"body":{"id":223,"nodeType":"Block","src":"3205:36:1","statements":[{"expression":{"id":221,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3222:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":220,"id":222,"nodeType":"Return","src":"3215:19:1"}]},"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"3090:49:1","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":224,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:1","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[],"src":"3164:2:1"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"3196:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:1"},"scope":651,"src":"3144:97:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[686],"body":{"id":236,"nodeType":"Block","src":"3373:42:1","statements":[{"expression":{"baseExpression":{"id":232,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"3390:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":234,"indexExpression":{"id":233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3400:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":231,"id":235,"nodeType":"Return","src":"3383:25:1"}]},"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"3247:47:1","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":237,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:1","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"account","nameLocation":"3326:7:1","nodeType":"VariableDeclaration","scope":237,"src":"3318:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:1"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"3364:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:1"},"scope":651,"src":"3299:116:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[696],"body":{"id":260,"nodeType":"Block","src":"3685:103:1","statements":[{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"owner","nameLocation":"3703:5:1","nodeType":"VariableDeclaration","scope":260,"src":"3695:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"3711:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:1"},{"expression":{"arguments":[{"id":253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3743:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"3750:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3754:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"3733:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":257,"nodeType":"ExpressionStatement","src":"3733:27:1"},{"expression":{"hexValue":"74727565","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":246,"id":259,"nodeType":"Return","src":"3770:11:1"}]},"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"3421:184:1","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:1","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"to","nameLocation":"3636:2:1","nodeType":"VariableDeclaration","scope":261,"src":"3628:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"value","nameLocation":"3648:5:1","nodeType":"VariableDeclaration","scope":261,"src":"3640:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:1"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":261,"src":"3679:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":244,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:1"},"scope":651,"src":"3610:178:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[706],"body":{"id":277,"nodeType":"Block","src":"3935:51:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":271,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"3952:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":273,"indexExpression":{"id":272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3964:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":275,"indexExpression":{"id":274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3971:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":270,"id":276,"nodeType":"Return","src":"3945:34:1"}]},"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"3794:47:1","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":278,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:1","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"3873:5:1","nodeType":"VariableDeclaration","scope":278,"src":"3865:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"spender","nameLocation":"3888:7:1","nodeType":"VariableDeclaration","scope":278,"src":"3880:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:1"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":278,"src":"3926:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:1"},"scope":651,"src":"3846:140:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[716],"body":{"id":301,"nodeType":"Block","src":"4372:107:1","statements":[{"assignments":[289],"declarations":[{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"4390:5:1","nodeType":"VariableDeclaration","scope":301,"src":"4382:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":290,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"4398:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:1"},{"expression":{"arguments":[{"id":294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"4429:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4436:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4445:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":293,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":542,"src":"4420:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"4420:31:1"},{"expression":{"hexValue":"74727565","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":287,"id":300,"nodeType":"Return","src":"4461:11:1"}]},"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"3992:296:1","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:1","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"spender","nameLocation":"4318:7:1","nodeType":"VariableDeclaration","scope":302,"src":"4310:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"value","nameLocation":"4335:5:1","nodeType":"VariableDeclaration","scope":302,"src":"4327:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:1"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":302,"src":"4366:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":285,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:1"},"scope":651,"src":"4293:186:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[728],"body":{"id":333,"nodeType":"Block","src":"5132:151:1","statements":[{"assignments":[315],"declarations":[{"constant":false,"id":315,"mutability":"mutable","name":"spender","nameLocation":"5150:7:1","nodeType":"VariableDeclaration","scope":333,"src":"5142:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"5160:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:1"},{"expression":{"arguments":[{"id":320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"5198:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"5204:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5213:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":319,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"5182:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"5182:37:1"},{"expression":{"arguments":[{"id":326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"5239:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"5245:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5249:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":325,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"5229:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":330,"nodeType":"ExpressionStatement","src":"5229:26:1"},{"expression":{"hexValue":"74727565","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":313,"id":332,"nodeType":"Return","src":"5265:11:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"4485:549:1","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:1","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"from","nameLocation":"5069:4:1","nodeType":"VariableDeclaration","scope":334,"src":"5061:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"to","nameLocation":"5083:2:1","nodeType":"VariableDeclaration","scope":334,"src":"5075:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"value","nameLocation":"5095:5:1","nodeType":"VariableDeclaration","scope":334,"src":"5087:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:1"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"5126:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":311,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:1"},"scope":651,"src":"5039:244:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":380,"nodeType":"Block","src":"5725:231:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5739:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:1","typeDescriptions":{}}},"id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":358,"nodeType":"IfStatement","src":"5735:86:1","trueBody":{"id":357,"nodeType":"Block","src":"5759:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:1","typeDescriptions":{}}},"id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":350,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"5780:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"RevertStatement","src":"5773:37:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5834:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:1","typeDescriptions":{}}},"id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":373,"nodeType":"IfStatement","src":"5830:86:1","trueBody":{"id":372,"nodeType":"Block","src":"5852:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:1","typeDescriptions":{}}},"id":369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":365,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"5873:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":371,"nodeType":"RevertStatement","src":"5866:39:1"}]}},{"expression":{"arguments":[{"id":375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5933:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5939:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5943:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":374,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"5925:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":379,"nodeType":"ExpressionStatement","src":"5925:24:1"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"5289:362:1","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":381,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"from","nameLocation":"5683:4:1","nodeType":"VariableDeclaration","scope":381,"src":"5675:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"to","nameLocation":"5697:2:1","nodeType":"VariableDeclaration","scope":381,"src":"5689:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"value","nameLocation":"5709:5:1","nodeType":"VariableDeclaration","scope":381,"src":"5701:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:1"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"5725:0:1"},"scope":651,"src":"5656:300:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"6346:1032:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6360:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:1","typeDescriptions":{}}},"id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":428,"nodeType":"Block","src":"6534:362:1","statements":[{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:1","nodeType":"VariableDeclaration","scope":428,"src":"6548:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":407,"initialValue":{"baseExpression":{"id":404,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6570:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":406,"indexExpression":{"id":405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6580:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":408,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6603:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6617:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":418,"nodeType":"IfStatement","src":"6599:115:1","trueBody":{"id":417,"nodeType":"Block","src":"6624:90:1","statements":[{"errorCall":{"arguments":[{"id":412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6674:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":413,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6680:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6693:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":411,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"6649:24:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":416,"nodeType":"RevertStatement","src":"6642:57:1"}]}},{"id":427,"nodeType":"UncheckedBlock","src":"6727:159:1","statements":[{"expression":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":419,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6834:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":421,"indexExpression":{"id":420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6844:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6852:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6866:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":426,"nodeType":"ExpressionStatement","src":"6834:37:1"}]}]},"id":429,"nodeType":"IfStatement","src":"6356:540:1","trueBody":{"id":401,"nodeType":"Block","src":"6380:148:1","statements":[{"expression":{"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":397,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"6496:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6512:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":400,"nodeType":"ExpressionStatement","src":"6496:21:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"6910:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:1","typeDescriptions":{}}},"id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":449,"nodeType":"Block","src":"7125:206:1","statements":[{"id":448,"nodeType":"UncheckedBlock","src":"7139:182:1","statements":[{"expression":{"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"7284:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":444,"indexExpression":{"id":443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7294:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7301:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":447,"nodeType":"ExpressionStatement","src":"7284:22:1"}]}]},"id":450,"nodeType":"IfStatement","src":"6906:425:1","trueBody":{"id":441,"nodeType":"Block","src":"6928:191:1","statements":[{"id":440,"nodeType":"UncheckedBlock","src":"6942:167:1","statements":[{"expression":{"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":436,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"7073:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7089:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ExpressionStatement","src":"7073:21:1"}]}]}},{"eventCall":{"arguments":[{"id":452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7355:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7361:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7365:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":451,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"7346:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":456,"nodeType":"EmitStatement","src":"7341:30:1"}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"5962:304:1","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":458,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"from","nameLocation":"6296:4:1","nodeType":"VariableDeclaration","scope":458,"src":"6288:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"to","nameLocation":"6310:2:1","nodeType":"VariableDeclaration","scope":458,"src":"6302:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"value","nameLocation":"6322:5:1","nodeType":"VariableDeclaration","scope":458,"src":"6314:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"6346:0:1"},"scope":651,"src":"6271:1107:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":490,"nodeType":"Block","src":"7777:152:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7791:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:1","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":480,"nodeType":"IfStatement","src":"7787:91:1","trueBody":{"id":479,"nodeType":"Block","src":"7814:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:1","typeDescriptions":{}}},"id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":472,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"7835:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"RevertStatement","src":"7828:39:1"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:1","typeDescriptions":{}}},"id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7907:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7916:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":481,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"7887:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"7887:35:1"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"7384:332:1","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":491,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:1","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"account","nameLocation":"7744:7:1","nodeType":"VariableDeclaration","scope":491,"src":"7736:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"value","nameLocation":"7761:5:1","nodeType":"VariableDeclaration","scope":491,"src":"7753:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:1"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"7777:0:1"},"scope":651,"src":"7721:208:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":523,"nodeType":"Block","src":"8303:150:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8317:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:1","typeDescriptions":{}}},"id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":513,"nodeType":"IfStatement","src":"8313:89:1","trueBody":{"id":512,"nodeType":"Block","src":"8340:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:1","typeDescriptions":{}}},"id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":505,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"8361:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"RevertStatement","src":"8354:37:1"}]}},{"expression":{"arguments":[{"id":515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8419:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:1","typeDescriptions":{}}},"id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"8440:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":514,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"8411:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"8411:35:1"}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"7935:307:1","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":524,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:1","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"account","nameLocation":"8270:7:1","nodeType":"VariableDeclaration","scope":524,"src":"8262:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"value","nameLocation":"8287:5:1","nodeType":"VariableDeclaration","scope":524,"src":"8279:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:1"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[],"src":"8303:0:1"},"scope":651,"src":"8247:206:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":541,"nodeType":"Block","src":"9063:54:1","statements":[{"expression":{"arguments":[{"id":535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"9082:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"9089:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"9098:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":534,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"9073:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"ExpressionStatement","src":"9073:37:1"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"8459:525:1","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":542,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:1","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"owner","nameLocation":"9015:5:1","nodeType":"VariableDeclaration","scope":542,"src":"9007:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"spender","nameLocation":"9030:7:1","nodeType":"VariableDeclaration","scope":542,"src":"9022:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"value","nameLocation":"9047:5:1","nodeType":"VariableDeclaration","scope":542,"src":"9039:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:1"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"9063:0:1"},"scope":651,"src":"8989:128:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":601,"nodeType":"Block","src":"10047:334:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10061:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:1","typeDescriptions":{}}},"id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":568,"nodeType":"IfStatement","src":"10057:89:1","trueBody":{"id":567,"nodeType":"Block","src":"10082:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:1","typeDescriptions":{}}},"id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":560,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"10103:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":566,"nodeType":"RevertStatement","src":"10096:39:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10159:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:1","typeDescriptions":{}}},"id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":583,"nodeType":"IfStatement","src":"10155:90:1","trueBody":{"id":582,"nodeType":"Block","src":"10182:63:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:1","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"10203:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"RevertStatement","src":"10196:38:1"}]}},{"expression":{"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":584,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"10254:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":587,"indexExpression":{"id":585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10266:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":588,"indexExpression":{"id":586,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10273:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10284:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":591,"nodeType":"ExpressionStatement","src":"10254:35:1"},{"condition":{"id":592,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"10303:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":600,"nodeType":"IfStatement","src":"10299:76:1","trueBody":{"id":599,"nodeType":"Block","src":"10314:61:1","statements":[{"eventCall":{"arguments":[{"id":594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10342:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10349:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10358:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":593,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10333:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"EmitStatement","src":"10328:36:1"}]}}]},"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"9123:821:1","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:1","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"owner","nameLocation":"9975:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9967:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"spender","nameLocation":"9990:7:1","nodeType":"VariableDeclaration","scope":602,"src":"9982:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"value","nameLocation":"10007:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9999:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:1","nodeType":"VariableDeclaration","scope":602,"src":"10014:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:1"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"10047:0:1"},"scope":651,"src":"9949:432:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":649,"nodeType":"Block","src":"10752:388:1","statements":[{"assignments":[613],"declarations":[{"constant":false,"id":613,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:1","nodeType":"VariableDeclaration","scope":649,"src":"10762:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":618,"initialValue":{"arguments":[{"id":615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"10799:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10806:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":614,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"10789:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10828:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:1","memberName":"max","nodeType":"MemberAccess","src":"10848:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":648,"nodeType":"IfStatement","src":"10824:310:1","trueBody":{"id":647,"nodeType":"Block","src":"10867:267:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":626,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10885:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10904:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"10881:130:1","trueBody":{"id":635,"nodeType":"Block","src":"10911:100:1","statements":[{"errorCall":{"arguments":[{"id":630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10963:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10972:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10990:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"10936:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"RevertStatement","src":"10929:67:1"}]}},{"id":646,"nodeType":"UncheckedBlock","src":"11024:100:1","statements":[{"expression":{"arguments":[{"id":638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"11061:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"11068:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"11077:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"11096:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":637,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"11052:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"11052:57:1"}]}]}}]},"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"10387:271:1","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":650,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:1","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"owner","nameLocation":"10696:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10688:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"spender","nameLocation":"10711:7:1","nodeType":"VariableDeclaration","scope":650,"src":"10703:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"value","nameLocation":"10728:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10720:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:1"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"10752:0:1"},"scope":651,"src":"10663:477:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":652,"src":"1401:9741:1","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]}],"src":"105:11038:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[729]},"id":730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"132:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":729,"linearizedBaseContracts":[729],"name":"IERC20","nameLocation":"213:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"226:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":663,"name":"Transfer","nameLocation":"395:8:2","nodeType":"EventDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:2","nodeType":"VariableDeclaration","scope":663,"src":"404:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:2","nodeType":"VariableDeclaration","scope":663,"src":"426:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:2","nodeType":"VariableDeclaration","scope":663,"src":"446:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:2"},"src":"389:72:2"},{"anonymous":false,"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"467:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":672,"name":"Approval","nameLocation":"626:8:2","nodeType":"EventDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:2","nodeType":"VariableDeclaration","scope":672,"src":"635:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:2","nodeType":"VariableDeclaration","scope":672,"src":"658:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:2","nodeType":"VariableDeclaration","scope":672,"src":"683:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:2"},"src":"620:78:2"},{"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"704:65:2","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":729,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"835:71:2","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:2","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"account","nameLocation":"938:7:2","nodeType":"VariableDeclaration","scope":686,"src":"930:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:2"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"970:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:2"},"scope":729,"src":"911:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"985:213:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:2","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"to","nameLocation":"1229:2:2","nodeType":"VariableDeclaration","scope":696,"src":"1221:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"value","nameLocation":"1241:5:2","nodeType":"VariableDeclaration","scope":696,"src":"1233:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:2"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":696,"src":"1266:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":693,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:2"},"scope":729,"src":"1203:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"1278:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:2","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"owner","nameLocation":"1574:5:2","nodeType":"VariableDeclaration","scope":706,"src":"1566:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"spender","nameLocation":"1589:7:2","nodeType":"VariableDeclaration","scope":706,"src":"1581:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:2"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"1621:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:2"},"scope":729,"src":"1547:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"1636:667:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:2","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"spender","nameLocation":"2333:7:2","nodeType":"VariableDeclaration","scope":716,"src":"2325:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"value","nameLocation":"2350:5:2","nodeType":"VariableDeclaration","scope":716,"src":"2342:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:2"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":716,"src":"2375:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":713,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:2"},"scope":729,"src":"2308:73:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"2387:297:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:2","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"from","nameLocation":"2719:4:2","nodeType":"VariableDeclaration","scope":728,"src":"2711:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"to","nameLocation":"2733:2:2","nodeType":"VariableDeclaration","scope":728,"src":"2725:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"value","nameLocation":"2745:5:2","nodeType":"VariableDeclaration","scope":728,"src":"2737:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:2"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":728,"src":"2770:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":725,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:2"},"scope":729,"src":"2689:87:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":730,"src":"203:2575:2","usedErrors":[],"usedEvents":[663,672]}],"src":"106:2673:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol","exportedSymbols":{"ERC20":[651],"ERC20Capped":[828]},"id":829,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":829,"sourceUnit":652,"src":"148:35:3","symbolAliases":[{"foreign":{"id":732,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"156:5:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":735,"name":"ERC20","nameLocations":["296:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"296:5:3"},"id":736,"nodeType":"InheritanceSpecifier","src":"296:5:3"}],"canonicalName":"ERC20Capped","contractDependencies":[],"contractKind":"contract","documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"185:77:3","text":" @dev Extension of {ERC20} that adds a cap to the supply of tokens."},"fullyImplemented":true,"id":828,"linearizedBaseContracts":[828,651,41,854,729,884],"name":"ERC20Capped","nameLocation":"281:11:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":738,"mutability":"immutable","name":"_cap","nameLocation":"334:4:3","nodeType":"VariableDeclaration","scope":828,"src":"308:30:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint256","nodeType":"ElementaryTypeName","src":"308:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"345:59:3","text":" @dev Total supply cap has been exceeded."},"errorSelector":"9e79f854","id":745,"name":"ERC20ExceededCap","nameLocation":"415:16:3","nodeType":"ErrorDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"increasedSupply","nameLocation":"440:15:3","nodeType":"VariableDeclaration","scope":745,"src":"432:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"432:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"cap","nameLocation":"465:3:3","nodeType":"VariableDeclaration","scope":745,"src":"457:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":742,"name":"uint256","nodeType":"ElementaryTypeName","src":"457:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"431:38:3"},"src":"409:61:3"},{"documentation":{"id":746,"nodeType":"StructuredDocumentation","src":"476:60:3","text":" @dev The supplied cap is not a valid cap."},"errorSelector":"392e1e27","id":750,"name":"ERC20InvalidCap","nameLocation":"547:15:3","nodeType":"ErrorDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":748,"mutability":"mutable","name":"cap","nameLocation":"571:3:3","nodeType":"VariableDeclaration","scope":750,"src":"563:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":747,"name":"uint256","nodeType":"ElementaryTypeName","src":"563:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"562:13:3"},"src":"541:35:3"},{"body":{"id":769,"nodeType":"Block","src":"742:102:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":756,"name":"cap_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"756:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"764:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"756:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":764,"nodeType":"IfStatement","src":"752:65:3","trueBody":{"id":763,"nodeType":"Block","src":"767:50:3","statements":[{"errorCall":{"arguments":[{"hexValue":"30","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"804:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":759,"name":"ERC20InvalidCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"788:15:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":762,"nodeType":"RevertStatement","src":"781:25:3"}]}},{"expression":{"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":765,"name":"_cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"826:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":766,"name":"cap_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"833:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"826:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":768,"nodeType":"ExpressionStatement","src":"826:11:3"}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"582:129:3","text":" @dev Sets the value of the `cap`. This value is immutable, it can only be\n set once during construction."},"id":770,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"cap_","nameLocation":"736:4:3","nodeType":"VariableDeclaration","scope":770,"src":"728:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":752,"name":"uint256","nodeType":"ElementaryTypeName","src":"728:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"727:14:3"},"returnParameters":{"id":755,"nodeType":"ParameterList","parameters":[],"src":"742:0:3"},"scope":828,"src":"716:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":778,"nodeType":"Block","src":"976:28:3","statements":[{"expression":{"id":776,"name":"_cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"993:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":775,"id":777,"nodeType":"Return","src":"986:11:3"}]},"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"850:68:3","text":" @dev Returns the cap on the token's total supply."},"functionSelector":"355274ea","id":779,"implemented":true,"kind":"function","modifiers":[],"name":"cap","nameLocation":"932:3:3","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[],"src":"935:2:3"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":779,"src":"967:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"967:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"966:9:3"},"scope":828,"src":"923:81:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[458],"body":{"id":826,"nodeType":"Block","src":"1143:287:3","statements":[{"expression":{"arguments":[{"id":793,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"1167:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":794,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"1173:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"1177:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":790,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1153:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Capped_$828_$","typeString":"type(contract super ERC20Capped)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1159:7:3","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":458,"src":"1153:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1153:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":797,"nodeType":"ExpressionStatement","src":"1153:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":798,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"1198:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1214:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1206:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:3","typeDescriptions":{}}},"id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1206:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1198:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":825,"nodeType":"IfStatement","src":"1194:230:3","trueBody":{"id":824,"nodeType":"Block","src":"1218:206:3","statements":[{"assignments":[805],"declarations":[{"constant":false,"id":805,"mutability":"mutable","name":"maxSupply","nameLocation":"1240:9:3","nodeType":"VariableDeclaration","scope":824,"src":"1232:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":804,"name":"uint256","nodeType":"ElementaryTypeName","src":"1232:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":808,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":806,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"1252:3:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1252:5:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1232:25:3"},{"assignments":[810],"declarations":[{"constant":false,"id":810,"mutability":"mutable","name":"supply","nameLocation":"1279:6:3","nodeType":"VariableDeclaration","scope":824,"src":"1271:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":813,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":811,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"1288:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1288:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1271:30:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":814,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"1319:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":815,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"1328:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1319:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":823,"nodeType":"IfStatement","src":"1315:99:3","trueBody":{"id":822,"nodeType":"Block","src":"1339:75:3","statements":[{"errorCall":{"arguments":[{"id":818,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"1381:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":819,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"1389:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":817,"name":"ERC20ExceededCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"1364:16:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1364:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":821,"nodeType":"RevertStatement","src":"1357:42:3"}]}}]}}]},"documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"1010:44:3","text":" @dev See {ERC20-_update}."},"id":827,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"1068:7:3","nodeType":"FunctionDefinition","overrides":{"id":788,"nodeType":"OverrideSpecifier","overrides":[],"src":"1134:8:3"},"parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"from","nameLocation":"1084:4:3","nodeType":"VariableDeclaration","scope":827,"src":"1076:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":781,"name":"address","nodeType":"ElementaryTypeName","src":"1076:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"to","nameLocation":"1098:2:3","nodeType":"VariableDeclaration","scope":827,"src":"1090:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"1090:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"value","nameLocation":"1110:5:3","nodeType":"VariableDeclaration","scope":827,"src":"1102:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1075:41:3"},"returnParameters":{"id":789,"nodeType":"ParameterList","parameters":[],"src":"1143:0:3"},"scope":828,"src":"1059:371:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":829,"src":"263:1169:3","usedErrors":[11,16,21,30,35,40,745,750],"usedEvents":[663,672]}],"src":"122:1311:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[729],"IERC20Metadata":[854]},"id":855,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":830,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":832,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":855,"sourceUnit":730,"src":"151:37:4","symbolAliases":[{"foreign":{"id":831,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"159:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":834,"name":"IERC20","nameLocations":["305:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"305:6:4"},"id":835,"nodeType":"InheritanceSpecifier","src":"305:6:4"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"190:86:4","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":854,"linearizedBaseContracts":[854,729],"name":"IERC20Metadata","nameLocation":"287:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":836,"nodeType":"StructuredDocumentation","src":"318:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":841,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:4","nodeType":"FunctionDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[],"src":"390:2:4"},"returnParameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":841,"src":"416:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":838,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:4"},"scope":854,"src":"377:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"437:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":847,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:4","nodeType":"FunctionDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[],"src":"513:2:4"},"returnParameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":847,"src":"539:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":844,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:4"},"scope":854,"src":"498:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":848,"nodeType":"StructuredDocumentation","src":"560:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":853,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:4","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[],"src":"647:2:4"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":853,"src":"673:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":850,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:4"},"scope":854,"src":"630:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":855,"src":"277:405:4","usedErrors":[],"usedEvents":[663,672]}],"src":"125:558:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[884]},"id":885,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":856,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":857,"nodeType":"StructuredDocumentation","src":"127:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":884,"linearizedBaseContracts":[884],"name":"Context","nameLocation":"642:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":865,"nodeType":"Block","src":"718:34:5","statements":[{"expression":{"expression":{"id":862,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:5","memberName":"sender","nodeType":"MemberAccess","src":"735:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":861,"id":864,"nodeType":"Return","src":"728:17:5"}]},"id":866,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:5","nodeType":"FunctionDefinition","parameters":{"id":858,"nodeType":"ParameterList","parameters":[],"src":"675:2:5"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":866,"src":"709:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":859,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:5"},"scope":884,"src":"656:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":874,"nodeType":"Block","src":"825:32:5","statements":[{"expression":{"expression":{"id":871,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:5","memberName":"data","nodeType":"MemberAccess","src":"842:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":870,"id":873,"nodeType":"Return","src":"835:15:5"}]},"id":875,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:5","nodeType":"FunctionDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[],"src":"775:2:5"},"returnParameters":{"id":870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":875,"src":"809:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":868,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:5"},"scope":884,"src":"758:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":882,"nodeType":"Block","src":"935:25:5","statements":[{"expression":{"hexValue":"30","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":879,"id":881,"nodeType":"Return","src":"945:8:5"}]},"id":883,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:5","nodeType":"FunctionDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[],"src":"892:2:5"},"returnParameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":883,"src":"926:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":877,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:5"},"scope":884,"src":"863:97:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":885,"src":"624:338:5","usedErrors":[],"usedEvents":[]}],"src":"101:862:5"},"id":5},"contracts/FoterreToken.sol":{"ast":{"absolutePath":"contracts/FoterreToken.sol","exportedSymbols":{"Context":[884],"ERC20":[651],"ERC20Capped":[828],"FoterreToken":[1128],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[854],"notOwner":[892]},"id":1129,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":886,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"33:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":887,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1129,"sourceUnit":652,"src":"59:55:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol","id":888,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1129,"sourceUnit":829,"src":"115:72:6","symbolAliases":[],"unitAlias":""},{"errorSelector":"62355e78","id":892,"name":"notOwner","nameLocation":"220:8:6","nodeType":"ErrorDefinition","parameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"message","nameLocation":"236:7:6","nodeType":"VariableDeclaration","scope":892,"src":"229:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":889,"name":"string","nodeType":"ElementaryTypeName","src":"229:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"228:16:6"},"src":"214:31:6"},{"abstract":false,"baseContracts":[{"baseName":{"id":893,"name":"ERC20Capped","nameLocations":["272:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":828,"src":"272:11:6"},"id":894,"nodeType":"InheritanceSpecifier","src":"272:11:6"}],"canonicalName":"FoterreToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1128,"linearizedBaseContracts":[1128,828,651,41,854,729,884],"name":"FoterreToken","nameLocation":"256:12:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"b2bdfa7b","id":896,"mutability":"immutable","name":"_owner","nameLocation":"315:6:6","nodeType":"VariableDeclaration","scope":1128,"src":"290:31:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"290:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"bafb8e83","id":898,"mutability":"mutable","name":"marketSupply","nameLocation":"343:12:6","nodeType":"VariableDeclaration","scope":1128,"src":"328:27:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":897,"name":"uint256","nodeType":"ElementaryTypeName","src":"328:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"044d1d4c","id":900,"mutability":"mutable","name":"reverseTransactionSupply","nameLocation":"376:24:6","nodeType":"VariableDeclaration","scope":1128,"src":"361:39:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"361:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"322e5021ddf51920f7602154a6c845b34ef1b32704a1fa2c66927b56be280762","id":906,"name":"Penalty","nameLocation":"413:7:6","nodeType":"EventDefinition","parameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"indexed":true,"mutability":"mutable","name":"scammer","nameLocation":"437:7:6","nodeType":"VariableDeclaration","scope":906,"src":"421:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"421:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":904,"indexed":false,"mutability":"mutable","name":"penaltyAmount","nameLocation":"454:13:6","nodeType":"VariableDeclaration","scope":906,"src":"446:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":903,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"420:48:6"},"src":"407:62:6"},{"body":{"id":919,"nodeType":"Block","src":"521:118:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":908,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"535:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"539:6:6","memberName":"sender","nodeType":"MemberAccess","src":"535:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":910,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"549:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"535:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":917,"nodeType":"IfStatement","src":"531:91:6","trueBody":{"id":916,"nodeType":"Block","src":"557:65:6","statements":[{"errorCall":{"arguments":[{"hexValue":"596f7520617265206e6f7420746865206f776e6572","id":913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"587:23:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc","typeString":"literal_string \"You are not the owner\""},"value":"You are not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc","typeString":"literal_string \"You are not the owner\""}],"id":912,"name":"notOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"578:8:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"578:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":915,"nodeType":"RevertStatement","src":"571:40:6"}]}},{"id":918,"nodeType":"PlaceholderStatement","src":"631:1:6"}]},"id":920,"name":"ownerAccess","nameLocation":"507:11:6","nodeType":"ModifierDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"518:2:6"},"src":"498:141:6","virtual":false,"visibility":"internal"},{"body":{"id":969,"nodeType":"Block","src":"747:362:6","statements":[{"expression":{"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":934,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"757:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":935,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"766:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"770:6:6","memberName":"sender","nodeType":"MemberAccess","src":"766:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"757:19:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":938,"nodeType":"ExpressionStatement","src":"757:19:6"},{"assignments":[940],"declarations":[{"constant":false,"id":940,"mutability":"mutable","name":"initialTokenSupply","nameLocation":"794:18:6","nodeType":"VariableDeclaration","scope":969,"src":"786:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":939,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":944,"initialValue":{"commonType":{"typeIdentifier":"t_rational_120000000000000000000000000000_by_1","typeString":"int_const 120000000000000000000000000000"},"id":943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313230303030303030303030","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"815:12:6","typeDescriptions":{"typeIdentifier":"t_rational_120000000000_by_1","typeString":"int_const 120000000000"},"value":"120000000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"830:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"815:19:6","typeDescriptions":{"typeIdentifier":"t_rational_120000000000000000000000000000_by_1","typeString":"int_const 120000000000000000000000000000"}},"nodeType":"VariableDeclarationStatement","src":"786:48:6"},{"assignments":[946],"declarations":[{"constant":false,"id":946,"mutability":"mutable","name":"initial_reversePool","nameLocation":"874:19:6","nodeType":"VariableDeclaration","scope":969,"src":"866:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":945,"name":"uint256","nodeType":"ElementaryTypeName","src":"866:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":950,"initialValue":{"commonType":{"typeIdentifier":"t_rational_30000000000000000000000000000_by_1","typeString":"int_const 30000000000000000000000000000"},"id":949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3330303030303030303030","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"896:11:6","typeDescriptions":{"typeIdentifier":"t_rational_30000000000_by_1","typeString":"int_const 30000000000"},"value":"30000000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"910:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"896:18:6","typeDescriptions":{"typeIdentifier":"t_rational_30000000000000000000000000000_by_1","typeString":"int_const 30000000000000000000000000000"}},"nodeType":"VariableDeclarationStatement","src":"866:48:6"},{"expression":{"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":951,"name":"marketSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"925:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":952,"name":"initialTokenSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"940:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"925:33:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":954,"nodeType":"ExpressionStatement","src":"925:33:6"},{"expression":{"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":955,"name":"reverseTransactionSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"968:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":956,"name":"initial_reversePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"995:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"968:46:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":958,"nodeType":"ExpressionStatement","src":"968:46:6"},{"expression":{"arguments":[{"id":960,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"1031:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":961,"name":"initialTokenSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"1039:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":959,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"1025:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1025:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":963,"nodeType":"ExpressionStatement","src":"1025:33:6"},{"expression":{"arguments":[{"id":965,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"1074:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":966,"name":"initial_reversePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"1082:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":964,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"1068:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1068:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":968,"nodeType":"ExpressionStatement","src":"1068:34:6"}]},"id":970,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"466f7465727265","id":925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"697:9:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_8627193187c803f0eaf773ab528c3ec505d9444e5c0abe30ee120e2d1104dddf","typeString":"literal_string \"Foterre\""},"value":"Foterre"},{"hexValue":"464f5445","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"708:6:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_d2445e6bfdf116a75dc6646cf5710f8d7cf9d92b91435afc89d9fda5c7e90338","typeString":"literal_string \"FOTE\""},"value":"FOTE"}],"id":927,"kind":"baseConstructorSpecifier","modifierName":{"id":924,"name":"ERC20","nameLocations":["691:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"691:5:6"},"nodeType":"ModifierInvocation","src":"691:24:6"},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":929,"name":"max_supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"728:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"741:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"728:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":932,"kind":"baseConstructorSpecifier","modifierName":{"id":928,"name":"ERC20Capped","nameLocations":["716:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":828,"src":"716:11:6"},"nodeType":"ModifierInvocation","src":"716:30:6"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"max_supply","nameLocation":"674:10:6","nodeType":"VariableDeclaration","scope":970,"src":"666:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"666:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:34:6"},"returnParameters":{"id":933,"nodeType":"ParameterList","parameters":[],"src":"747:0:6"},"scope":1128,"src":"645:464:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[261],"body":{"id":1006,"nodeType":"Block","src":"1271:199:6","statements":[{"expression":{"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":980,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"1281:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":981,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"1290:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1299:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"1290:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1281:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":985,"nodeType":"ExpressionStatement","src":"1281:22:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":987,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"1321:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":988,"name":"marketSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"1331:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1321:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206d61726b657420737570706c79","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1345:28:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e1c438a92d9e4b8cbf66fa234a4bce1bd7c7f595e8c111db56feaca0e5b6cdf","typeString":"literal_string \"Insufficient market supply\""},"value":"Insufficient market supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e1c438a92d9e4b8cbf66fa234a4bce1bd7c7f595e8c111db56feaca0e5b6cdf","typeString":"literal_string \"Insufficient market supply\""}],"id":986,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1313:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1313:61:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":992,"nodeType":"ExpressionStatement","src":"1313:61:6"},{"expression":{"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":993,"name":"marketSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"1384:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":994,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"1400:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1384:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":996,"nodeType":"ExpressionStatement","src":"1384:22:6"},{"expression":{"arguments":[{"id":1000,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"1431:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1001,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"1435:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":997,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1416:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_FoterreToken_$1128_$","typeString":"type(contract super FoterreToken)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1422:8:6","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":261,"src":"1416:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1416:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1003,"nodeType":"ExpressionStatement","src":"1416:26:6"},{"expression":{"hexValue":"74727565","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1459:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":979,"id":1005,"nodeType":"Return","src":"1452:11:6"}]},"functionSelector":"a9059cbb","id":1007,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1181:8:6","nodeType":"FunctionDefinition","overrides":{"id":976,"nodeType":"OverrideSpecifier","overrides":[],"src":"1247:8:6"},"parameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"to","nameLocation":"1207:2:6","nodeType":"VariableDeclaration","scope":1007,"src":"1199:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"1199:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"amount","nameLocation":"1227:6:6","nodeType":"VariableDeclaration","scope":1007,"src":"1219:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1189:50:6"},"returnParameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1007,"src":"1265:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":977,"name":"bool","nodeType":"ElementaryTypeName","src":"1265:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1264:6:6"},"scope":1128,"src":"1172:298:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1046,"nodeType":"Block","src":"1674:289:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1019,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"1705:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1020,"name":"reverseTransactionSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"1715:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1705:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742066756e6420696e2074686520706f6f6c","id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1753:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899","typeString":"literal_string \"Insufficient fund in the pool\""},"value":"Insufficient fund in the pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899","typeString":"literal_string \"Insufficient fund in the pool\""}],"id":1018,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1684:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1684:110:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1024,"nodeType":"ExpressionStatement","src":"1684:110:6"},{"expression":{"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1025,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"1804:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1026,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"1813:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1822:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"1813:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1804:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1030,"nodeType":"ExpressionStatement","src":"1804:22:6"},{"expression":{"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1031,"name":"reverseTransactionSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"1836:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1032,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"1864:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1836:34:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1034,"nodeType":"ExpressionStatement","src":"1836:34:6"},{"expression":{"arguments":[{"id":1036,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"1890:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1037,"name":"victim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"1898:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1038,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"1906:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1035,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"1880:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1880:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1040,"nodeType":"ExpressionStatement","src":"1880:33:6"},{"expression":{"arguments":[{"id":1042,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"1938:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1043,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"1946:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1041,"name":"penalizeFraud","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"1924:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1045,"nodeType":"ExpressionStatement","src":"1924:29:6"}]},"functionSelector":"f0e6ea8d","id":1047,"implemented":true,"kind":"function","modifiers":[{"id":1016,"kind":"modifierInvocation","modifierName":{"id":1015,"name":"ownerAccess","nameLocations":["1662:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":920,"src":"1662:11:6"},"nodeType":"ModifierInvocation","src":"1662:11:6"}],"name":"reverseTransfer","nameLocation":"1561:15:6","nodeType":"FunctionDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"victim","nameLocation":"1594:6:6","nodeType":"VariableDeclaration","scope":1047,"src":"1586:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"1586:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"target","nameLocation":"1618:6:6","nodeType":"VariableDeclaration","scope":1047,"src":"1610:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"1610:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1013,"mutability":"mutable","name":"amount","nameLocation":"1642:6:6","nodeType":"VariableDeclaration","scope":1047,"src":"1634:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"1634:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1576:78:6"},"returnParameters":{"id":1017,"nodeType":"ParameterList","parameters":[],"src":"1674:0:6"},"scope":1128,"src":"1552:411:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1078,"nodeType":"Block","src":"2034:255:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1056,"name":"scammer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"2075:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1055,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"2065:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2065:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1058,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"2087:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2065:28:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e636520666f722070656e616c7479","id":1060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2107:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_87c1d7407bdbf4847579356d623122ee7d0ba15f0b291eb7759a1a031129cc50","typeString":"literal_string \"Insufficient balance for penalty\""},"value":"Insufficient balance for penalty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87c1d7407bdbf4847579356d623122ee7d0ba15f0b291eb7759a1a031129cc50","typeString":"literal_string \"Insufficient balance for penalty\""}],"id":1054,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2044:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2044:107:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1062,"nodeType":"ExpressionStatement","src":"2044:107:6"},{"expression":{"arguments":[{"id":1064,"name":"scammer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"2171:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1065,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"2180:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1066,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"2188:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1063,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"2161:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1068,"nodeType":"ExpressionStatement","src":"2161:34:6"},{"expression":{"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1069,"name":"reverseTransactionSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"2205:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1070,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"2233:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2205:34:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1072,"nodeType":"ExpressionStatement","src":"2205:34:6"},{"eventCall":{"arguments":[{"id":1074,"name":"scammer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"2263:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1075,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"2272:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1073,"name":"Penalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"2255:7:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2255:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"EmitStatement","src":"2250:29:6"}]},"id":1079,"implemented":true,"kind":"function","modifiers":[],"name":"penalizeFraud","nameLocation":"1978:13:6","nodeType":"FunctionDefinition","parameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"scammer","nameLocation":"2000:7:6","nodeType":"VariableDeclaration","scope":1079,"src":"1992:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"1992:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"amount","nameLocation":"2017:6:6","nodeType":"VariableDeclaration","scope":1079,"src":"2009:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"2009:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1991:33:6"},"returnParameters":{"id":1053,"nodeType":"ParameterList","parameters":[],"src":"2034:0:6"},"scope":1128,"src":"1969:320:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1102,"nodeType":"Block","src":"2360:126:6","statements":[{"expression":{"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1086,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"2370:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1087,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"2379:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2388:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"2379:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2370:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1091,"nodeType":"ExpressionStatement","src":"2370:22:6"},{"expression":{"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1092,"name":"reverseTransactionSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"2402:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1093,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"2430:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2402:34:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1095,"nodeType":"ExpressionStatement","src":"2402:34:6"},{"expression":{"arguments":[{"id":1097,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"2456:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1098,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"2464:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1099,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"2472:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1096,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"2446:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2446:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1101,"nodeType":"ExpressionStatement","src":"2446:33:6"}]},"functionSelector":"af521c8f","id":1103,"implemented":true,"kind":"function","modifiers":[],"name":"addToReversePool","nameLocation":"2304:16:6","nodeType":"FunctionDefinition","parameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"sender","nameLocation":"2329:6:6","nodeType":"VariableDeclaration","scope":1103,"src":"2321:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1080,"name":"address","nodeType":"ElementaryTypeName","src":"2321:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"amount","nameLocation":"2345:6:6","nodeType":"VariableDeclaration","scope":1103,"src":"2337:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"2337:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2320:32:6"},"returnParameters":{"id":1085,"nodeType":"ParameterList","parameters":[],"src":"2360:0:6"},"scope":1128,"src":"2295:191:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1126,"nodeType":"Block","src":"2565:118:6","statements":[{"expression":{"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1110,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"2575:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1111,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"2584:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":1112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2593:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"2584:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2575:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1115,"nodeType":"ExpressionStatement","src":"2575:22:6"},{"expression":{"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1116,"name":"reverseTransactionSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"2607:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1117,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"2635:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2607:34:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1119,"nodeType":"ExpressionStatement","src":"2607:34:6"},{"expression":{"arguments":[{"expression":{"id":1121,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2657:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2661:6:6","memberName":"sender","nodeType":"MemberAccess","src":"2657:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1123,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"2669:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1120,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"2651:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2651:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1125,"nodeType":"ExpressionStatement","src":"2651:25:6"}]},"functionSelector":"7fe1f740","id":1127,"implemented":true,"kind":"function","modifiers":[{"id":1108,"kind":"modifierInvocation","modifierName":{"id":1107,"name":"ownerAccess","nameLocations":["2553:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":920,"src":"2553:11:6"},"nodeType":"ModifierInvocation","src":"2553:11:6"}],"name":"mintToReverseTransactionPool","nameLocation":"2501:28:6","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"amount","nameLocation":"2538:6:6","nodeType":"VariableDeclaration","scope":1127,"src":"2530:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"2530:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2529:16:6"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[],"src":"2565:0:6"},"scope":1128,"src":"2492:191:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1129,"src":"247:2438:6","usedErrors":[11,16,21,30,35,40,745,750,892],"usedEvents":[663,672,906]}],"src":"33:2653:6"},"id":6},"contracts/Transaction.sol":{"ast":{"absolutePath":"contracts/Transaction.sol","exportedSymbols":{"Transaction":[1224]},"id":1225,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1130,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"33:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Transaction","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1224,"linearizedBaseContracts":[1224],"name":"Transaction","nameLocation":"68:11:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1132,"mutability":"mutable","name":"transactionCount","nameLocation":"94:16:7","nodeType":"VariableDeclaration","scope":1224,"src":"86:24:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1131,"name":"uint256","nodeType":"ElementaryTypeName","src":"86:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"anonymous":false,"eventSelector":"416cfa4330a4565f45c2fd2dd4826a83a37443aba2ce6f79477c7355afac35fa","id":1146,"name":"Transfer","nameLocation":"123:8:7","nodeType":"EventDefinition","parameters":{"id":1145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"149:6:7","nodeType":"VariableDeclaration","scope":1146,"src":"141:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"141:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1136,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"173:9:7","nodeType":"VariableDeclaration","scope":1146,"src":"165:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"165:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1138,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"197:6:7","nodeType":"VariableDeclaration","scope":1146,"src":"192:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1137,"name":"uint","nodeType":"ElementaryTypeName","src":"192:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1140,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"220:7:7","nodeType":"VariableDeclaration","scope":1146,"src":"213:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1139,"name":"string","nodeType":"ElementaryTypeName","src":"213:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1142,"indexed":false,"mutability":"mutable","name":"datetime","nameLocation":"245:8:7","nodeType":"VariableDeclaration","scope":1146,"src":"237:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"237:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1144,"indexed":false,"mutability":"mutable","name":"keyword","nameLocation":"270:7:7","nodeType":"VariableDeclaration","scope":1146,"src":"263:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1143,"name":"string","nodeType":"ElementaryTypeName","src":"263:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"131:152:7"},"src":"117:167:7"},{"canonicalName":"Transaction.TransactionDetail","id":1159,"members":[{"constant":false,"id":1148,"mutability":"mutable","name":"sender","nameLocation":"333:6:7","nodeType":"VariableDeclaration","scope":1159,"src":"325:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1147,"name":"address","nodeType":"ElementaryTypeName","src":"325:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"recipient","nameLocation":"357:9:7","nodeType":"VariableDeclaration","scope":1159,"src":"349:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"amount","nameLocation":"384:6:7","nodeType":"VariableDeclaration","scope":1159,"src":"376:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"376:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"message","nameLocation":"407:7:7","nodeType":"VariableDeclaration","scope":1159,"src":"400:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1153,"name":"string","nodeType":"ElementaryTypeName","src":"400:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"datetime","nameLocation":"432:8:7","nodeType":"VariableDeclaration","scope":1159,"src":"424:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1155,"name":"uint256","nodeType":"ElementaryTypeName","src":"424:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1158,"mutability":"mutable","name":"keyword","nameLocation":"457:7:7","nodeType":"VariableDeclaration","scope":1159,"src":"450:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1157,"name":"string","nodeType":"ElementaryTypeName","src":"450:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"TransactionDetail","nameLocation":"297:17:7","nodeType":"StructDefinition","scope":1224,"src":"290:181:7","visibility":"public"},{"constant":false,"id":1163,"mutability":"mutable","name":"transactionStruct","nameLocation":"497:17:7","nodeType":"VariableDeclaration","scope":1224,"src":"477:37:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransactionDetail_$1159_storage_$dyn_storage","typeString":"struct Transaction.TransactionDetail[]"},"typeName":{"baseType":{"id":1161,"nodeType":"UserDefinedTypeName","pathNode":{"id":1160,"name":"TransactionDetail","nameLocations":["477:17:7"],"nodeType":"IdentifierPath","referencedDeclaration":1159,"src":"477:17:7"},"referencedDeclaration":1159,"src":"477:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_TransactionDetail_$1159_storage_ptr","typeString":"struct Transaction.TransactionDetail"}},"id":1162,"nodeType":"ArrayTypeName","src":"477:19:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransactionDetail_$1159_storage_$dyn_storage_ptr","typeString":"struct Transaction.TransactionDetail[]"}},"visibility":"internal"},{"body":{"id":1204,"nodeType":"Block","src":"680:459:7","statements":[{"expression":{"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1174,"name":"transactionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"690:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"710:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"690:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1177,"nodeType":"ExpressionStatement","src":"690:21:7"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1182,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"792:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"796:6:7","memberName":"sender","nodeType":"MemberAccess","src":"792:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1184,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"820:9:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1185,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"847:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1186,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"871:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":1187,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"896:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"902:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"896:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1189,"name":"keyword","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"929:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1181,"name":"TransactionDetail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"757:17:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TransactionDetail_$1159_storage_ptr_$","typeString":"type(struct Transaction.TransactionDetail storage pointer)"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"757:193:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TransactionDetail_$1159_memory_ptr","typeString":"struct Transaction.TransactionDetail memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TransactionDetail_$1159_memory_ptr","typeString":"struct Transaction.TransactionDetail memory"}],"expression":{"id":1178,"name":"transactionStruct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"721:17:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransactionDetail_$1159_storage_$dyn_storage","typeString":"struct Transaction.TransactionDetail storage ref[] storage ref"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:4:7","memberName":"push","nodeType":"MemberAccess","src":"721:22:7","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_TransactionDetail_$1159_storage_$dyn_storage_ptr_$_t_struct$_TransactionDetail_$1159_storage_$returns$__$attached_to$_t_array$_t_struct$_TransactionDetail_$1159_storage_$dyn_storage_ptr_$","typeString":"function (struct Transaction.TransactionDetail storage ref[] storage pointer,struct Transaction.TransactionDetail storage ref)"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"721:239:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1192,"nodeType":"ExpressionStatement","src":"721:239:7"},{"eventCall":{"arguments":[{"expression":{"id":1194,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"998:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1002:6:7","memberName":"sender","nodeType":"MemberAccess","src":"998:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1196,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"1022:9:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1197,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"1045:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1198,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"1065:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":1199,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1086:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1092:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"1086:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1201,"name":"keyword","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"1115:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1193,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"976:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,string memory,uint256,string memory)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"976:156:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1203,"nodeType":"EmitStatement","src":"971:161:7"}]},"functionSelector":"07e05ed1","id":1205,"implemented":true,"kind":"function","modifiers":[],"name":"deployToBlockchain","nameLocation":"530:18:7","nodeType":"FunctionDefinition","parameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"recipient","nameLocation":"574:9:7","nodeType":"VariableDeclaration","scope":1205,"src":"558:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"558:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"amount","nameLocation":"598:6:7","nodeType":"VariableDeclaration","scope":1205,"src":"593:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint","nodeType":"ElementaryTypeName","src":"593:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"message","nameLocation":"628:7:7","nodeType":"VariableDeclaration","scope":1205,"src":"614:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1168,"name":"string","nodeType":"ElementaryTypeName","src":"614:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1171,"mutability":"mutable","name":"keyword","nameLocation":"659:7:7","nodeType":"VariableDeclaration","scope":1205,"src":"645:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1170,"name":"string","nodeType":"ElementaryTypeName","src":"645:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"548:124:7"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[],"src":"680:0:7"},"scope":1224,"src":"521:618:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1214,"nodeType":"Block","src":"1252:41:7","statements":[{"expression":{"id":1212,"name":"transactionStruct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"1269:17:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransactionDetail_$1159_storage_$dyn_storage","typeString":"struct Transaction.TransactionDetail storage ref[] storage ref"}},"functionReturnParameters":1211,"id":1213,"nodeType":"Return","src":"1262:24:7"}]},"functionSelector":"27506f53","id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"getAllTransactions","nameLocation":"1154:18:7","nodeType":"FunctionDefinition","parameters":{"id":1206,"nodeType":"ParameterList","parameters":[],"src":"1172:2:7"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1215,"src":"1220:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr","typeString":"struct Transaction.TransactionDetail[]"},"typeName":{"baseType":{"id":1208,"nodeType":"UserDefinedTypeName","pathNode":{"id":1207,"name":"TransactionDetail","nameLocations":["1220:17:7"],"nodeType":"IdentifierPath","referencedDeclaration":1159,"src":"1220:17:7"},"referencedDeclaration":1159,"src":"1220:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_TransactionDetail_$1159_storage_ptr","typeString":"struct Transaction.TransactionDetail"}},"id":1209,"nodeType":"ArrayTypeName","src":"1220:19:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TransactionDetail_$1159_storage_$dyn_storage_ptr","typeString":"struct Transaction.TransactionDetail[]"}},"visibility":"internal"}],"src":"1219:28:7"},"scope":1224,"src":"1145:148:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1222,"nodeType":"Block","src":"1360:40:7","statements":[{"expression":{"id":1220,"name":"transactionCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"1377:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1219,"id":1221,"nodeType":"Return","src":"1370:23:7"}]},"functionSelector":"2e7700f0","id":1223,"implemented":true,"kind":"function","modifiers":[],"name":"getTransactionCount","nameLocation":"1308:19:7","nodeType":"FunctionDefinition","parameters":{"id":1216,"nodeType":"ParameterList","parameters":[],"src":"1327:2:7"},"returnParameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1223,"src":"1351:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1350:9:7"},"scope":1224,"src":"1299:101:7","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1225,"src":"59:1343:7","usedErrors":[],"usedEvents":[1146]}],"src":"33:1370:7"},"id":7}},"contracts":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":159,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":165,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":167,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":169,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":171,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol":{"ERC20Capped":{"abi":[{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededCap","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20InvalidCap","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Extension of {ERC20} that adds a cap to the supply of tokens.","errors":{"ERC20ExceededCap(uint256,uint256)":[{"details":"Total supply cap has been exceeded."}],"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidCap(uint256)":[{"details":"The supplied cap is not a valid cap."}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"cap()":{"details":"Returns the cap on the token's total supply."},"constructor":{"details":"Sets the value of the `cap`. This value is immutable, it can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","cap()":"355274ea","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20InvalidCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that adds a cap to the supply of tokens.\",\"errors\":{\"ERC20ExceededCap(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidCap(uint256)\":[{\"details\":\"The supplied cap is not a valid cap.\"}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"constructor\":{\"details\":\"Sets the value of the `cap`. This value is immutable, it can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":\"ERC20Capped\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Capped.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC20} from \\\"../ERC20.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\\n */\\nabstract contract ERC20Capped is ERC20 {\\n    uint256 private immutable _cap;\\n\\n    /**\\n     * @dev Total supply cap has been exceeded.\\n     */\\n    error ERC20ExceededCap(uint256 increasedSupply, uint256 cap);\\n\\n    /**\\n     * @dev The supplied cap is not a valid cap.\\n     */\\n    error ERC20InvalidCap(uint256 cap);\\n\\n    /**\\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\\n     * set once during construction.\\n     */\\n    constructor(uint256 cap_) {\\n        if (cap_ == 0) {\\n            revert ERC20InvalidCap(0);\\n        }\\n        _cap = cap_;\\n    }\\n\\n    /**\\n     * @dev Returns the cap on the token's total supply.\\n     */\\n    function cap() public view virtual returns (uint256) {\\n        return _cap;\\n    }\\n\\n    /**\\n     * @dev See {ERC20-_update}.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual override {\\n        super._update(from, to, value);\\n\\n        if (from == address(0)) {\\n            uint256 maxSupply = cap();\\n            uint256 supply = totalSupply();\\n            if (supply > maxSupply) {\\n                revert ERC20ExceededCap(supply, maxSupply);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9a961321311c070327b31fba89d821346225a411f946c9e84b330afdfdbb1d60\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":159,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":165,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":167,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":169,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":171,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/FoterreToken.sol":{"FoterreToken":{"abi":[{"inputs":[{"internalType":"uint256","name":"max_supply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededCap","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20InvalidCap","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"string","name":"message","type":"string"}],"name":"notOwner","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"scammer","type":"address"},{"indexed":false,"internalType":"uint256","name":"penaltyAmount","type":"uint256"}],"name":"Penalty","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"_owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"addToReversePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"marketSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mintToReverseTransactionPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reverseTransactionSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"victim","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"reverseTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC20ExceededCap(uint256,uint256)":[{"details":"Total supply cap has been exceeded."}],"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidCap(uint256)":[{"details":"The supplied cap is not a valid cap."}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"cap()":{"details":"Returns the cap on the token's total supply."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_188":{"entryPoint":null,"id":188,"parameterSlots":2,"returnSlots":0},"@_770":{"entryPoint":null,"id":770,"parameterSlots":1,"returnSlots":0},"@_970":{"entryPoint":null,"id":970,"parameterSlots":1,"returnSlots":0},"@_mint_491":{"entryPoint":455,"id":491,"parameterSlots":2,"returnSlots":0},"@_update_458":{"entryPoint":790,"id":458,"parameterSlots":3,"returnSlots":0},"@_update_827":{"entryPoint":596,"id":827,"parameterSlots":3,"returnSlots":0},"@cap_779":{"entryPoint":1350,"id":779,"parameterSlots":0,"returnSlots":1},"@totalSupply_224":{"entryPoint":1360,"id":224,"parameterSlots":0,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1411,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":1434,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2609,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack":{"entryPoint":2511,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2655,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2626,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2776,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed":{"entryPoint":2528,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2837,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2672,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1764,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1606,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2717,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1531,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2075,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2589,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_0_by_1":{"entryPoint":2461,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2557,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1375,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2036,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_rational_0_by_1_to_t_uint256":{"entryPoint":2471,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":1910,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2230,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1785,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1711,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2200,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1900,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2168,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1484,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1664,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1617,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1950,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1370,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":1801,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2155,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2008,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1814,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1960,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1385,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2003,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9367:8","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:8","statements":[{"nodeType":"YulAssignment","src":"57:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:8"},"nodeType":"YulFunctionCall","src":"67:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:8","type":""}],"src":"7:75:8"},{"body":{"nodeType":"YulBlock","src":"177:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:8"},"nodeType":"YulFunctionCall","src":"187:12:8"},"nodeType":"YulExpressionStatement","src":"187:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:8"},{"body":{"nodeType":"YulBlock","src":"300:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:8"},"nodeType":"YulFunctionCall","src":"310:12:8"},"nodeType":"YulExpressionStatement","src":"310:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:8"},{"body":{"nodeType":"YulBlock","src":"379:32:8","statements":[{"nodeType":"YulAssignment","src":"389:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:8"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:8","type":""}],"src":"334:77:8"},{"body":{"nodeType":"YulBlock","src":"460:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:8"},"nodeType":"YulFunctionCall","src":"519:12:8"},"nodeType":"YulExpressionStatement","src":"519:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:8"},"nodeType":"YulFunctionCall","src":"490:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:8"},"nodeType":"YulFunctionCall","src":"480:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:8"},"nodeType":"YulFunctionCall","src":"473:43:8"},"nodeType":"YulIf","src":"470:63:8"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:8","type":""}],"src":"417:122:8"},{"body":{"nodeType":"YulBlock","src":"608:80:8","statements":[{"nodeType":"YulAssignment","src":"618:22:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"633:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"627:5:8"},"nodeType":"YulFunctionCall","src":"627:13:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"618:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:8"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"649:26:8"},"nodeType":"YulFunctionCall","src":"649:33:8"},"nodeType":"YulExpressionStatement","src":"649:33:8"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"586:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"594:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"602:5:8","type":""}],"src":"545:143:8"},{"body":{"nodeType":"YulBlock","src":"771:274:8","statements":[{"body":{"nodeType":"YulBlock","src":"817:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"819:77:8"},"nodeType":"YulFunctionCall","src":"819:79:8"},"nodeType":"YulExpressionStatement","src":"819:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"792:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"801:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"788:3:8"},"nodeType":"YulFunctionCall","src":"788:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"813:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"784:3:8"},"nodeType":"YulFunctionCall","src":"784:32:8"},"nodeType":"YulIf","src":"781:119:8"},{"nodeType":"YulBlock","src":"910:128:8","statements":[{"nodeType":"YulVariableDeclaration","src":"925:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"939:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"929:6:8","type":""}]},{"nodeType":"YulAssignment","src":"954:74:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1000:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"1011:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"996:3:8"},"nodeType":"YulFunctionCall","src":"996:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1020:7:8"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"964:31:8"},"nodeType":"YulFunctionCall","src":"964:64:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"954:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"741:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"752:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"764:6:8","type":""}],"src":"694:351:8"},{"body":{"nodeType":"YulBlock","src":"1079:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1096:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1099:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1089:6:8"},"nodeType":"YulFunctionCall","src":"1089:88:8"},"nodeType":"YulExpressionStatement","src":"1089:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1193:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1196:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1186:6:8"},"nodeType":"YulFunctionCall","src":"1186:15:8"},"nodeType":"YulExpressionStatement","src":"1186:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1217:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1220:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1210:6:8"},"nodeType":"YulFunctionCall","src":"1210:15:8"},"nodeType":"YulExpressionStatement","src":"1210:15:8"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"1051:180:8"},{"body":{"nodeType":"YulBlock","src":"1285:362:8","statements":[{"nodeType":"YulAssignment","src":"1295:25:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1318:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1300:17:8"},"nodeType":"YulFunctionCall","src":"1300:20:8"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"1295:1:8"}]},{"nodeType":"YulAssignment","src":"1329:25:8","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"1352:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1334:17:8"},"nodeType":"YulFunctionCall","src":"1334:20:8"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"1329:1:8"}]},{"nodeType":"YulVariableDeclaration","src":"1363:28:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1386:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"1389:1:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1382:3:8"},"nodeType":"YulFunctionCall","src":"1382:9:8"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"1367:11:8","type":""}]},{"nodeType":"YulAssignment","src":"1400:41:8","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"1429:11:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1411:17:8"},"nodeType":"YulFunctionCall","src":"1411:30:8"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"1400:7:8"}]},{"body":{"nodeType":"YulBlock","src":"1618:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1620:16:8"},"nodeType":"YulFunctionCall","src":"1620:18:8"},"nodeType":"YulExpressionStatement","src":"1620:18:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1551:1:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1544:6:8"},"nodeType":"YulFunctionCall","src":"1544:9:8"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"1574:1:8"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"1581:7:8"},{"name":"x","nodeType":"YulIdentifier","src":"1590:1:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1577:3:8"},"nodeType":"YulFunctionCall","src":"1577:15:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1571:2:8"},"nodeType":"YulFunctionCall","src":"1571:22:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1524:2:8"},"nodeType":"YulFunctionCall","src":"1524:83:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1504:6:8"},"nodeType":"YulFunctionCall","src":"1504:113:8"},"nodeType":"YulIf","src":"1501:139:8"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1268:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"1271:1:8","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"1277:7:8","type":""}],"src":"1237:410:8"},{"body":{"nodeType":"YulBlock","src":"1712:40:8","statements":[{"nodeType":"YulAssignment","src":"1723:22:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1739:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1733:5:8"},"nodeType":"YulFunctionCall","src":"1733:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1723:6:8"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1695:5:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1705:6:8","type":""}],"src":"1653:99:8"},{"body":{"nodeType":"YulBlock","src":"1786:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1803:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1806:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1796:6:8"},"nodeType":"YulFunctionCall","src":"1796:88:8"},"nodeType":"YulExpressionStatement","src":"1796:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1900:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1903:4:8","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1893:6:8"},"nodeType":"YulFunctionCall","src":"1893:15:8"},"nodeType":"YulExpressionStatement","src":"1893:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1924:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1927:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1917:6:8"},"nodeType":"YulFunctionCall","src":"1917:15:8"},"nodeType":"YulExpressionStatement","src":"1917:15:8"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1758:180:8"},{"body":{"nodeType":"YulBlock","src":"1972:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1989:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1992:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1982:6:8"},"nodeType":"YulFunctionCall","src":"1982:88:8"},"nodeType":"YulExpressionStatement","src":"1982:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2086:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2089:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2079:6:8"},"nodeType":"YulFunctionCall","src":"2079:15:8"},"nodeType":"YulExpressionStatement","src":"2079:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2110:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2113:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2103:6:8"},"nodeType":"YulFunctionCall","src":"2103:15:8"},"nodeType":"YulExpressionStatement","src":"2103:15:8"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1944:180:8"},{"body":{"nodeType":"YulBlock","src":"2181:269:8","statements":[{"nodeType":"YulAssignment","src":"2191:22:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2205:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"2211:1:8","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2201:3:8"},"nodeType":"YulFunctionCall","src":"2201:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2191:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"2222:38:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2252:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"2258:1:8","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2248:3:8"},"nodeType":"YulFunctionCall","src":"2248:12:8"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2226:18:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2299:51:8","statements":[{"nodeType":"YulAssignment","src":"2313:27:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2327:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2335:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2323:3:8"},"nodeType":"YulFunctionCall","src":"2323:17:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2313:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2279:18:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2272:6:8"},"nodeType":"YulFunctionCall","src":"2272:26:8"},"nodeType":"YulIf","src":"2269:81:8"},{"body":{"nodeType":"YulBlock","src":"2402:42:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2416:16:8"},"nodeType":"YulFunctionCall","src":"2416:18:8"},"nodeType":"YulExpressionStatement","src":"2416:18:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2366:18:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2389:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2397:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2386:2:8"},"nodeType":"YulFunctionCall","src":"2386:14:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2363:2:8"},"nodeType":"YulFunctionCall","src":"2363:38:8"},"nodeType":"YulIf","src":"2360:84:8"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2165:4:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2174:6:8","type":""}],"src":"2130:320:8"},{"body":{"nodeType":"YulBlock","src":"2510:87:8","statements":[{"nodeType":"YulAssignment","src":"2520:11:8","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2528:3:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2520:4:8"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2548:1:8","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2551:3:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2541:6:8"},"nodeType":"YulFunctionCall","src":"2541:14:8"},"nodeType":"YulExpressionStatement","src":"2541:14:8"},{"nodeType":"YulAssignment","src":"2564:26:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2582:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2585:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2572:9:8"},"nodeType":"YulFunctionCall","src":"2572:18:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2564:4:8"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2497:3:8","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2505:4:8","type":""}],"src":"2456:141:8"},{"body":{"nodeType":"YulBlock","src":"2647:49:8","statements":[{"nodeType":"YulAssignment","src":"2657:33:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2675:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"2682:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2671:3:8"},"nodeType":"YulFunctionCall","src":"2671:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"2687:2:8","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2667:3:8"},"nodeType":"YulFunctionCall","src":"2667:23:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2657:6:8"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2630:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2640:6:8","type":""}],"src":"2603:93:8"},{"body":{"nodeType":"YulBlock","src":"2755:54:8","statements":[{"nodeType":"YulAssignment","src":"2765:37:8","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"2790:4:8"},{"name":"value","nodeType":"YulIdentifier","src":"2796:5:8"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2786:3:8"},"nodeType":"YulFunctionCall","src":"2786:16:8"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"2765:8:8"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"2730:4:8","type":""},{"name":"value","nodeType":"YulTypedName","src":"2736:5:8","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2746:8:8","type":""}],"src":"2702:107:8"},{"body":{"nodeType":"YulBlock","src":"2891:317:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2901:35:8","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"2922:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"2934:1:8","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2918:3:8"},"nodeType":"YulFunctionCall","src":"2918:18:8"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"2905:9:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2945:109:8","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2976:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2987:66:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2957:18:8"},"nodeType":"YulFunctionCall","src":"2957:97:8"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2949:4:8","type":""}]},{"nodeType":"YulAssignment","src":"3063:51:8","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"3094:9:8"},{"name":"toInsert","nodeType":"YulIdentifier","src":"3105:8:8"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"3075:18:8"},"nodeType":"YulFunctionCall","src":"3075:39:8"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"3063:8:8"}]},{"nodeType":"YulAssignment","src":"3123:30:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3136:5:8"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"3147:4:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3143:3:8"},"nodeType":"YulFunctionCall","src":"3143:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3132:3:8"},"nodeType":"YulFunctionCall","src":"3132:21:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3123:5:8"}]},{"nodeType":"YulAssignment","src":"3162:40:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3175:5:8"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"3186:8:8"},{"name":"mask","nodeType":"YulIdentifier","src":"3196:4:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3182:3:8"},"nodeType":"YulFunctionCall","src":"3182:19:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3172:2:8"},"nodeType":"YulFunctionCall","src":"3172:30:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3162:6:8"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2852:5:8","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"2859:10:8","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"2871:8:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2884:6:8","type":""}],"src":"2815:393:8"},{"body":{"nodeType":"YulBlock","src":"3246:28:8","statements":[{"nodeType":"YulAssignment","src":"3256:12:8","value":{"name":"value","nodeType":"YulIdentifier","src":"3263:5:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3256:3:8"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3232:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3242:3:8","type":""}],"src":"3214:60:8"},{"body":{"nodeType":"YulBlock","src":"3340:82:8","statements":[{"nodeType":"YulAssignment","src":"3350:66:8","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3408:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3390:17:8"},"nodeType":"YulFunctionCall","src":"3390:24:8"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3381:8:8"},"nodeType":"YulFunctionCall","src":"3381:34:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3363:17:8"},"nodeType":"YulFunctionCall","src":"3363:53:8"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3350:9:8"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3320:5:8","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3330:9:8","type":""}],"src":"3280:142:8"},{"body":{"nodeType":"YulBlock","src":"3475:28:8","statements":[{"nodeType":"YulAssignment","src":"3485:12:8","value":{"name":"value","nodeType":"YulIdentifier","src":"3492:5:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3485:3:8"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3461:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3471:3:8","type":""}],"src":"3428:75:8"},{"body":{"nodeType":"YulBlock","src":"3585:193:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3595:63:8","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"3650:7:8"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3619:30:8"},"nodeType":"YulFunctionCall","src":"3619:39:8"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"3599:16:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3674:4:8"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3714:4:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3708:5:8"},"nodeType":"YulFunctionCall","src":"3708:11:8"},{"name":"offset","nodeType":"YulIdentifier","src":"3721:6:8"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"3753:16:8"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"3729:23:8"},"nodeType":"YulFunctionCall","src":"3729:41:8"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"3680:27:8"},"nodeType":"YulFunctionCall","src":"3680:91:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3667:6:8"},"nodeType":"YulFunctionCall","src":"3667:105:8"},"nodeType":"YulExpressionStatement","src":"3667:105:8"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3562:4:8","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3568:6:8","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"3576:7:8","type":""}],"src":"3509:269:8"},{"body":{"nodeType":"YulBlock","src":"3833:24:8","statements":[{"nodeType":"YulAssignment","src":"3843:8:8","value":{"kind":"number","nodeType":"YulLiteral","src":"3850:1:8","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3843:3:8"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3829:3:8","type":""}],"src":"3784:73:8"},{"body":{"nodeType":"YulBlock","src":"3916:136:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3926:46:8","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"3940:30:8"},"nodeType":"YulFunctionCall","src":"3940:32:8"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"3930:6:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4025:4:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4031:6:8"},{"name":"zero_0","nodeType":"YulIdentifier","src":"4039:6:8"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3981:43:8"},"nodeType":"YulFunctionCall","src":"3981:65:8"},"nodeType":"YulExpressionStatement","src":"3981:65:8"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3902:4:8","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3908:6:8","type":""}],"src":"3863:189:8"},{"body":{"nodeType":"YulBlock","src":"4108:136:8","statements":[{"body":{"nodeType":"YulBlock","src":"4175:63:8","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4219:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"4226:1:8","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"4189:29:8"},"nodeType":"YulFunctionCall","src":"4189:39:8"},"nodeType":"YulExpressionStatement","src":"4189:39:8"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4128:5:8"},{"name":"end","nodeType":"YulIdentifier","src":"4135:3:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4125:2:8"},"nodeType":"YulFunctionCall","src":"4125:14:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4140:26:8","statements":[{"nodeType":"YulAssignment","src":"4142:22:8","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4155:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"4162:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4151:3:8"},"nodeType":"YulFunctionCall","src":"4151:13:8"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"4142:5:8"}]}]},"pre":{"nodeType":"YulBlock","src":"4122:2:8","statements":[]},"src":"4118:120:8"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"4096:5:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"4103:3:8","type":""}],"src":"4058:186:8"},{"body":{"nodeType":"YulBlock","src":"4329:464:8","statements":[{"body":{"nodeType":"YulBlock","src":"4355:431:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4369:54:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4417:5:8"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4385:31:8"},"nodeType":"YulFunctionCall","src":"4385:38:8"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"4373:8:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4436:63:8","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4459:8:8"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4487:10:8"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4469:17:8"},"nodeType":"YulFunctionCall","src":"4469:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4455:3:8"},"nodeType":"YulFunctionCall","src":"4455:44:8"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"4440:11:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"4656:27:8","statements":[{"nodeType":"YulAssignment","src":"4658:23:8","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"4673:8:8"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4658:11:8"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4640:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"4652:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4637:2:8"},"nodeType":"YulFunctionCall","src":"4637:18:8"},"nodeType":"YulIf","src":"4634:49:8"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4725:11:8"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4742:8:8"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4770:3:8"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4752:17:8"},"nodeType":"YulFunctionCall","src":"4752:22:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4738:3:8"},"nodeType":"YulFunctionCall","src":"4738:37:8"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"4696:28:8"},"nodeType":"YulFunctionCall","src":"4696:80:8"},"nodeType":"YulExpressionStatement","src":"4696:80:8"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4346:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"4351:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4343:2:8"},"nodeType":"YulFunctionCall","src":"4343:11:8"},"nodeType":"YulIf","src":"4340:446:8"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"4305:5:8","type":""},{"name":"len","nodeType":"YulTypedName","src":"4312:3:8","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"4317:10:8","type":""}],"src":"4250:543:8"},{"body":{"nodeType":"YulBlock","src":"4862:54:8","statements":[{"nodeType":"YulAssignment","src":"4872:37:8","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4897:4:8"},{"name":"value","nodeType":"YulIdentifier","src":"4903:5:8"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4893:3:8"},"nodeType":"YulFunctionCall","src":"4893:16:8"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4872:8:8"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4837:4:8","type":""},{"name":"value","nodeType":"YulTypedName","src":"4843:5:8","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4853:8:8","type":""}],"src":"4799:117:8"},{"body":{"nodeType":"YulBlock","src":"4973:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4983:68:8","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5032:1:8","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"5035:5:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5028:3:8"},"nodeType":"YulFunctionCall","src":"5028:13:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5047:1:8","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5043:3:8"},"nodeType":"YulFunctionCall","src":"5043:6:8"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4999:28:8"},"nodeType":"YulFunctionCall","src":"4999:51:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4995:3:8"},"nodeType":"YulFunctionCall","src":"4995:56:8"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4987:4:8","type":""}]},{"nodeType":"YulAssignment","src":"5060:25:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5074:4:8"},{"name":"mask","nodeType":"YulIdentifier","src":"5080:4:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5070:3:8"},"nodeType":"YulFunctionCall","src":"5070:15:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5060:6:8"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4950:4:8","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"4956:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4966:6:8","type":""}],"src":"4922:169:8"},{"body":{"nodeType":"YulBlock","src":"5177:214:8","statements":[{"nodeType":"YulAssignment","src":"5310:37:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5337:4:8"},{"name":"len","nodeType":"YulIdentifier","src":"5343:3:8"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"5318:18:8"},"nodeType":"YulFunctionCall","src":"5318:29:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5310:4:8"}]},{"nodeType":"YulAssignment","src":"5356:29:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5367:4:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5377:1:8","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"5380:3:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5373:3:8"},"nodeType":"YulFunctionCall","src":"5373:11:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5364:2:8"},"nodeType":"YulFunctionCall","src":"5364:21:8"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"5356:4:8"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5158:4:8","type":""},{"name":"len","nodeType":"YulTypedName","src":"5164:3:8","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"5172:4:8","type":""}],"src":"5096:295:8"},{"body":{"nodeType":"YulBlock","src":"5488:1303:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5499:51:8","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5546:3:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5513:32:8"},"nodeType":"YulFunctionCall","src":"5513:37:8"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"5503:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"5635:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5637:16:8"},"nodeType":"YulFunctionCall","src":"5637:18:8"},"nodeType":"YulExpressionStatement","src":"5637:18:8"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5607:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"5615:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5604:2:8"},"nodeType":"YulFunctionCall","src":"5604:30:8"},"nodeType":"YulIf","src":"5601:56:8"},{"nodeType":"YulVariableDeclaration","src":"5667:52:8","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5713:4:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5707:5:8"},"nodeType":"YulFunctionCall","src":"5707:11:8"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5681:25:8"},"nodeType":"YulFunctionCall","src":"5681:38:8"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"5671:6:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5812:4:8"},{"name":"oldLen","nodeType":"YulIdentifier","src":"5818:6:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"5826:6:8"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"5766:45:8"},"nodeType":"YulFunctionCall","src":"5766:67:8"},"nodeType":"YulExpressionStatement","src":"5766:67:8"},{"nodeType":"YulVariableDeclaration","src":"5843:18:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5860:1:8","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"5847:9:8","type":""}]},{"nodeType":"YulAssignment","src":"5871:17:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5884:4:8","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5871:9:8"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5935:611:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5949:37:8","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5968:6:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5980:4:8","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5976:3:8"},"nodeType":"YulFunctionCall","src":"5976:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5964:3:8"},"nodeType":"YulFunctionCall","src":"5964:22:8"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"5953:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6000:51:8","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6046:4:8"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6014:31:8"},"nodeType":"YulFunctionCall","src":"6014:37:8"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"6004:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6064:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"6073:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6068:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"6132:163:8","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6157:6:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6175:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6180:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6171:3:8"},"nodeType":"YulFunctionCall","src":"6171:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6165:5:8"},"nodeType":"YulFunctionCall","src":"6165:26:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6150:6:8"},"nodeType":"YulFunctionCall","src":"6150:42:8"},"nodeType":"YulExpressionStatement","src":"6150:42:8"},{"nodeType":"YulAssignment","src":"6209:24:8","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6223:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6231:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6219:3:8"},"nodeType":"YulFunctionCall","src":"6219:14:8"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6209:6:8"}]},{"nodeType":"YulAssignment","src":"6250:31:8","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6267:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"6278:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6263:3:8"},"nodeType":"YulFunctionCall","src":"6263:18:8"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6250:9:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6098:1:8"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"6101:7:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6095:2:8"},"nodeType":"YulFunctionCall","src":"6095:14:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6110:21:8","statements":[{"nodeType":"YulAssignment","src":"6112:17:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6121:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"6124:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6117:3:8"},"nodeType":"YulFunctionCall","src":"6117:12:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6112:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"6091:3:8","statements":[]},"src":"6087:208:8"},{"body":{"nodeType":"YulBlock","src":"6331:156:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6349:43:8","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6376:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6381:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6372:3:8"},"nodeType":"YulFunctionCall","src":"6372:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6366:5:8"},"nodeType":"YulFunctionCall","src":"6366:26:8"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"6353:9:8","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6416:6:8"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"6443:9:8"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6458:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6466:4:8","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6454:3:8"},"nodeType":"YulFunctionCall","src":"6454:17:8"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6424:18:8"},"nodeType":"YulFunctionCall","src":"6424:48:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6409:6:8"},"nodeType":"YulFunctionCall","src":"6409:64:8"},"nodeType":"YulExpressionStatement","src":"6409:64:8"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"6314:7:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"6323:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6311:2:8"},"nodeType":"YulFunctionCall","src":"6311:19:8"},"nodeType":"YulIf","src":"6308:179:8"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6507:4:8"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6521:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6529:1:8","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6517:3:8"},"nodeType":"YulFunctionCall","src":"6517:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"6533:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6513:3:8"},"nodeType":"YulFunctionCall","src":"6513:22:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6500:6:8"},"nodeType":"YulFunctionCall","src":"6500:36:8"},"nodeType":"YulExpressionStatement","src":"6500:36:8"}]},"nodeType":"YulCase","src":"5928:618:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5933:1:8","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6563:222:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6577:14:8","value":{"kind":"number","nodeType":"YulLiteral","src":"6590:1:8","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6581:5:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"6614:67:8","statements":[{"nodeType":"YulAssignment","src":"6632:35:8","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6651:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6656:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6647:3:8"},"nodeType":"YulFunctionCall","src":"6647:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6641:5:8"},"nodeType":"YulFunctionCall","src":"6641:26:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6632:5:8"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6607:6:8"},"nodeType":"YulIf","src":"6604:77:8"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6701:4:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6760:5:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"6767:6:8"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"6707:52:8"},"nodeType":"YulFunctionCall","src":"6707:67:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6694:6:8"},"nodeType":"YulFunctionCall","src":"6694:81:8"},"nodeType":"YulExpressionStatement","src":"6694:81:8"}]},"nodeType":"YulCase","src":"6555:230:8","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5908:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"5916:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5905:2:8"},"nodeType":"YulFunctionCall","src":"5905:14:8"},"nodeType":"YulSwitch","src":"5898:887:8"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5477:4:8","type":""},{"name":"src","nodeType":"YulTypedName","src":"5483:3:8","type":""}],"src":"5396:1395:8"},{"body":{"nodeType":"YulBlock","src":"6850:32:8","statements":[{"nodeType":"YulAssignment","src":"6860:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"6871:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6860:7:8"}]}]},"name":"cleanup_t_rational_0_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6832:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6842:7:8","type":""}],"src":"6797:85:8"},{"body":{"nodeType":"YulBlock","src":"6956:90:8","statements":[{"nodeType":"YulAssignment","src":"6966:74:8","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7032:5:8"}],"functionName":{"name":"cleanup_t_rational_0_by_1","nodeType":"YulIdentifier","src":"7006:25:8"},"nodeType":"YulFunctionCall","src":"7006:32:8"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"6997:8:8"},"nodeType":"YulFunctionCall","src":"6997:42:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6979:17:8"},"nodeType":"YulFunctionCall","src":"6979:61:8"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"6966:9:8"}]}]},"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6936:5:8","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"6946:9:8","type":""}],"src":"6888:158:8"},{"body":{"nodeType":"YulBlock","src":"7125:74:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7142:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7186:5:8"}],"functionName":{"name":"convert_t_rational_0_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"7147:38:8"},"nodeType":"YulFunctionCall","src":"7147:45:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7135:6:8"},"nodeType":"YulFunctionCall","src":"7135:58:8"},"nodeType":"YulExpressionStatement","src":"7135:58:8"}]},"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7113:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7120:3:8","type":""}],"src":"7052:147:8"},{"body":{"nodeType":"YulBlock","src":"7311:132:8","statements":[{"nodeType":"YulAssignment","src":"7321:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7333:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7344:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7329:3:8"},"nodeType":"YulFunctionCall","src":"7329:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7321:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7409:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7422:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7433:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7418:3:8"},"nodeType":"YulFunctionCall","src":"7418:17:8"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7357:51:8"},"nodeType":"YulFunctionCall","src":"7357:79:8"},"nodeType":"YulExpressionStatement","src":"7357:79:8"}]},"name":"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7283:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7295:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7306:4:8","type":""}],"src":"7205:238:8"},{"body":{"nodeType":"YulBlock","src":"7494:81:8","statements":[{"nodeType":"YulAssignment","src":"7504:65:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7519:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"7526:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7515:3:8"},"nodeType":"YulFunctionCall","src":"7515:54:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7504:7:8"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7476:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7486:7:8","type":""}],"src":"7449:126:8"},{"body":{"nodeType":"YulBlock","src":"7626:51:8","statements":[{"nodeType":"YulAssignment","src":"7636:35:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7665:5:8"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7647:17:8"},"nodeType":"YulFunctionCall","src":"7647:24:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7636:7:8"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7608:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7618:7:8","type":""}],"src":"7581:96:8"},{"body":{"nodeType":"YulBlock","src":"7748:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7765:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7788:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7770:17:8"},"nodeType":"YulFunctionCall","src":"7770:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7758:6:8"},"nodeType":"YulFunctionCall","src":"7758:37:8"},"nodeType":"YulExpressionStatement","src":"7758:37:8"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7736:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7743:3:8","type":""}],"src":"7683:118:8"},{"body":{"nodeType":"YulBlock","src":"7905:124:8","statements":[{"nodeType":"YulAssignment","src":"7915:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7927:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7938:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7923:3:8"},"nodeType":"YulFunctionCall","src":"7923:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7915:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7995:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8008:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8019:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8004:3:8"},"nodeType":"YulFunctionCall","src":"8004:17:8"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7951:43:8"},"nodeType":"YulFunctionCall","src":"7951:71:8"},"nodeType":"YulExpressionStatement","src":"7951:71:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7877:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7889:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7900:4:8","type":""}],"src":"7807:222:8"},{"body":{"nodeType":"YulBlock","src":"8100:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8117:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8140:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8122:17:8"},"nodeType":"YulFunctionCall","src":"8122:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8110:6:8"},"nodeType":"YulFunctionCall","src":"8110:37:8"},"nodeType":"YulExpressionStatement","src":"8110:37:8"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8088:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8095:3:8","type":""}],"src":"8035:118:8"},{"body":{"nodeType":"YulBlock","src":"8285:206:8","statements":[{"nodeType":"YulAssignment","src":"8295:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8307:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8318:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8303:3:8"},"nodeType":"YulFunctionCall","src":"8303:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8295:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8375:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8388:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8399:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8384:3:8"},"nodeType":"YulFunctionCall","src":"8384:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8331:43:8"},"nodeType":"YulFunctionCall","src":"8331:71:8"},"nodeType":"YulExpressionStatement","src":"8331:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8456:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8469:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8480:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8465:3:8"},"nodeType":"YulFunctionCall","src":"8465:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8412:43:8"},"nodeType":"YulFunctionCall","src":"8412:72:8"},"nodeType":"YulExpressionStatement","src":"8412:72:8"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8249:9:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8261:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8269:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8280:4:8","type":""}],"src":"8159:332:8"},{"body":{"nodeType":"YulBlock","src":"8541:147:8","statements":[{"nodeType":"YulAssignment","src":"8551:25:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8574:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8556:17:8"},"nodeType":"YulFunctionCall","src":"8556:20:8"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8551:1:8"}]},{"nodeType":"YulAssignment","src":"8585:25:8","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8608:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8590:17:8"},"nodeType":"YulFunctionCall","src":"8590:20:8"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8585:1:8"}]},{"nodeType":"YulAssignment","src":"8619:16:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8630:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"8633:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8626:3:8"},"nodeType":"YulFunctionCall","src":"8626:9:8"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"8619:3:8"}]},{"body":{"nodeType":"YulBlock","src":"8659:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8661:16:8"},"nodeType":"YulFunctionCall","src":"8661:18:8"},"nodeType":"YulExpressionStatement","src":"8661:18:8"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8651:1:8"},{"name":"sum","nodeType":"YulIdentifier","src":"8654:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8648:2:8"},"nodeType":"YulFunctionCall","src":"8648:10:8"},"nodeType":"YulIf","src":"8645:36:8"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8528:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"8531:1:8","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"8537:3:8","type":""}],"src":"8497:191:8"},{"body":{"nodeType":"YulBlock","src":"8848:288:8","statements":[{"nodeType":"YulAssignment","src":"8858:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8870:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8881:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8866:3:8"},"nodeType":"YulFunctionCall","src":"8866:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8858:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8938:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8951:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"8962:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8947:3:8"},"nodeType":"YulFunctionCall","src":"8947:17:8"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8894:43:8"},"nodeType":"YulFunctionCall","src":"8894:71:8"},"nodeType":"YulExpressionStatement","src":"8894:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9019:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9032:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9043:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9028:3:8"},"nodeType":"YulFunctionCall","src":"9028:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8975:43:8"},"nodeType":"YulFunctionCall","src":"8975:72:8"},"nodeType":"YulExpressionStatement","src":"8975:72:8"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9101:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9114:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9125:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9110:3:8"},"nodeType":"YulFunctionCall","src":"9110:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9057:43:8"},"nodeType":"YulFunctionCall","src":"9057:72:8"},"nodeType":"YulExpressionStatement","src":"9057:72:8"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8804:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8816:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8824:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8832:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8843:4:8","type":""}],"src":"8694:442:8"},{"body":{"nodeType":"YulBlock","src":"9240:124:8","statements":[{"nodeType":"YulAssignment","src":"9250:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9262:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9273:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9258:3:8"},"nodeType":"YulFunctionCall","src":"9258:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9250:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9330:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9343:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9354:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9339:3:8"},"nodeType":"YulFunctionCall","src":"9339:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9286:43:8"},"nodeType":"YulFunctionCall","src":"9286:71:8"},"nodeType":"YulExpressionStatement","src":"9286:71:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9212:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9224:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9235:4:8","type":""}],"src":"9142:222:8"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c06040523480156200001157600080fd5b50604051620022d5380380620022d583398181016040528101906200003791906200059a565b670de0b6b3a7640000816200004d9190620005fb565b6040518060400160405280600781526020017f466f7465727265000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f464f5445000000000000000000000000000000000000000000000000000000008152508160039081620000ca9190620008b6565b508060049081620000dc9190620008b6565b50505060008103620001285760006040517f392e1e270000000000000000000000000000000000000000000000000000000081526004016200011f9190620009e0565b60405180910390fd5b8060808181525050503373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505060006c0183bdac6ae9bc1c8cc0000000905060006b60ef6b1aba6f07233000000090508160058190555080600681905550620001aa60a05183620001c760201b60201c565b620001be60a05182620001c760201b60201c565b50505062000b32565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200023c5760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000233919062000a42565b60405180910390fd5b62000250600083836200025460201b60201c565b5050565b620002678383836200031660201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000311576000620002ae6200054660201b60201c565b90506000620002c26200055060201b60201c565b9050818111156200030e5780826040517f9e79f8540000000000000000000000000000000000000000000000000000000081526004016200030592919062000a70565b60405180910390fd5b50505b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200036c5780600260008282546200035f919062000a9d565b9250508190555062000442565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015620003fb578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620003f29392919062000ad8565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200048d5780600260008282540392505081905550620004da565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000539919062000b15565b60405180910390a3505050565b6000608051905090565b6000600254905090565b600080fd5b6000819050919050565b62000574816200055f565b81146200058057600080fd5b50565b600081519050620005948162000569565b92915050565b600060208284031215620005b357620005b26200055a565b5b6000620005c38482850162000583565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000608826200055f565b915062000615836200055f565b925082820262000625816200055f565b915082820484148315176200063f576200063e620005cc565b5b5092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620006c857607f821691505b602082108103620006de57620006dd62000680565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620007487fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000709565b62000754868362000709565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000797620007916200078b846200055f565b6200076c565b6200055f565b9050919050565b6000819050919050565b620007b38362000776565b620007cb620007c2826200079e565b84845462000716565b825550505050565b600090565b620007e2620007d3565b620007ef818484620007a8565b505050565b5b8181101562000817576200080b600082620007d8565b600181019050620007f5565b5050565b601f82111562000866576200083081620006e4565b6200083b84620006f9565b810160208510156200084b578190505b620008636200085a85620006f9565b830182620007f4565b50505b505050565b600082821c905092915050565b60006200088b600019846008026200086b565b1980831691505092915050565b6000620008a6838362000878565b9150826002028217905092915050565b620008c18262000646565b67ffffffffffffffff811115620008dd57620008dc62000651565b5b620008e98254620006af565b620008f68282856200081b565b600060209050601f8311600181146200092e576000841562000919578287015190505b62000925858262000898565b86555062000995565b601f1984166200093e86620006e4565b60005b82811015620009685784890151825560018201915060208501945060208101905062000941565b8683101562000988578489015162000984601f89168262000878565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b6000620009c8620009c2620009bc846200099d565b6200076c565b6200055f565b9050919050565b620009da81620009a7565b82525050565b6000602082019050620009f76000830184620009cf565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000a2a82620009fd565b9050919050565b62000a3c8162000a1d565b82525050565b600060208201905062000a59600083018462000a31565b92915050565b62000a6a816200055f565b82525050565b600060408201905062000a87600083018562000a5f565b62000a96602083018462000a5f565b9392505050565b600062000aaa826200055f565b915062000ab7836200055f565b925082820190508082111562000ad25762000ad1620005cc565b5b92915050565b600060608201905062000aef600083018662000a31565b62000afe602083018562000a5f565b62000b0d604083018462000a5f565b949350505050565b600060208201905062000b2c600083018462000a5f565b92915050565b60805160a05161175a62000b7b600039600081816104a8015281816106c2015281816106ed0152818161079e015281816108a30152610b700152600061043a015261175a6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80637fe1f74011610097578063b2bdfa7b11610066578063b2bdfa7b146102b1578063bafb8e83146102cf578063dd62ed3e146102ed578063f0e6ea8d1461031d57610100565b80637fe1f7401461022b57806395d89b4114610247578063a9059cbb14610265578063af521c8f1461029557610100565b806323b872dd116100d357806323b872dd1461018f578063313ce567146101bf578063355274ea146101dd57806370a08231146101fb57610100565b8063044d1d4c1461010557806306fdde0314610123578063095ea7b31461014157806318160ddd14610171575b600080fd5b61010d610339565b60405161011a91906110bb565b60405180910390f35b61012b61033f565b6040516101389190611166565b60405180910390f35b61015b60048036038101906101569190611217565b6103d1565b6040516101689190611272565b60405180910390f35b6101796103f4565b60405161018691906110bb565b60405180910390f35b6101a960048036038101906101a4919061128d565b6103fe565b6040516101b69190611272565b60405180910390f35b6101c761042d565b6040516101d491906112fc565b60405180910390f35b6101e5610436565b6040516101f291906110bb565b60405180910390f35b61021560048036038101906102109190611317565b61045e565b60405161022291906110bb565b60405180910390f35b61024560048036038101906102409190611344565b6104a6565b005b61024f610570565b60405161025c9190611166565b60405180910390f35b61027f600480360381019061027a9190611217565b610602565b60405161028c9190611272565b60405180910390f35b6102af60048036038101906102aa9190611217565b61068d565b005b6102b96106eb565b6040516102c69190611380565b60405180910390f35b6102d761070f565b6040516102e491906110bb565b60405180910390f35b6103076004803603810190610302919061139b565b610715565b60405161031491906110bb565b60405180910390f35b6103376004803603810190610332919061128d565b61079c565b005b60065481565b60606003805461034e9061140a565b80601f016020809104026020016040519081016040528092919081815260200182805461037a9061140a565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6000806103dc6108d8565b90506103e98185856108e0565b600191505092915050565b6000600254905090565b6000806104096108d8565b90506104168582856108f2565b610421858585610986565b60019150509392505050565b60006012905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610534576040517f62355e7800000000000000000000000000000000000000000000000000000000815260040161052b90611487565b60405180910390fd5b670de0b6b3a76400008161054891906114d6565b9050806006600082825461055c9190611518565b9250508190555061056d3382610a7a565b50565b60606004805461057f9061140a565b80601f01602080910402602001604051908101604052809291908181526020018280546105ab9061140a565b80156105f85780601f106105cd576101008083540402835291602001916105f8565b820191906000526020600020905b8154815290600101906020018083116105db57829003601f168201915b5050505050905090565b6000670de0b6b3a76400008261061891906114d6565b915060055482111561065f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065690611598565b60405180910390fd5b816005600082825461067191906115b8565b925050819055506106828383610afc565b506001905092915050565b670de0b6b3a7640000816106a191906114d6565b905080600660008282546106b59190611518565b925050819055506106e7827f000000000000000000000000000000000000000000000000000000000000000083610986565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461082a576040517f62355e7800000000000000000000000000000000000000000000000000000000815260040161082190611487565b60405180910390fd5b60065481111561086f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086690611638565b60405180910390fd5b670de0b6b3a76400008161088391906114d6565b9050806006600082825461089791906115b8565b925050819055506108c97f00000000000000000000000000000000000000000000000000000000000000008483610986565b6108d38282610b1f565b505050565b600033905090565b6108ed8383836001610c00565b505050565b60006108fe8484610715565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109805781811015610970578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161096793929190611658565b60405180910390fd5b61097f84848484036000610c00565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109f85760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109ef9190611380565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a6a5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a619190611380565b60405180910390fd5b610a75838383610dd7565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aec5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ae39190611380565b60405180910390fd5b610af860008383610dd7565b5050565b600080610b076108d8565b9050610b14818585610986565b600191505092915050565b80610b298361045e565b1015610b6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b61906116db565b60405180910390fd5b610b95827f000000000000000000000000000000000000000000000000000000000000000083610986565b8060066000828254610ba79190611518565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f322e5021ddf51920f7602154a6c845b34ef1b32704a1fa2c66927b56be28076282604051610bf491906110bb565b60405180910390a25050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c725760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c699190611380565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ce45760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610cdb9190611380565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610dd1578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610dc891906110bb565b60405180910390a35b50505050565b610de2838383610e7d565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e78576000610e20610436565b90506000610e2c6103f4565b905081811115610e755780826040517f9e79f854000000000000000000000000000000000000000000000000000000008152600401610e6c9291906116fb565b60405180910390fd5b50505b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ecf578060026000828254610ec39190611518565b92505081905550610fa2565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f5b578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f5293929190611658565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610feb5780600260008282540392505081905550611038565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161109591906110bb565b60405180910390a3505050565b6000819050919050565b6110b5816110a2565b82525050565b60006020820190506110d060008301846110ac565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111105780820151818401526020810190506110f5565b60008484015250505050565b6000601f19601f8301169050919050565b6000611138826110d6565b61114281856110e1565b93506111528185602086016110f2565b61115b8161111c565b840191505092915050565b60006020820190508181036000830152611180818461112d565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111b88261118d565b9050919050565b6111c8816111ad565b81146111d357600080fd5b50565b6000813590506111e5816111bf565b92915050565b6111f4816110a2565b81146111ff57600080fd5b50565b600081359050611211816111eb565b92915050565b6000806040838503121561122e5761122d611188565b5b600061123c858286016111d6565b925050602061124d85828601611202565b9150509250929050565b60008115159050919050565b61126c81611257565b82525050565b60006020820190506112876000830184611263565b92915050565b6000806000606084860312156112a6576112a5611188565b5b60006112b4868287016111d6565b93505060206112c5868287016111d6565b92505060406112d686828701611202565b9150509250925092565b600060ff82169050919050565b6112f6816112e0565b82525050565b600060208201905061131160008301846112ed565b92915050565b60006020828403121561132d5761132c611188565b5b600061133b848285016111d6565b91505092915050565b60006020828403121561135a57611359611188565b5b600061136884828501611202565b91505092915050565b61137a816111ad565b82525050565b60006020820190506113956000830184611371565b92915050565b600080604083850312156113b2576113b1611188565b5b60006113c0858286016111d6565b92505060206113d1858286016111d6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061142257607f821691505b602082108103611435576114346113db565b5b50919050565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b60006114716015836110e1565b915061147c8261143b565b602082019050919050565b600060208201905081810360008301526114a081611464565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114e1826110a2565b91506114ec836110a2565b92508282026114fa816110a2565b91508282048414831517611511576115106114a7565b5b5092915050565b6000611523826110a2565b915061152e836110a2565b9250828201905080821115611546576115456114a7565b5b92915050565b7f496e73756666696369656e74206d61726b657420737570706c79000000000000600082015250565b6000611582601a836110e1565b915061158d8261154c565b602082019050919050565b600060208201905081810360008301526115b181611575565b9050919050565b60006115c3826110a2565b91506115ce836110a2565b92508282039050818111156115e6576115e56114a7565b5b92915050565b7f496e73756666696369656e742066756e6420696e2074686520706f6f6c000000600082015250565b6000611622601d836110e1565b915061162d826115ec565b602082019050919050565b6000602082019050818103600083015261165181611615565b9050919050565b600060608201905061166d6000830186611371565b61167a60208301856110ac565b61168760408301846110ac565b949350505050565b7f496e73756666696369656e742062616c616e636520666f722070656e616c7479600082015250565b60006116c56020836110e1565b91506116d08261168f565b602082019050919050565b600060208201905081810360008301526116f4816116b8565b9050919050565b600060408201905061171060008301856110ac565b61171d60208301846110ac565b939250505056fea2646970667358221220849fa4af0dfa9dc5b991f2b812c8bbc91a6e62b38317ef6d9ffe34ca34bffc2664736f6c63430008140033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x22D5 CODESIZE SUB DUP1 PUSH3 0x22D5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x59A JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH3 0x4D SWAP2 SWAP1 PUSH3 0x5FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x466F746572726500000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x464F544500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xCA SWAP2 SWAP1 PUSH3 0x8B6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xDC SWAP2 SWAP1 PUSH3 0x8B6 JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP2 SUB PUSH3 0x128 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x392E1E2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x11F SWAP2 SWAP1 PUSH3 0x9E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH13 0x183BDAC6AE9BC1C8CC0000000 SWAP1 POP PUSH1 0x0 PUSH12 0x60EF6B1ABA6F072330000000 SWAP1 POP DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x1AA PUSH1 0xA0 MLOAD DUP4 PUSH3 0x1C7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1BE PUSH1 0xA0 MLOAD DUP3 PUSH3 0x1C7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0xB32 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x23C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x233 SWAP2 SWAP1 PUSH3 0xA42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x250 PUSH1 0x0 DUP4 DUP4 PUSH3 0x254 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x267 DUP4 DUP4 DUP4 PUSH3 0x316 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x311 JUMPI PUSH1 0x0 PUSH3 0x2AE PUSH3 0x546 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x2C2 PUSH3 0x550 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH3 0x30E JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x305 SWAP3 SWAP2 SWAP1 PUSH3 0xA70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x36C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x35F SWAP2 SWAP1 PUSH3 0xA9D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x442 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x3FB JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3F2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x48D JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x4DA JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x539 SWAP2 SWAP1 PUSH3 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x574 DUP2 PUSH3 0x55F JUMP JUMPDEST DUP2 EQ PUSH3 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x594 DUP2 PUSH3 0x569 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x5B3 JUMPI PUSH3 0x5B2 PUSH3 0x55A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x5C3 DUP5 DUP3 DUP6 ADD PUSH3 0x583 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x608 DUP3 PUSH3 0x55F JUMP JUMPDEST SWAP2 POP PUSH3 0x615 DUP4 PUSH3 0x55F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x625 DUP2 PUSH3 0x55F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x63F JUMPI PUSH3 0x63E PUSH3 0x5CC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x6C8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x6DE JUMPI PUSH3 0x6DD PUSH3 0x680 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x748 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x709 JUMP JUMPDEST PUSH3 0x754 DUP7 DUP4 PUSH3 0x709 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x797 PUSH3 0x791 PUSH3 0x78B DUP5 PUSH3 0x55F JUMP JUMPDEST PUSH3 0x76C JUMP JUMPDEST PUSH3 0x55F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7B3 DUP4 PUSH3 0x776 JUMP JUMPDEST PUSH3 0x7CB PUSH3 0x7C2 DUP3 PUSH3 0x79E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x716 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x7E2 PUSH3 0x7D3 JUMP JUMPDEST PUSH3 0x7EF DUP2 DUP5 DUP5 PUSH3 0x7A8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x817 JUMPI PUSH3 0x80B PUSH1 0x0 DUP3 PUSH3 0x7D8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x7F5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x866 JUMPI PUSH3 0x830 DUP2 PUSH3 0x6E4 JUMP JUMPDEST PUSH3 0x83B DUP5 PUSH3 0x6F9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x84B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x863 PUSH3 0x85A DUP6 PUSH3 0x6F9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x7F4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x88B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x86B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8A6 DUP4 DUP4 PUSH3 0x878 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x8C1 DUP3 PUSH3 0x646 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x8DD JUMPI PUSH3 0x8DC PUSH3 0x651 JUMP JUMPDEST JUMPDEST PUSH3 0x8E9 DUP3 SLOAD PUSH3 0x6AF JUMP JUMPDEST PUSH3 0x8F6 DUP3 DUP3 DUP6 PUSH3 0x81B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x92E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x919 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x925 DUP6 DUP3 PUSH3 0x898 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x995 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x93E DUP7 PUSH3 0x6E4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x968 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x941 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x988 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x984 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x878 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9C8 PUSH3 0x9C2 PUSH3 0x9BC DUP5 PUSH3 0x99D JUMP JUMPDEST PUSH3 0x76C JUMP JUMPDEST PUSH3 0x55F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x9DA DUP2 PUSH3 0x9A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x9F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x9CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA2A DUP3 PUSH3 0x9FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xA3C DUP2 PUSH3 0xA1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xA59 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xA31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA6A DUP2 PUSH3 0x55F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0xA87 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0xA5F JUMP JUMPDEST PUSH3 0xA96 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0xA5F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xAAA DUP3 PUSH3 0x55F JUMP JUMPDEST SWAP2 POP PUSH3 0xAB7 DUP4 PUSH3 0x55F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xAD2 JUMPI PUSH3 0xAD1 PUSH3 0x5CC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xAEF PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0xA31 JUMP JUMPDEST PUSH3 0xAFE PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xA5F JUMP JUMPDEST PUSH3 0xB0D PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xA5F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xB2C PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xA5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x175A PUSH3 0xB7B PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x4A8 ADD MSTORE DUP2 DUP2 PUSH2 0x6C2 ADD MSTORE DUP2 DUP2 PUSH2 0x6ED ADD MSTORE DUP2 DUP2 PUSH2 0x79E ADD MSTORE DUP2 DUP2 PUSH2 0x8A3 ADD MSTORE PUSH2 0xB70 ADD MSTORE PUSH1 0x0 PUSH2 0x43A ADD MSTORE PUSH2 0x175A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FE1F740 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB2BDFA7B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xBAFB8E83 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xF0E6EA8D EQ PUSH2 0x31D JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x7FE1F740 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xAF521C8F EQ PUSH2 0x295 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FB JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x44D1D4C EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1217 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x128D JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x12FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x4A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24F PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1217 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x1217 JUMP JUMPDEST PUSH2 0x68D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B9 PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH2 0x70F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x139B JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x337 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x128D JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0x140A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37A SWAP1 PUSH2 0x140A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3DC PUSH2 0x8D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E9 DUP2 DUP6 DUP6 PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x409 PUSH2 0x8D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x416 DUP6 DUP3 DUP6 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x421 DUP6 DUP6 DUP6 PUSH2 0x986 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x534 JUMPI PUSH1 0x40 MLOAD PUSH32 0x62355E7800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52B SWAP1 PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x14D6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x1518 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x56D CALLER DUP3 PUSH2 0xA7A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x57F SWAP1 PUSH2 0x140A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5AB SWAP1 PUSH2 0x140A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x618 SWAP2 SWAP1 PUSH2 0x14D6 JUMP JUMPDEST SWAP2 POP PUSH1 0x5 SLOAD DUP3 GT ISZERO PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x656 SWAP1 PUSH2 0x1598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x671 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x682 DUP4 DUP4 PUSH2 0xAFC JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x6A1 SWAP2 SWAP1 PUSH2 0x14D6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6B5 SWAP2 SWAP1 PUSH2 0x1518 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6E7 DUP3 PUSH32 0x0 DUP4 PUSH2 0x986 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH32 0x62355E7800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x821 SWAP1 PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP2 GT ISZERO PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x866 SWAP1 PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x14D6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x897 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8C9 PUSH32 0x0 DUP5 DUP4 PUSH2 0x986 JUMP JUMPDEST PUSH2 0x8D3 DUP3 DUP3 PUSH2 0xB1F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8ED DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FE DUP5 DUP5 PUSH2 0x715 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x980 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x970 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x967 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x97F DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xC00 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EF SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA61 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA75 DUP4 DUP4 DUP4 PUSH2 0xDD7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAEC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF8 PUSH1 0x0 DUP4 DUP4 PUSH2 0xDD7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB07 PUSH2 0x8D8 JUMP JUMPDEST SWAP1 POP PUSH2 0xB14 DUP2 DUP6 DUP6 PUSH2 0x986 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0xB29 DUP4 PUSH2 0x45E JUMP JUMPDEST LT ISZERO PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB61 SWAP1 PUSH2 0x16DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB95 DUP3 PUSH32 0x0 DUP4 PUSH2 0x986 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBA7 SWAP2 SWAP1 PUSH2 0x1518 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x322E5021DDF51920F7602154A6C845B34EF1B32704A1FA2C66927B56BE280762 DUP3 PUSH1 0x40 MLOAD PUSH2 0xBF4 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC72 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC69 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCE4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDB SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDD1 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDC8 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xDE2 DUP4 DUP4 DUP4 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE78 JUMPI PUSH1 0x0 PUSH2 0xE20 PUSH2 0x436 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE2C PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xE75 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6C SWAP3 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xECF JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEC3 SWAP2 SWAP1 PUSH2 0x1518 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF5B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF52 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFEB JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1038 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1095 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B5 DUP2 PUSH2 0x10A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1110 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1138 DUP3 PUSH2 0x10D6 JUMP JUMPDEST PUSH2 0x1142 DUP2 DUP6 PUSH2 0x10E1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1152 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0x115B DUP2 PUSH2 0x111C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1180 DUP2 DUP5 PUSH2 0x112D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B8 DUP3 PUSH2 0x118D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C8 DUP2 PUSH2 0x11AD JUMP JUMPDEST DUP2 EQ PUSH2 0x11D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11E5 DUP2 PUSH2 0x11BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11F4 DUP2 PUSH2 0x10A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x11FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1211 DUP2 PUSH2 0x11EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x122E JUMPI PUSH2 0x122D PUSH2 0x1188 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x123C DUP6 DUP3 DUP7 ADD PUSH2 0x11D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x124D DUP6 DUP3 DUP7 ADD PUSH2 0x1202 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x126C DUP2 PUSH2 0x1257 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1287 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1263 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12A6 JUMPI PUSH2 0x12A5 PUSH2 0x1188 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12B4 DUP7 DUP3 DUP8 ADD PUSH2 0x11D6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12C5 DUP7 DUP3 DUP8 ADD PUSH2 0x11D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x12D6 DUP7 DUP3 DUP8 ADD PUSH2 0x1202 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12F6 DUP2 PUSH2 0x12E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1311 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132D JUMPI PUSH2 0x132C PUSH2 0x1188 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x133B DUP5 DUP3 DUP6 ADD PUSH2 0x11D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x135A JUMPI PUSH2 0x1359 PUSH2 0x1188 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1368 DUP5 DUP3 DUP6 ADD PUSH2 0x1202 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x137A DUP2 PUSH2 0x11AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1395 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1371 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B2 JUMPI PUSH2 0x13B1 PUSH2 0x1188 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C0 DUP6 DUP3 DUP7 ADD PUSH2 0x11D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13D1 DUP6 DUP3 DUP7 ADD PUSH2 0x11D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1422 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1435 JUMPI PUSH2 0x1434 PUSH2 0x13DB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1471 PUSH1 0x15 DUP4 PUSH2 0x10E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x147C DUP3 PUSH2 0x143B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14A0 DUP2 PUSH2 0x1464 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14E1 DUP3 PUSH2 0x10A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x14EC DUP4 PUSH2 0x10A2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x14FA DUP2 PUSH2 0x10A2 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1523 DUP3 PUSH2 0x10A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x152E DUP4 PUSH2 0x10A2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1546 JUMPI PUSH2 0x1545 PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206D61726B657420737570706C79000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1582 PUSH1 0x1A DUP4 PUSH2 0x10E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x158D DUP3 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15B1 DUP2 PUSH2 0x1575 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C3 DUP3 PUSH2 0x10A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x15CE DUP4 PUSH2 0x10A2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x15E6 JUMPI PUSH2 0x15E5 PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E6420696E2074686520706F6F6C000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1622 PUSH1 0x1D DUP4 PUSH2 0x10E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x162D DUP3 PUSH2 0x15EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1651 DUP2 PUSH2 0x1615 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x166D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x167A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10AC JUMP JUMPDEST PUSH2 0x1687 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10AC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520666F722070656E616C7479 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C5 PUSH1 0x20 DUP4 PUSH2 0x10E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x16D0 DUP3 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16F4 DUP2 PUSH2 0x16B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1710 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x10AC JUMP JUMPDEST PUSH2 0x171D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10AC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 SWAP16 LOG4 0xAF 0xD STATICCALL SWAP14 0xC5 0xB9 SWAP2 CALLCODE 0xB8 SLT 0xC8 0xBB 0xC9 BYTE PUSH15 0x62B38317EF6D9FFE34CA34BFFC2664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"247:2438:6:-:0;;;645:464;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;741:4;728:10;:17;;;;:::i;:::-;1896:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;764:1:3;756:4;:9;752:65;;804:1;788:18;;;;;;;;;;;:::i;:::-;;;;;;;;752:65;833:4;826:11;;;;;;716:128;766:10:6::2;757:19;;;;;;;;::::0;::::2;786:26;815:19;786:48;;866:27;896:18;866:48;;940:18;925:12;:33;;;;995:19;968:24;:46;;;;1025:33;1031:6;;1039:18;1025:5;;;:33;;:::i;:::-;1068:34;1074:6;;1082:19;1068:5;;;:34;;:::i;:::-;747:362;;645:464:::0;247:2438;;7721:208:1;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;1059:371:3:-;1153:30;1167:4;1173:2;1177:5;1153:13;;;:30;;:::i;:::-;1214:1;1198:18;;:4;:18;;;1194:230;;1232:17;1252:5;:3;;;:5;;:::i;:::-;1232:25;;1271:14;1288:13;:11;;;:13;;:::i;:::-;1271:30;;1328:9;1319:6;:18;1315:99;;;1381:6;1389:9;1364:35;;;;;;;;;;;;:::i;:::-;;;;;;;;1315:99;1218:206;;1194:230;1059:371;;;:::o;6271:1107:1:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;923:81:3:-;967:7;993:4;;986:11;;923:81;:::o;3144:97:1:-;3196:7;3222:12;;3215:19;;3144:97;:::o;88:117:8:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:180::-;1099:77;1096:1;1089:88;1196:4;1193:1;1186:15;1220:4;1217:1;1210:15;1237:410;1277:7;1300:20;1318:1;1300:20;:::i;:::-;1295:25;;1334:20;1352:1;1334:20;:::i;:::-;1329:25;;1389:1;1386;1382:9;1411:30;1429:11;1411:30;:::i;:::-;1400:41;;1590:1;1581:7;1577:15;1574:1;1571:22;1551:1;1544:9;1524:83;1501:139;;1620:18;;:::i;:::-;1501:139;1285:362;1237:410;;;;:::o;1653:99::-;1705:6;1739:5;1733:12;1723:22;;1653:99;;;:::o;1758:180::-;1806:77;1803:1;1796:88;1903:4;1900:1;1893:15;1927:4;1924:1;1917:15;1944:180;1992:77;1989:1;1982:88;2089:4;2086:1;2079:15;2113:4;2110:1;2103:15;2130:320;2174:6;2211:1;2205:4;2201:12;2191:22;;2258:1;2252:4;2248:12;2279:18;2269:81;;2335:4;2327:6;2323:17;2313:27;;2269:81;2397:2;2389:6;2386:14;2366:18;2363:38;2360:84;;2416:18;;:::i;:::-;2360:84;2181:269;2130:320;;;:::o;2456:141::-;2505:4;2528:3;2520:11;;2551:3;2548:1;2541:14;2585:4;2582:1;2572:18;2564:26;;2456:141;;;:::o;2603:93::-;2640:6;2687:2;2682;2675:5;2671:14;2667:23;2657:33;;2603:93;;;:::o;2702:107::-;2746:8;2796:5;2790:4;2786:16;2765:37;;2702:107;;;;:::o;2815:393::-;2884:6;2934:1;2922:10;2918:18;2957:97;2987:66;2976:9;2957:97;:::i;:::-;3075:39;3105:8;3094:9;3075:39;:::i;:::-;3063:51;;3147:4;3143:9;3136:5;3132:21;3123:30;;3196:4;3186:8;3182:19;3175:5;3172:30;3162:40;;2891:317;;2815:393;;;;;:::o;3214:60::-;3242:3;3263:5;3256:12;;3214:60;;;:::o;3280:142::-;3330:9;3363:53;3381:34;3390:24;3408:5;3390:24;:::i;:::-;3381:34;:::i;:::-;3363:53;:::i;:::-;3350:66;;3280:142;;;:::o;3428:75::-;3471:3;3492:5;3485:12;;3428:75;;;:::o;3509:269::-;3619:39;3650:7;3619:39;:::i;:::-;3680:91;3729:41;3753:16;3729:41;:::i;:::-;3721:6;3714:4;3708:11;3680:91;:::i;:::-;3674:4;3667:105;3585:193;3509:269;;;:::o;3784:73::-;3829:3;3784:73;:::o;3863:189::-;3940:32;;:::i;:::-;3981:65;4039:6;4031;4025:4;3981:65;:::i;:::-;3916:136;3863:189;;:::o;4058:186::-;4118:120;4135:3;4128:5;4125:14;4118:120;;;4189:39;4226:1;4219:5;4189:39;:::i;:::-;4162:1;4155:5;4151:13;4142:22;;4118:120;;;4058:186;;:::o;4250:543::-;4351:2;4346:3;4343:11;4340:446;;;4385:38;4417:5;4385:38;:::i;:::-;4469:29;4487:10;4469:29;:::i;:::-;4459:8;4455:44;4652:2;4640:10;4637:18;4634:49;;;4673:8;4658:23;;4634:49;4696:80;4752:22;4770:3;4752:22;:::i;:::-;4742:8;4738:37;4725:11;4696:80;:::i;:::-;4355:431;;4340:446;4250:543;;;:::o;4799:117::-;4853:8;4903:5;4897:4;4893:16;4872:37;;4799:117;;;;:::o;4922:169::-;4966:6;4999:51;5047:1;5043:6;5035:5;5032:1;5028:13;4999:51;:::i;:::-;4995:56;5080:4;5074;5070:15;5060:25;;4973:118;4922:169;;;;:::o;5096:295::-;5172:4;5318:29;5343:3;5337:4;5318:29;:::i;:::-;5310:37;;5380:3;5377:1;5373:11;5367:4;5364:21;5356:29;;5096:295;;;;:::o;5396:1395::-;5513:37;5546:3;5513:37;:::i;:::-;5615:18;5607:6;5604:30;5601:56;;;5637:18;;:::i;:::-;5601:56;5681:38;5713:4;5707:11;5681:38;:::i;:::-;5766:67;5826:6;5818;5812:4;5766:67;:::i;:::-;5860:1;5884:4;5871:17;;5916:2;5908:6;5905:14;5933:1;5928:618;;;;6590:1;6607:6;6604:77;;;6656:9;6651:3;6647:19;6641:26;6632:35;;6604:77;6707:67;6767:6;6760:5;6707:67;:::i;:::-;6701:4;6694:81;6563:222;5898:887;;5928:618;5980:4;5976:9;5968:6;5964:22;6014:37;6046:4;6014:37;:::i;:::-;6073:1;6087:208;6101:7;6098:1;6095:14;6087:208;;;6180:9;6175:3;6171:19;6165:26;6157:6;6150:42;6231:1;6223:6;6219:14;6209:24;;6278:2;6267:9;6263:18;6250:31;;6124:4;6121:1;6117:12;6112:17;;6087:208;;;6323:6;6314:7;6311:19;6308:179;;;6381:9;6376:3;6372:19;6366:26;6424:48;6466:4;6458:6;6454:17;6443:9;6424:48;:::i;:::-;6416:6;6409:64;6331:156;6308:179;6533:1;6529;6521:6;6517:14;6513:22;6507:4;6500:36;5935:611;;;5898:887;;5488:1303;;;5396:1395;;:::o;6797:85::-;6842:7;6871:5;6860:16;;6797:85;;;:::o;6888:158::-;6946:9;6979:61;6997:42;7006:32;7032:5;7006:32;:::i;:::-;6997:42;:::i;:::-;6979:61;:::i;:::-;6966:74;;6888:158;;;:::o;7052:147::-;7147:45;7186:5;7147:45;:::i;:::-;7142:3;7135:58;7052:147;;:::o;7205:238::-;7306:4;7344:2;7333:9;7329:18;7321:26;;7357:79;7433:1;7422:9;7418:17;7409:6;7357:79;:::i;:::-;7205:238;;;;:::o;7449:126::-;7486:7;7526:42;7519:5;7515:54;7504:65;;7449:126;;;:::o;7581:96::-;7618:7;7647:24;7665:5;7647:24;:::i;:::-;7636:35;;7581:96;;;:::o;7683:118::-;7770:24;7788:5;7770:24;:::i;:::-;7765:3;7758:37;7683:118;;:::o;7807:222::-;7900:4;7938:2;7927:9;7923:18;7915:26;;7951:71;8019:1;8008:9;8004:17;7995:6;7951:71;:::i;:::-;7807:222;;;;:::o;8035:118::-;8122:24;8140:5;8122:24;:::i;:::-;8117:3;8110:37;8035:118;;:::o;8159:332::-;8280:4;8318:2;8307:9;8303:18;8295:26;;8331:71;8399:1;8388:9;8384:17;8375:6;8331:71;:::i;:::-;8412:72;8480:2;8469:9;8465:18;8456:6;8412:72;:::i;:::-;8159:332;;;;;:::o;8497:191::-;8537:3;8556:20;8574:1;8556:20;:::i;:::-;8551:25;;8590:20;8608:1;8590:20;:::i;:::-;8585:25;;8633:1;8630;8626:9;8619:16;;8654:3;8651:1;8648:10;8645:36;;;8661:18;;:::i;:::-;8645:36;8497:191;;;;:::o;8694:442::-;8843:4;8881:2;8870:9;8866:18;8858:26;;8894:71;8962:1;8951:9;8947:17;8938:6;8894:71;:::i;:::-;8975:72;9043:2;9032:9;9028:18;9019:6;8975:72;:::i;:::-;9057;9125:2;9114:9;9110:18;9101:6;9057:72;:::i;:::-;8694:442;;;;;;:::o;9142:222::-;9235:4;9273:2;9262:9;9258:18;9250:26;;9286:71;9354:1;9343:9;9339:17;9330:6;9286:71;:::i;:::-;9142:222;;;;:::o;247:2438:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_542":{"entryPoint":2272,"id":542,"parameterSlots":3,"returnSlots":0},"@_approve_602":{"entryPoint":3072,"id":602,"parameterSlots":4,"returnSlots":0},"@_mint_491":{"entryPoint":2682,"id":491,"parameterSlots":2,"returnSlots":0},"@_msgSender_866":{"entryPoint":2264,"id":866,"parameterSlots":0,"returnSlots":1},"@_owner_896":{"entryPoint":1771,"id":896,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_650":{"entryPoint":2290,"id":650,"parameterSlots":3,"returnSlots":0},"@_transfer_381":{"entryPoint":2438,"id":381,"parameterSlots":3,"returnSlots":0},"@_update_458":{"entryPoint":3709,"id":458,"parameterSlots":3,"returnSlots":0},"@_update_827":{"entryPoint":3543,"id":827,"parameterSlots":3,"returnSlots":0},"@addToReversePool_1103":{"entryPoint":1677,"id":1103,"parameterSlots":2,"returnSlots":0},"@allowance_278":{"entryPoint":1813,"id":278,"parameterSlots":2,"returnSlots":1},"@approve_302":{"entryPoint":977,"id":302,"parameterSlots":2,"returnSlots":1},"@balanceOf_237":{"entryPoint":1118,"id":237,"parameterSlots":1,"returnSlots":1},"@cap_779":{"entryPoint":1078,"id":779,"parameterSlots":0,"returnSlots":1},"@decimals_215":{"entryPoint":1069,"id":215,"parameterSlots":0,"returnSlots":1},"@marketSupply_898":{"entryPoint":1807,"id":898,"parameterSlots":0,"returnSlots":0},"@mintToReverseTransactionPool_1127":{"entryPoint":1190,"id":1127,"parameterSlots":1,"returnSlots":0},"@name_197":{"entryPoint":831,"id":197,"parameterSlots":0,"returnSlots":1},"@penalizeFraud_1079":{"entryPoint":2847,"id":1079,"parameterSlots":2,"returnSlots":0},"@reverseTransactionSupply_900":{"entryPoint":825,"id":900,"parameterSlots":0,"returnSlots":0},"@reverseTransfer_1047":{"entryPoint":1948,"id":1047,"parameterSlots":3,"returnSlots":0},"@symbol_206":{"entryPoint":1392,"id":206,"parameterSlots":0,"returnSlots":1},"@totalSupply_224":{"entryPoint":1012,"id":224,"parameterSlots":0,"returnSlots":1},"@transferFrom_334":{"entryPoint":1022,"id":334,"parameterSlots":3,"returnSlots":1},"@transfer_1007":{"entryPoint":1538,"id":1007,"parameterSlots":2,"returnSlots":1},"@transfer_261":{"entryPoint":2812,"id":261,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":4566,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":4610,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4887,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5019,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4749,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4631,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":4932,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4977,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4707,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":4397,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_3e1c438a92d9e4b8cbf66fa234a4bce1bd7c7f595e8c111db56feaca0e5b6cdf_to_t_string_memory_ptr_fromStack":{"entryPoint":5493,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack":{"entryPoint":5220,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899_to_t_string_memory_ptr_fromStack":{"entryPoint":5653,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_87c1d7407bdbf4847579356d623122ee7d0ba15f0b291eb7759a1a031129cc50_to_t_string_memory_ptr_fromStack":{"entryPoint":5816,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4268,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":4845,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4992,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5720,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4722,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4454,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e1c438a92d9e4b8cbf66fa234a4bce1bd7c7f595e8c111db56feaca0e5b6cdf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5528,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5255,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5688,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_87c1d7407bdbf4847579356d623122ee7d0ba15f0b291eb7759a1a031129cc50__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5851,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4283,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5883,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":4860,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4310,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4321,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5400,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":5334,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5560,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4525,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4695,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4493,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4258,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":4832,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4338,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5130,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5287,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":5083,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4488,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4380,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_3e1c438a92d9e4b8cbf66fa234a4bce1bd7c7f595e8c111db56feaca0e5b6cdf":{"entryPoint":5452,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc":{"entryPoint":5179,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899":{"entryPoint":5612,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_87c1d7407bdbf4847579356d623122ee7d0ba15f0b291eb7759a1a031129cc50":{"entryPoint":5775,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4543,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4587,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12569:8","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:8","statements":[{"nodeType":"YulAssignment","src":"62:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:8"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:8","type":""}],"src":"7:77:8"},{"body":{"nodeType":"YulBlock","src":"155:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:8"},"nodeType":"YulFunctionCall","src":"177:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:8"},"nodeType":"YulFunctionCall","src":"165:37:8"},"nodeType":"YulExpressionStatement","src":"165:37:8"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:8","type":""}],"src":"90:118:8"},{"body":{"nodeType":"YulBlock","src":"312:124:8","statements":[{"nodeType":"YulAssignment","src":"322:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:8"},"nodeType":"YulFunctionCall","src":"330:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:8"},"nodeType":"YulFunctionCall","src":"411:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:8"},"nodeType":"YulFunctionCall","src":"358:71:8"},"nodeType":"YulExpressionStatement","src":"358:71:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:8","type":""}],"src":"214:222:8"},{"body":{"nodeType":"YulBlock","src":"501:40:8","statements":[{"nodeType":"YulAssignment","src":"512:22:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"528:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"522:5:8"},"nodeType":"YulFunctionCall","src":"522:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"512:6:8"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"484:5:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"494:6:8","type":""}],"src":"442:99:8"},{"body":{"nodeType":"YulBlock","src":"643:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"660:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"665:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"653:6:8"},"nodeType":"YulFunctionCall","src":"653:19:8"},"nodeType":"YulExpressionStatement","src":"653:19:8"},{"nodeType":"YulAssignment","src":"681:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"700:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"705:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"696:3:8"},"nodeType":"YulFunctionCall","src":"696:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"681:11:8"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"615:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"620:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"631:11:8","type":""}],"src":"547:169:8"},{"body":{"nodeType":"YulBlock","src":"784:184:8","statements":[{"nodeType":"YulVariableDeclaration","src":"794:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"803:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"798:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"863:63:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"888:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"884:3:8"},"nodeType":"YulFunctionCall","src":"884:11:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"907:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"912:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"903:3:8"},"nodeType":"YulFunctionCall","src":"903:11:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"897:5:8"},"nodeType":"YulFunctionCall","src":"897:18:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"877:6:8"},"nodeType":"YulFunctionCall","src":"877:39:8"},"nodeType":"YulExpressionStatement","src":"877:39:8"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"824:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"827:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"821:2:8"},"nodeType":"YulFunctionCall","src":"821:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"835:19:8","statements":[{"nodeType":"YulAssignment","src":"837:15:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"846:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"849:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"842:3:8"},"nodeType":"YulFunctionCall","src":"842:10:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"837:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"817:3:8","statements":[]},"src":"813:113:8"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"946:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"951:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"942:3:8"},"nodeType":"YulFunctionCall","src":"942:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"960:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"935:6:8"},"nodeType":"YulFunctionCall","src":"935:27:8"},"nodeType":"YulExpressionStatement","src":"935:27:8"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"766:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"771:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"776:6:8","type":""}],"src":"722:246:8"},{"body":{"nodeType":"YulBlock","src":"1022:54:8","statements":[{"nodeType":"YulAssignment","src":"1032:38:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1050:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"1057:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1046:3:8"},"nodeType":"YulFunctionCall","src":"1046:14:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1066:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1062:3:8"},"nodeType":"YulFunctionCall","src":"1062:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1042:3:8"},"nodeType":"YulFunctionCall","src":"1042:28:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1032:6:8"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1005:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1015:6:8","type":""}],"src":"974:102:8"},{"body":{"nodeType":"YulBlock","src":"1174:285:8","statements":[{"nodeType":"YulVariableDeclaration","src":"1184:53:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1231:5:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1198:32:8"},"nodeType":"YulFunctionCall","src":"1198:39:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1188:6:8","type":""}]},{"nodeType":"YulAssignment","src":"1246:78:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1312:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"1317:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1253:58:8"},"nodeType":"YulFunctionCall","src":"1253:71:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1246:3:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1372:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"1379:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1368:3:8"},"nodeType":"YulFunctionCall","src":"1368:16:8"},{"name":"pos","nodeType":"YulIdentifier","src":"1386:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"1391:6:8"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1333:34:8"},"nodeType":"YulFunctionCall","src":"1333:65:8"},"nodeType":"YulExpressionStatement","src":"1333:65:8"},{"nodeType":"YulAssignment","src":"1407:46:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1418:3:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1445:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1423:21:8"},"nodeType":"YulFunctionCall","src":"1423:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1414:3:8"},"nodeType":"YulFunctionCall","src":"1414:39:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1407:3:8"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1155:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1162:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1170:3:8","type":""}],"src":"1082:377:8"},{"body":{"nodeType":"YulBlock","src":"1583:195:8","statements":[{"nodeType":"YulAssignment","src":"1593:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1605:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1616:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1601:3:8"},"nodeType":"YulFunctionCall","src":"1601:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1593:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1640:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"1651:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1636:3:8"},"nodeType":"YulFunctionCall","src":"1636:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1659:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"1665:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1655:3:8"},"nodeType":"YulFunctionCall","src":"1655:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1629:6:8"},"nodeType":"YulFunctionCall","src":"1629:47:8"},"nodeType":"YulExpressionStatement","src":"1629:47:8"},{"nodeType":"YulAssignment","src":"1685:86:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1757:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"1766:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1693:63:8"},"nodeType":"YulFunctionCall","src":"1693:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1685:4:8"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1555:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1567:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1578:4:8","type":""}],"src":"1465:313:8"},{"body":{"nodeType":"YulBlock","src":"1824:35:8","statements":[{"nodeType":"YulAssignment","src":"1834:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1850:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1844:5:8"},"nodeType":"YulFunctionCall","src":"1844:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1834:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1817:6:8","type":""}],"src":"1784:75:8"},{"body":{"nodeType":"YulBlock","src":"1954:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1971:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1974:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1964:6:8"},"nodeType":"YulFunctionCall","src":"1964:12:8"},"nodeType":"YulExpressionStatement","src":"1964:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1865:117:8"},{"body":{"nodeType":"YulBlock","src":"2077:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2094:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2097:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2087:6:8"},"nodeType":"YulFunctionCall","src":"2087:12:8"},"nodeType":"YulExpressionStatement","src":"2087:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1988:117:8"},{"body":{"nodeType":"YulBlock","src":"2156:81:8","statements":[{"nodeType":"YulAssignment","src":"2166:65:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2181:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"2188:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2177:3:8"},"nodeType":"YulFunctionCall","src":"2177:54:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2166:7:8"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2138:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2148:7:8","type":""}],"src":"2111:126:8"},{"body":{"nodeType":"YulBlock","src":"2288:51:8","statements":[{"nodeType":"YulAssignment","src":"2298:35:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2327:5:8"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2309:17:8"},"nodeType":"YulFunctionCall","src":"2309:24:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2298:7:8"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2270:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2280:7:8","type":""}],"src":"2243:96:8"},{"body":{"nodeType":"YulBlock","src":"2388:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"2445:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2454:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2457:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2447:6:8"},"nodeType":"YulFunctionCall","src":"2447:12:8"},"nodeType":"YulExpressionStatement","src":"2447:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2411:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2436:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2418:17:8"},"nodeType":"YulFunctionCall","src":"2418:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2408:2:8"},"nodeType":"YulFunctionCall","src":"2408:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2401:6:8"},"nodeType":"YulFunctionCall","src":"2401:43:8"},"nodeType":"YulIf","src":"2398:63:8"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2381:5:8","type":""}],"src":"2345:122:8"},{"body":{"nodeType":"YulBlock","src":"2525:87:8","statements":[{"nodeType":"YulAssignment","src":"2535:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2557:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2544:12:8"},"nodeType":"YulFunctionCall","src":"2544:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2535:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2600:5:8"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2573:26:8"},"nodeType":"YulFunctionCall","src":"2573:33:8"},"nodeType":"YulExpressionStatement","src":"2573:33:8"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2503:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"2511:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2519:5:8","type":""}],"src":"2473:139:8"},{"body":{"nodeType":"YulBlock","src":"2661:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"2718:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2727:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2730:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2720:6:8"},"nodeType":"YulFunctionCall","src":"2720:12:8"},"nodeType":"YulExpressionStatement","src":"2720:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2684:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2709:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2691:17:8"},"nodeType":"YulFunctionCall","src":"2691:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2681:2:8"},"nodeType":"YulFunctionCall","src":"2681:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2674:6:8"},"nodeType":"YulFunctionCall","src":"2674:43:8"},"nodeType":"YulIf","src":"2671:63:8"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2654:5:8","type":""}],"src":"2618:122:8"},{"body":{"nodeType":"YulBlock","src":"2798:87:8","statements":[{"nodeType":"YulAssignment","src":"2808:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2830:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2817:12:8"},"nodeType":"YulFunctionCall","src":"2817:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2808:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2873:5:8"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2846:26:8"},"nodeType":"YulFunctionCall","src":"2846:33:8"},"nodeType":"YulExpressionStatement","src":"2846:33:8"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2776:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"2784:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2792:5:8","type":""}],"src":"2746:139:8"},{"body":{"nodeType":"YulBlock","src":"2974:391:8","statements":[{"body":{"nodeType":"YulBlock","src":"3020:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3022:77:8"},"nodeType":"YulFunctionCall","src":"3022:79:8"},"nodeType":"YulExpressionStatement","src":"3022:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2995:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"3004:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2991:3:8"},"nodeType":"YulFunctionCall","src":"2991:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"3016:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2987:3:8"},"nodeType":"YulFunctionCall","src":"2987:32:8"},"nodeType":"YulIf","src":"2984:119:8"},{"nodeType":"YulBlock","src":"3113:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3128:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"3142:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3132:6:8","type":""}]},{"nodeType":"YulAssignment","src":"3157:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3192:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3188:3:8"},"nodeType":"YulFunctionCall","src":"3188:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3212:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3167:20:8"},"nodeType":"YulFunctionCall","src":"3167:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3157:6:8"}]}]},{"nodeType":"YulBlock","src":"3240:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3255:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"3269:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3259:6:8","type":""}]},{"nodeType":"YulAssignment","src":"3285:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3320:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"3331:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3316:3:8"},"nodeType":"YulFunctionCall","src":"3316:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3340:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3295:20:8"},"nodeType":"YulFunctionCall","src":"3295:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3285:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2936:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2947:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2959:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2967:6:8","type":""}],"src":"2891:474:8"},{"body":{"nodeType":"YulBlock","src":"3413:48:8","statements":[{"nodeType":"YulAssignment","src":"3423:32:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3448:5:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3441:6:8"},"nodeType":"YulFunctionCall","src":"3441:13:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3434:6:8"},"nodeType":"YulFunctionCall","src":"3434:21:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3423:7:8"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3395:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3405:7:8","type":""}],"src":"3371:90:8"},{"body":{"nodeType":"YulBlock","src":"3526:50:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3543:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3563:5:8"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3548:14:8"},"nodeType":"YulFunctionCall","src":"3548:21:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3536:6:8"},"nodeType":"YulFunctionCall","src":"3536:34:8"},"nodeType":"YulExpressionStatement","src":"3536:34:8"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3514:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3521:3:8","type":""}],"src":"3467:109:8"},{"body":{"nodeType":"YulBlock","src":"3674:118:8","statements":[{"nodeType":"YulAssignment","src":"3684:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3696:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3707:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3692:3:8"},"nodeType":"YulFunctionCall","src":"3692:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3684:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:8"},"nodeType":"YulFunctionCall","src":"3767:17:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3720:37:8"},"nodeType":"YulFunctionCall","src":"3720:65:8"},"nodeType":"YulExpressionStatement","src":"3720:65:8"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3646:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3658:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3669:4:8","type":""}],"src":"3582:210:8"},{"body":{"nodeType":"YulBlock","src":"3898:519:8","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:8"},"nodeType":"YulFunctionCall","src":"3946:79:8"},"nodeType":"YulExpressionStatement","src":"3946:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:8"},"nodeType":"YulFunctionCall","src":"3915:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:8","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:8"},"nodeType":"YulFunctionCall","src":"3911:32:8"},"nodeType":"YulIf","src":"3908:119:8"},{"nodeType":"YulBlock","src":"4037:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:8","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:8"},"nodeType":"YulFunctionCall","src":"4112:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:8"},"nodeType":"YulFunctionCall","src":"4091:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:8"}]}]},{"nodeType":"YulBlock","src":"4164:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:8","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:8"},"nodeType":"YulFunctionCall","src":"4240:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:8"},"nodeType":"YulFunctionCall","src":"4219:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:8"}]}]},{"nodeType":"YulBlock","src":"4292:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:8","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:8","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:8"},"nodeType":"YulFunctionCall","src":"4368:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:8"},"nodeType":"YulFunctionCall","src":"4347:53:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:8","type":""}],"src":"3798:619:8"},{"body":{"nodeType":"YulBlock","src":"4466:43:8","statements":[{"nodeType":"YulAssignment","src":"4476:27:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:8","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:8"},"nodeType":"YulFunctionCall","src":"4487:16:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:8"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:8","type":""}],"src":"4423:86:8"},{"body":{"nodeType":"YulBlock","src":"4576:51:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:8"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:8"},"nodeType":"YulFunctionCall","src":"4598:22:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:8"},"nodeType":"YulFunctionCall","src":"4586:35:8"},"nodeType":"YulExpressionStatement","src":"4586:35:8"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:8","type":""}],"src":"4515:112:8"},{"body":{"nodeType":"YulBlock","src":"4727:120:8","statements":[{"nodeType":"YulAssignment","src":"4737:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:8"},"nodeType":"YulFunctionCall","src":"4745:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:8"},"nodeType":"YulFunctionCall","src":"4822:17:8"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:8"},"nodeType":"YulFunctionCall","src":"4773:67:8"},"nodeType":"YulExpressionStatement","src":"4773:67:8"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:8","type":""}],"src":"4633:214:8"},{"body":{"nodeType":"YulBlock","src":"4919:263:8","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:8"},"nodeType":"YulFunctionCall","src":"4967:79:8"},"nodeType":"YulExpressionStatement","src":"4967:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:8"},"nodeType":"YulFunctionCall","src":"4936:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:8"},"nodeType":"YulFunctionCall","src":"4932:32:8"},"nodeType":"YulIf","src":"4929:119:8"},{"nodeType":"YulBlock","src":"5058:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:8","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:8"},"nodeType":"YulFunctionCall","src":"5133:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:8"},"nodeType":"YulFunctionCall","src":"5112:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:8"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:8","type":""}],"src":"4853:329:8"},{"body":{"nodeType":"YulBlock","src":"5254:263:8","statements":[{"body":{"nodeType":"YulBlock","src":"5300:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5302:77:8"},"nodeType":"YulFunctionCall","src":"5302:79:8"},"nodeType":"YulExpressionStatement","src":"5302:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5275:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"5284:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5271:3:8"},"nodeType":"YulFunctionCall","src":"5271:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"5296:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5267:3:8"},"nodeType":"YulFunctionCall","src":"5267:32:8"},"nodeType":"YulIf","src":"5264:119:8"},{"nodeType":"YulBlock","src":"5393:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5408:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5422:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5412:6:8","type":""}]},{"nodeType":"YulAssignment","src":"5437:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5472:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"5483:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5468:3:8"},"nodeType":"YulFunctionCall","src":"5468:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5492:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5447:20:8"},"nodeType":"YulFunctionCall","src":"5447:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5437:6:8"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5224:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5235:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5247:6:8","type":""}],"src":"5188:329:8"},{"body":{"nodeType":"YulBlock","src":"5588:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5605:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5628:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5610:17:8"},"nodeType":"YulFunctionCall","src":"5610:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5598:6:8"},"nodeType":"YulFunctionCall","src":"5598:37:8"},"nodeType":"YulExpressionStatement","src":"5598:37:8"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5576:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5583:3:8","type":""}],"src":"5523:118:8"},{"body":{"nodeType":"YulBlock","src":"5745:124:8","statements":[{"nodeType":"YulAssignment","src":"5755:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5767:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"5778:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5763:3:8"},"nodeType":"YulFunctionCall","src":"5763:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5755:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5835:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5848:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"5859:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5844:3:8"},"nodeType":"YulFunctionCall","src":"5844:17:8"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5791:43:8"},"nodeType":"YulFunctionCall","src":"5791:71:8"},"nodeType":"YulExpressionStatement","src":"5791:71:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5717:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5729:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5740:4:8","type":""}],"src":"5647:222:8"},{"body":{"nodeType":"YulBlock","src":"5958:391:8","statements":[{"body":{"nodeType":"YulBlock","src":"6004:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6006:77:8"},"nodeType":"YulFunctionCall","src":"6006:79:8"},"nodeType":"YulExpressionStatement","src":"6006:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5979:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"5988:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5975:3:8"},"nodeType":"YulFunctionCall","src":"5975:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"6000:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5971:3:8"},"nodeType":"YulFunctionCall","src":"5971:32:8"},"nodeType":"YulIf","src":"5968:119:8"},{"nodeType":"YulBlock","src":"6097:117:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6112:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"6126:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6116:6:8","type":""}]},{"nodeType":"YulAssignment","src":"6141:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6176:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"6187:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6172:3:8"},"nodeType":"YulFunctionCall","src":"6172:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6196:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6151:20:8"},"nodeType":"YulFunctionCall","src":"6151:53:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6141:6:8"}]}]},{"nodeType":"YulBlock","src":"6224:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6239:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"6253:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6243:6:8","type":""}]},{"nodeType":"YulAssignment","src":"6269:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6304:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"6315:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6300:3:8"},"nodeType":"YulFunctionCall","src":"6300:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6324:7:8"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6279:20:8"},"nodeType":"YulFunctionCall","src":"6279:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6269:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5920:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5931:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5943:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5951:6:8","type":""}],"src":"5875:474:8"},{"body":{"nodeType":"YulBlock","src":"6383:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6400:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6403:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6393:6:8"},"nodeType":"YulFunctionCall","src":"6393:88:8"},"nodeType":"YulExpressionStatement","src":"6393:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6497:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6500:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6490:6:8"},"nodeType":"YulFunctionCall","src":"6490:15:8"},"nodeType":"YulExpressionStatement","src":"6490:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6521:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6524:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6514:6:8"},"nodeType":"YulFunctionCall","src":"6514:15:8"},"nodeType":"YulExpressionStatement","src":"6514:15:8"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6355:180:8"},{"body":{"nodeType":"YulBlock","src":"6592:269:8","statements":[{"nodeType":"YulAssignment","src":"6602:22:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6616:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"6622:1:8","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6612:3:8"},"nodeType":"YulFunctionCall","src":"6612:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6602:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"6633:38:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6663:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"6669:1:8","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6659:3:8"},"nodeType":"YulFunctionCall","src":"6659:12:8"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6637:18:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"6710:51:8","statements":[{"nodeType":"YulAssignment","src":"6724:27:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6738:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6746:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6734:3:8"},"nodeType":"YulFunctionCall","src":"6734:17:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6724:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6690:18:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6683:6:8"},"nodeType":"YulFunctionCall","src":"6683:26:8"},"nodeType":"YulIf","src":"6680:81:8"},{"body":{"nodeType":"YulBlock","src":"6813:42:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6827:16:8"},"nodeType":"YulFunctionCall","src":"6827:18:8"},"nodeType":"YulExpressionStatement","src":"6827:18:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6777:18:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6800:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"6808:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6797:2:8"},"nodeType":"YulFunctionCall","src":"6797:14:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6774:2:8"},"nodeType":"YulFunctionCall","src":"6774:38:8"},"nodeType":"YulIf","src":"6771:84:8"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6576:4:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6585:6:8","type":""}],"src":"6541:320:8"},{"body":{"nodeType":"YulBlock","src":"6973:65:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6995:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"7003:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6991:3:8"},"nodeType":"YulFunctionCall","src":"6991:14:8"},{"hexValue":"596f7520617265206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"7007:23:8","type":"","value":"You are not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6984:6:8"},"nodeType":"YulFunctionCall","src":"6984:47:8"},"nodeType":"YulExpressionStatement","src":"6984:47:8"}]},"name":"store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6965:6:8","type":""}],"src":"6867:171:8"},{"body":{"nodeType":"YulBlock","src":"7190:220:8","statements":[{"nodeType":"YulAssignment","src":"7200:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7266:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"7271:2:8","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7207:58:8"},"nodeType":"YulFunctionCall","src":"7207:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7200:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7372:3:8"}],"functionName":{"name":"store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc","nodeType":"YulIdentifier","src":"7283:88:8"},"nodeType":"YulFunctionCall","src":"7283:93:8"},"nodeType":"YulExpressionStatement","src":"7283:93:8"},{"nodeType":"YulAssignment","src":"7385:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7396:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"7401:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7392:3:8"},"nodeType":"YulFunctionCall","src":"7392:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7385:3:8"}]}]},"name":"abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7178:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7186:3:8","type":""}],"src":"7044:366:8"},{"body":{"nodeType":"YulBlock","src":"7587:248:8","statements":[{"nodeType":"YulAssignment","src":"7597:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7609:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7620:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7605:3:8"},"nodeType":"YulFunctionCall","src":"7605:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7597:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7644:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"7655:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7640:3:8"},"nodeType":"YulFunctionCall","src":"7640:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7663:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"7669:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7659:3:8"},"nodeType":"YulFunctionCall","src":"7659:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7633:6:8"},"nodeType":"YulFunctionCall","src":"7633:47:8"},"nodeType":"YulExpressionStatement","src":"7633:47:8"},{"nodeType":"YulAssignment","src":"7689:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7823:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7697:124:8"},"nodeType":"YulFunctionCall","src":"7697:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7689:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7567:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7582:4:8","type":""}],"src":"7416:419:8"},{"body":{"nodeType":"YulBlock","src":"7869:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7886:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7889:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7879:6:8"},"nodeType":"YulFunctionCall","src":"7879:88:8"},"nodeType":"YulExpressionStatement","src":"7879:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7983:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7986:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7976:6:8"},"nodeType":"YulFunctionCall","src":"7976:15:8"},"nodeType":"YulExpressionStatement","src":"7976:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8007:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8010:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8000:6:8"},"nodeType":"YulFunctionCall","src":"8000:15:8"},"nodeType":"YulExpressionStatement","src":"8000:15:8"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7841:180:8"},{"body":{"nodeType":"YulBlock","src":"8075:362:8","statements":[{"nodeType":"YulAssignment","src":"8085:25:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8108:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8090:17:8"},"nodeType":"YulFunctionCall","src":"8090:20:8"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8085:1:8"}]},{"nodeType":"YulAssignment","src":"8119:25:8","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8142:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8124:17:8"},"nodeType":"YulFunctionCall","src":"8124:20:8"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8119:1:8"}]},{"nodeType":"YulVariableDeclaration","src":"8153:28:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8176:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"8179:1:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8172:3:8"},"nodeType":"YulFunctionCall","src":"8172:9:8"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"8157:11:8","type":""}]},{"nodeType":"YulAssignment","src":"8190:41:8","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"8219:11:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8201:17:8"},"nodeType":"YulFunctionCall","src":"8201:30:8"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"8190:7:8"}]},{"body":{"nodeType":"YulBlock","src":"8408:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8410:16:8"},"nodeType":"YulFunctionCall","src":"8410:18:8"},"nodeType":"YulExpressionStatement","src":"8410:18:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8341:1:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8334:6:8"},"nodeType":"YulFunctionCall","src":"8334:9:8"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8364:1:8"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"8371:7:8"},{"name":"x","nodeType":"YulIdentifier","src":"8380:1:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8367:3:8"},"nodeType":"YulFunctionCall","src":"8367:15:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8361:2:8"},"nodeType":"YulFunctionCall","src":"8361:22:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8314:2:8"},"nodeType":"YulFunctionCall","src":"8314:83:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8294:6:8"},"nodeType":"YulFunctionCall","src":"8294:113:8"},"nodeType":"YulIf","src":"8291:139:8"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8058:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"8061:1:8","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"8067:7:8","type":""}],"src":"8027:410:8"},{"body":{"nodeType":"YulBlock","src":"8487:147:8","statements":[{"nodeType":"YulAssignment","src":"8497:25:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8520:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8502:17:8"},"nodeType":"YulFunctionCall","src":"8502:20:8"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8497:1:8"}]},{"nodeType":"YulAssignment","src":"8531:25:8","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8554:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8536:17:8"},"nodeType":"YulFunctionCall","src":"8536:20:8"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8531:1:8"}]},{"nodeType":"YulAssignment","src":"8565:16:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8576:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"8579:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8572:3:8"},"nodeType":"YulFunctionCall","src":"8572:9:8"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"8565:3:8"}]},{"body":{"nodeType":"YulBlock","src":"8605:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8607:16:8"},"nodeType":"YulFunctionCall","src":"8607:18:8"},"nodeType":"YulExpressionStatement","src":"8607:18:8"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8597:1:8"},{"name":"sum","nodeType":"YulIdentifier","src":"8600:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8594:2:8"},"nodeType":"YulFunctionCall","src":"8594:10:8"},"nodeType":"YulIf","src":"8591:36:8"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8474:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"8477:1:8","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"8483:3:8","type":""}],"src":"8443:191:8"},{"body":{"nodeType":"YulBlock","src":"8746:70:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8768:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8776:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8764:3:8"},"nodeType":"YulFunctionCall","src":"8764:14:8"},{"hexValue":"496e73756666696369656e74206d61726b657420737570706c79","kind":"string","nodeType":"YulLiteral","src":"8780:28:8","type":"","value":"Insufficient market supply"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8757:6:8"},"nodeType":"YulFunctionCall","src":"8757:52:8"},"nodeType":"YulExpressionStatement","src":"8757:52:8"}]},"name":"store_literal_in_memory_3e1c438a92d9e4b8cbf66fa234a4bce1bd7c7f595e8c111db56feaca0e5b6cdf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8738:6:8","type":""}],"src":"8640:176:8"},{"body":{"nodeType":"YulBlock","src":"8968:220:8","statements":[{"nodeType":"YulAssignment","src":"8978:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9044:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"9049:2:8","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8985:58:8"},"nodeType":"YulFunctionCall","src":"8985:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8978:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9150:3:8"}],"functionName":{"name":"store_literal_in_memory_3e1c438a92d9e4b8cbf66fa234a4bce1bd7c7f595e8c111db56feaca0e5b6cdf","nodeType":"YulIdentifier","src":"9061:88:8"},"nodeType":"YulFunctionCall","src":"9061:93:8"},"nodeType":"YulExpressionStatement","src":"9061:93:8"},{"nodeType":"YulAssignment","src":"9163:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9174:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"9179:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9170:3:8"},"nodeType":"YulFunctionCall","src":"9170:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9163:3:8"}]}]},"name":"abi_encode_t_stringliteral_3e1c438a92d9e4b8cbf66fa234a4bce1bd7c7f595e8c111db56feaca0e5b6cdf_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8956:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8964:3:8","type":""}],"src":"8822:366:8"},{"body":{"nodeType":"YulBlock","src":"9365:248:8","statements":[{"nodeType":"YulAssignment","src":"9375:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9387:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9398:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9383:3:8"},"nodeType":"YulFunctionCall","src":"9383:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9375:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9422:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9433:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9418:3:8"},"nodeType":"YulFunctionCall","src":"9418:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9441:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"9447:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9437:3:8"},"nodeType":"YulFunctionCall","src":"9437:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9411:6:8"},"nodeType":"YulFunctionCall","src":"9411:47:8"},"nodeType":"YulExpressionStatement","src":"9411:47:8"},{"nodeType":"YulAssignment","src":"9467:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9601:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_3e1c438a92d9e4b8cbf66fa234a4bce1bd7c7f595e8c111db56feaca0e5b6cdf_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9475:124:8"},"nodeType":"YulFunctionCall","src":"9475:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9467:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e1c438a92d9e4b8cbf66fa234a4bce1bd7c7f595e8c111db56feaca0e5b6cdf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9345:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9360:4:8","type":""}],"src":"9194:419:8"},{"body":{"nodeType":"YulBlock","src":"9664:149:8","statements":[{"nodeType":"YulAssignment","src":"9674:25:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9697:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9679:17:8"},"nodeType":"YulFunctionCall","src":"9679:20:8"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"9674:1:8"}]},{"nodeType":"YulAssignment","src":"9708:25:8","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9731:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9713:17:8"},"nodeType":"YulFunctionCall","src":"9713:20:8"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"9708:1:8"}]},{"nodeType":"YulAssignment","src":"9742:17:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9754:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"9757:1:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9750:3:8"},"nodeType":"YulFunctionCall","src":"9750:9:8"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9742:4:8"}]},{"body":{"nodeType":"YulBlock","src":"9784:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9786:16:8"},"nodeType":"YulFunctionCall","src":"9786:18:8"},"nodeType":"YulExpressionStatement","src":"9786:18:8"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"9775:4:8"},{"name":"x","nodeType":"YulIdentifier","src":"9781:1:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9772:2:8"},"nodeType":"YulFunctionCall","src":"9772:11:8"},"nodeType":"YulIf","src":"9769:37:8"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9650:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"9653:1:8","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"9659:4:8","type":""}],"src":"9619:194:8"},{"body":{"nodeType":"YulBlock","src":"9925:73:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9947:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"9955:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9943:3:8"},"nodeType":"YulFunctionCall","src":"9943:14:8"},{"hexValue":"496e73756666696369656e742066756e6420696e2074686520706f6f6c","kind":"string","nodeType":"YulLiteral","src":"9959:31:8","type":"","value":"Insufficient fund in the pool"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9936:6:8"},"nodeType":"YulFunctionCall","src":"9936:55:8"},"nodeType":"YulExpressionStatement","src":"9936:55:8"}]},"name":"store_literal_in_memory_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9917:6:8","type":""}],"src":"9819:179:8"},{"body":{"nodeType":"YulBlock","src":"10150:220:8","statements":[{"nodeType":"YulAssignment","src":"10160:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10226:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"10231:2:8","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10167:58:8"},"nodeType":"YulFunctionCall","src":"10167:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10160:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10332:3:8"}],"functionName":{"name":"store_literal_in_memory_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899","nodeType":"YulIdentifier","src":"10243:88:8"},"nodeType":"YulFunctionCall","src":"10243:93:8"},"nodeType":"YulExpressionStatement","src":"10243:93:8"},{"nodeType":"YulAssignment","src":"10345:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10356:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"10361:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10352:3:8"},"nodeType":"YulFunctionCall","src":"10352:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10345:3:8"}]}]},"name":"abi_encode_t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10138:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10146:3:8","type":""}],"src":"10004:366:8"},{"body":{"nodeType":"YulBlock","src":"10547:248:8","statements":[{"nodeType":"YulAssignment","src":"10557:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10569:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10580:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10565:3:8"},"nodeType":"YulFunctionCall","src":"10565:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10557:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10604:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10615:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10600:3:8"},"nodeType":"YulFunctionCall","src":"10600:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10623:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"10629:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10619:3:8"},"nodeType":"YulFunctionCall","src":"10619:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10593:6:8"},"nodeType":"YulFunctionCall","src":"10593:47:8"},"nodeType":"YulExpressionStatement","src":"10593:47:8"},{"nodeType":"YulAssignment","src":"10649:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10783:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10657:124:8"},"nodeType":"YulFunctionCall","src":"10657:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10649:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10527:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10542:4:8","type":""}],"src":"10376:419:8"},{"body":{"nodeType":"YulBlock","src":"10955:288:8","statements":[{"nodeType":"YulAssignment","src":"10965:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10977:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10988:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10973:3:8"},"nodeType":"YulFunctionCall","src":"10973:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10965:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11045:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11058:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11069:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11054:3:8"},"nodeType":"YulFunctionCall","src":"11054:17:8"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11001:43:8"},"nodeType":"YulFunctionCall","src":"11001:71:8"},"nodeType":"YulExpressionStatement","src":"11001:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11126:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11139:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11150:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11135:3:8"},"nodeType":"YulFunctionCall","src":"11135:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11082:43:8"},"nodeType":"YulFunctionCall","src":"11082:72:8"},"nodeType":"YulExpressionStatement","src":"11082:72:8"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11208:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11221:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11232:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11217:3:8"},"nodeType":"YulFunctionCall","src":"11217:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11164:43:8"},"nodeType":"YulFunctionCall","src":"11164:72:8"},"nodeType":"YulExpressionStatement","src":"11164:72:8"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10911:9:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10923:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10931:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10939:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10950:4:8","type":""}],"src":"10801:442:8"},{"body":{"nodeType":"YulBlock","src":"11355:76:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11377:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"11385:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11373:3:8"},"nodeType":"YulFunctionCall","src":"11373:14:8"},{"hexValue":"496e73756666696369656e742062616c616e636520666f722070656e616c7479","kind":"string","nodeType":"YulLiteral","src":"11389:34:8","type":"","value":"Insufficient balance for penalty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11366:6:8"},"nodeType":"YulFunctionCall","src":"11366:58:8"},"nodeType":"YulExpressionStatement","src":"11366:58:8"}]},"name":"store_literal_in_memory_87c1d7407bdbf4847579356d623122ee7d0ba15f0b291eb7759a1a031129cc50","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11347:6:8","type":""}],"src":"11249:182:8"},{"body":{"nodeType":"YulBlock","src":"11583:220:8","statements":[{"nodeType":"YulAssignment","src":"11593:74:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11659:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"11664:2:8","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11600:58:8"},"nodeType":"YulFunctionCall","src":"11600:67:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11593:3:8"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11765:3:8"}],"functionName":{"name":"store_literal_in_memory_87c1d7407bdbf4847579356d623122ee7d0ba15f0b291eb7759a1a031129cc50","nodeType":"YulIdentifier","src":"11676:88:8"},"nodeType":"YulFunctionCall","src":"11676:93:8"},"nodeType":"YulExpressionStatement","src":"11676:93:8"},{"nodeType":"YulAssignment","src":"11778:19:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11789:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"11794:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11785:3:8"},"nodeType":"YulFunctionCall","src":"11785:12:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11778:3:8"}]}]},"name":"abi_encode_t_stringliteral_87c1d7407bdbf4847579356d623122ee7d0ba15f0b291eb7759a1a031129cc50_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11571:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11579:3:8","type":""}],"src":"11437:366:8"},{"body":{"nodeType":"YulBlock","src":"11980:248:8","statements":[{"nodeType":"YulAssignment","src":"11990:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12002:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"12013:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11998:3:8"},"nodeType":"YulFunctionCall","src":"11998:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11990:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12037:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"12048:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12033:3:8"},"nodeType":"YulFunctionCall","src":"12033:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12056:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"12062:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12052:3:8"},"nodeType":"YulFunctionCall","src":"12052:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12026:6:8"},"nodeType":"YulFunctionCall","src":"12026:47:8"},"nodeType":"YulExpressionStatement","src":"12026:47:8"},{"nodeType":"YulAssignment","src":"12082:139:8","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12216:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_87c1d7407bdbf4847579356d623122ee7d0ba15f0b291eb7759a1a031129cc50_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12090:124:8"},"nodeType":"YulFunctionCall","src":"12090:131:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12082:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_87c1d7407bdbf4847579356d623122ee7d0ba15f0b291eb7759a1a031129cc50__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11960:9:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11975:4:8","type":""}],"src":"11809:419:8"},{"body":{"nodeType":"YulBlock","src":"12360:206:8","statements":[{"nodeType":"YulAssignment","src":"12370:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12382:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"12393:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12378:3:8"},"nodeType":"YulFunctionCall","src":"12378:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12370:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12450:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12463:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"12474:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12459:3:8"},"nodeType":"YulFunctionCall","src":"12459:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12406:43:8"},"nodeType":"YulFunctionCall","src":"12406:71:8"},"nodeType":"YulExpressionStatement","src":"12406:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12531:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12544:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"12555:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12540:3:8"},"nodeType":"YulFunctionCall","src":"12540:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12487:43:8"},"nodeType":"YulFunctionCall","src":"12487:72:8"},"nodeType":"YulExpressionStatement","src":"12487:72:8"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12324:9:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12336:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12344:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12355:4:8","type":""}],"src":"12234:332:8"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_3e1c438a92d9e4b8cbf66fa234a4bce1bd7c7f595e8c111db56feaca0e5b6cdf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient market supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e1c438a92d9e4b8cbf66fa234a4bce1bd7c7f595e8c111db56feaca0e5b6cdf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_3e1c438a92d9e4b8cbf66fa234a4bce1bd7c7f595e8c111db56feaca0e5b6cdf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e1c438a92d9e4b8cbf66fa234a4bce1bd7c7f595e8c111db56feaca0e5b6cdf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e1c438a92d9e4b8cbf66fa234a4bce1bd7c7f595e8c111db56feaca0e5b6cdf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient fund in the pool\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d491efcd27ebd425e314273928744717d2aaa449436c68f8717198d513be899_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_87c1d7407bdbf4847579356d623122ee7d0ba15f0b291eb7759a1a031129cc50(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance for penalty\")\n\n    }\n\n    function abi_encode_t_stringliteral_87c1d7407bdbf4847579356d623122ee7d0ba15f0b291eb7759a1a031129cc50_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_87c1d7407bdbf4847579356d623122ee7d0ba15f0b291eb7759a1a031129cc50(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_87c1d7407bdbf4847579356d623122ee7d0ba15f0b291eb7759a1a031129cc50__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_87c1d7407bdbf4847579356d623122ee7d0ba15f0b291eb7759a1a031129cc50_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"738":[{"length":32,"start":1082}],"896":[{"length":32,"start":1192},{"length":32,"start":1730},{"length":32,"start":1773},{"length":32,"start":1950},{"length":32,"start":2211},{"length":32,"start":2928}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101005760003560e01c80637fe1f74011610097578063b2bdfa7b11610066578063b2bdfa7b146102b1578063bafb8e83146102cf578063dd62ed3e146102ed578063f0e6ea8d1461031d57610100565b80637fe1f7401461022b57806395d89b4114610247578063a9059cbb14610265578063af521c8f1461029557610100565b806323b872dd116100d357806323b872dd1461018f578063313ce567146101bf578063355274ea146101dd57806370a08231146101fb57610100565b8063044d1d4c1461010557806306fdde0314610123578063095ea7b31461014157806318160ddd14610171575b600080fd5b61010d610339565b60405161011a91906110bb565b60405180910390f35b61012b61033f565b6040516101389190611166565b60405180910390f35b61015b60048036038101906101569190611217565b6103d1565b6040516101689190611272565b60405180910390f35b6101796103f4565b60405161018691906110bb565b60405180910390f35b6101a960048036038101906101a4919061128d565b6103fe565b6040516101b69190611272565b60405180910390f35b6101c761042d565b6040516101d491906112fc565b60405180910390f35b6101e5610436565b6040516101f291906110bb565b60405180910390f35b61021560048036038101906102109190611317565b61045e565b60405161022291906110bb565b60405180910390f35b61024560048036038101906102409190611344565b6104a6565b005b61024f610570565b60405161025c9190611166565b60405180910390f35b61027f600480360381019061027a9190611217565b610602565b60405161028c9190611272565b60405180910390f35b6102af60048036038101906102aa9190611217565b61068d565b005b6102b96106eb565b6040516102c69190611380565b60405180910390f35b6102d761070f565b6040516102e491906110bb565b60405180910390f35b6103076004803603810190610302919061139b565b610715565b60405161031491906110bb565b60405180910390f35b6103376004803603810190610332919061128d565b61079c565b005b60065481565b60606003805461034e9061140a565b80601f016020809104026020016040519081016040528092919081815260200182805461037a9061140a565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6000806103dc6108d8565b90506103e98185856108e0565b600191505092915050565b6000600254905090565b6000806104096108d8565b90506104168582856108f2565b610421858585610986565b60019150509392505050565b60006012905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610534576040517f62355e7800000000000000000000000000000000000000000000000000000000815260040161052b90611487565b60405180910390fd5b670de0b6b3a76400008161054891906114d6565b9050806006600082825461055c9190611518565b9250508190555061056d3382610a7a565b50565b60606004805461057f9061140a565b80601f01602080910402602001604051908101604052809291908181526020018280546105ab9061140a565b80156105f85780601f106105cd576101008083540402835291602001916105f8565b820191906000526020600020905b8154815290600101906020018083116105db57829003601f168201915b5050505050905090565b6000670de0b6b3a76400008261061891906114d6565b915060055482111561065f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065690611598565b60405180910390fd5b816005600082825461067191906115b8565b925050819055506106828383610afc565b506001905092915050565b670de0b6b3a7640000816106a191906114d6565b905080600660008282546106b59190611518565b925050819055506106e7827f000000000000000000000000000000000000000000000000000000000000000083610986565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461082a576040517f62355e7800000000000000000000000000000000000000000000000000000000815260040161082190611487565b60405180910390fd5b60065481111561086f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086690611638565b60405180910390fd5b670de0b6b3a76400008161088391906114d6565b9050806006600082825461089791906115b8565b925050819055506108c97f00000000000000000000000000000000000000000000000000000000000000008483610986565b6108d38282610b1f565b505050565b600033905090565b6108ed8383836001610c00565b505050565b60006108fe8484610715565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109805781811015610970578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161096793929190611658565b60405180910390fd5b61097f84848484036000610c00565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109f85760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109ef9190611380565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a6a5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a619190611380565b60405180910390fd5b610a75838383610dd7565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aec5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ae39190611380565b60405180910390fd5b610af860008383610dd7565b5050565b600080610b076108d8565b9050610b14818585610986565b600191505092915050565b80610b298361045e565b1015610b6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b61906116db565b60405180910390fd5b610b95827f000000000000000000000000000000000000000000000000000000000000000083610986565b8060066000828254610ba79190611518565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f322e5021ddf51920f7602154a6c845b34ef1b32704a1fa2c66927b56be28076282604051610bf491906110bb565b60405180910390a25050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c725760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c699190611380565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ce45760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610cdb9190611380565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610dd1578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610dc891906110bb565b60405180910390a35b50505050565b610de2838383610e7d565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e78576000610e20610436565b90506000610e2c6103f4565b905081811115610e755780826040517f9e79f854000000000000000000000000000000000000000000000000000000008152600401610e6c9291906116fb565b60405180910390fd5b50505b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ecf578060026000828254610ec39190611518565b92505081905550610fa2565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610f5b578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f5293929190611658565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610feb5780600260008282540392505081905550611038565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161109591906110bb565b60405180910390a3505050565b6000819050919050565b6110b5816110a2565b82525050565b60006020820190506110d060008301846110ac565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111105780820151818401526020810190506110f5565b60008484015250505050565b6000601f19601f8301169050919050565b6000611138826110d6565b61114281856110e1565b93506111528185602086016110f2565b61115b8161111c565b840191505092915050565b60006020820190508181036000830152611180818461112d565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111b88261118d565b9050919050565b6111c8816111ad565b81146111d357600080fd5b50565b6000813590506111e5816111bf565b92915050565b6111f4816110a2565b81146111ff57600080fd5b50565b600081359050611211816111eb565b92915050565b6000806040838503121561122e5761122d611188565b5b600061123c858286016111d6565b925050602061124d85828601611202565b9150509250929050565b60008115159050919050565b61126c81611257565b82525050565b60006020820190506112876000830184611263565b92915050565b6000806000606084860312156112a6576112a5611188565b5b60006112b4868287016111d6565b93505060206112c5868287016111d6565b92505060406112d686828701611202565b9150509250925092565b600060ff82169050919050565b6112f6816112e0565b82525050565b600060208201905061131160008301846112ed565b92915050565b60006020828403121561132d5761132c611188565b5b600061133b848285016111d6565b91505092915050565b60006020828403121561135a57611359611188565b5b600061136884828501611202565b91505092915050565b61137a816111ad565b82525050565b60006020820190506113956000830184611371565b92915050565b600080604083850312156113b2576113b1611188565b5b60006113c0858286016111d6565b92505060206113d1858286016111d6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061142257607f821691505b602082108103611435576114346113db565b5b50919050565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b60006114716015836110e1565b915061147c8261143b565b602082019050919050565b600060208201905081810360008301526114a081611464565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114e1826110a2565b91506114ec836110a2565b92508282026114fa816110a2565b91508282048414831517611511576115106114a7565b5b5092915050565b6000611523826110a2565b915061152e836110a2565b9250828201905080821115611546576115456114a7565b5b92915050565b7f496e73756666696369656e74206d61726b657420737570706c79000000000000600082015250565b6000611582601a836110e1565b915061158d8261154c565b602082019050919050565b600060208201905081810360008301526115b181611575565b9050919050565b60006115c3826110a2565b91506115ce836110a2565b92508282039050818111156115e6576115e56114a7565b5b92915050565b7f496e73756666696369656e742066756e6420696e2074686520706f6f6c000000600082015250565b6000611622601d836110e1565b915061162d826115ec565b602082019050919050565b6000602082019050818103600083015261165181611615565b9050919050565b600060608201905061166d6000830186611371565b61167a60208301856110ac565b61168760408301846110ac565b949350505050565b7f496e73756666696369656e742062616c616e636520666f722070656e616c7479600082015250565b60006116c56020836110e1565b91506116d08261168f565b602082019050919050565b600060208201905081810360008301526116f4816116b8565b9050919050565b600060408201905061171060008301856110ac565b61171d60208301846110ac565b939250505056fea2646970667358221220849fa4af0dfa9dc5b991f2b812c8bbc91a6e62b38317ef6d9ffe34ca34bffc2664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FE1F740 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB2BDFA7B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xBAFB8E83 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xF0E6EA8D EQ PUSH2 0x31D JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x7FE1F740 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xAF521C8F EQ PUSH2 0x295 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FB JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x44D1D4C EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1217 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x128D JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x12FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x4A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24F PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1217 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x1217 JUMP JUMPDEST PUSH2 0x68D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B9 PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH2 0x70F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x139B JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x337 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x128D JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0x140A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37A SWAP1 PUSH2 0x140A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3DC PUSH2 0x8D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E9 DUP2 DUP6 DUP6 PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x409 PUSH2 0x8D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x416 DUP6 DUP3 DUP6 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x421 DUP6 DUP6 DUP6 PUSH2 0x986 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x534 JUMPI PUSH1 0x40 MLOAD PUSH32 0x62355E7800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52B SWAP1 PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x14D6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x1518 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x56D CALLER DUP3 PUSH2 0xA7A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x57F SWAP1 PUSH2 0x140A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5AB SWAP1 PUSH2 0x140A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x618 SWAP2 SWAP1 PUSH2 0x14D6 JUMP JUMPDEST SWAP2 POP PUSH1 0x5 SLOAD DUP3 GT ISZERO PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x656 SWAP1 PUSH2 0x1598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x671 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x682 DUP4 DUP4 PUSH2 0xAFC JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x6A1 SWAP2 SWAP1 PUSH2 0x14D6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6B5 SWAP2 SWAP1 PUSH2 0x1518 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6E7 DUP3 PUSH32 0x0 DUP4 PUSH2 0x986 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH32 0x62355E7800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x821 SWAP1 PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP2 GT ISZERO PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x866 SWAP1 PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x14D6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x897 SWAP2 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8C9 PUSH32 0x0 DUP5 DUP4 PUSH2 0x986 JUMP JUMPDEST PUSH2 0x8D3 DUP3 DUP3 PUSH2 0xB1F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8ED DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FE DUP5 DUP5 PUSH2 0x715 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x980 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x970 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x967 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x97F DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xC00 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EF SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA6A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA61 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA75 DUP4 DUP4 DUP4 PUSH2 0xDD7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAEC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE3 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF8 PUSH1 0x0 DUP4 DUP4 PUSH2 0xDD7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB07 PUSH2 0x8D8 JUMP JUMPDEST SWAP1 POP PUSH2 0xB14 DUP2 DUP6 DUP6 PUSH2 0x986 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0xB29 DUP4 PUSH2 0x45E JUMP JUMPDEST LT ISZERO PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB61 SWAP1 PUSH2 0x16DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB95 DUP3 PUSH32 0x0 DUP4 PUSH2 0x986 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBA7 SWAP2 SWAP1 PUSH2 0x1518 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x322E5021DDF51920F7602154A6C845B34EF1B32704A1FA2C66927B56BE280762 DUP3 PUSH1 0x40 MLOAD PUSH2 0xBF4 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC72 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC69 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCE4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDB SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDD1 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDC8 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xDE2 DUP4 DUP4 DUP4 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE78 JUMPI PUSH1 0x0 PUSH2 0xE20 PUSH2 0x436 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE2C PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xE75 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6C SWAP3 SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xECF JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEC3 SWAP2 SWAP1 PUSH2 0x1518 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF5B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF52 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFEB JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1038 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1095 SWAP2 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B5 DUP2 PUSH2 0x10A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1110 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1138 DUP3 PUSH2 0x10D6 JUMP JUMPDEST PUSH2 0x1142 DUP2 DUP6 PUSH2 0x10E1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1152 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0x115B DUP2 PUSH2 0x111C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1180 DUP2 DUP5 PUSH2 0x112D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B8 DUP3 PUSH2 0x118D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C8 DUP2 PUSH2 0x11AD JUMP JUMPDEST DUP2 EQ PUSH2 0x11D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11E5 DUP2 PUSH2 0x11BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11F4 DUP2 PUSH2 0x10A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x11FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1211 DUP2 PUSH2 0x11EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x122E JUMPI PUSH2 0x122D PUSH2 0x1188 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x123C DUP6 DUP3 DUP7 ADD PUSH2 0x11D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x124D DUP6 DUP3 DUP7 ADD PUSH2 0x1202 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x126C DUP2 PUSH2 0x1257 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1287 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1263 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12A6 JUMPI PUSH2 0x12A5 PUSH2 0x1188 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12B4 DUP7 DUP3 DUP8 ADD PUSH2 0x11D6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12C5 DUP7 DUP3 DUP8 ADD PUSH2 0x11D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x12D6 DUP7 DUP3 DUP8 ADD PUSH2 0x1202 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12F6 DUP2 PUSH2 0x12E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1311 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132D JUMPI PUSH2 0x132C PUSH2 0x1188 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x133B DUP5 DUP3 DUP6 ADD PUSH2 0x11D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x135A JUMPI PUSH2 0x1359 PUSH2 0x1188 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1368 DUP5 DUP3 DUP6 ADD PUSH2 0x1202 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x137A DUP2 PUSH2 0x11AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1395 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1371 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B2 JUMPI PUSH2 0x13B1 PUSH2 0x1188 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C0 DUP6 DUP3 DUP7 ADD PUSH2 0x11D6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13D1 DUP6 DUP3 DUP7 ADD PUSH2 0x11D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1422 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1435 JUMPI PUSH2 0x1434 PUSH2 0x13DB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1471 PUSH1 0x15 DUP4 PUSH2 0x10E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x147C DUP3 PUSH2 0x143B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14A0 DUP2 PUSH2 0x1464 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14E1 DUP3 PUSH2 0x10A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x14EC DUP4 PUSH2 0x10A2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x14FA DUP2 PUSH2 0x10A2 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1523 DUP3 PUSH2 0x10A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x152E DUP4 PUSH2 0x10A2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1546 JUMPI PUSH2 0x1545 PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206D61726B657420737570706C79000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1582 PUSH1 0x1A DUP4 PUSH2 0x10E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x158D DUP3 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15B1 DUP2 PUSH2 0x1575 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C3 DUP3 PUSH2 0x10A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x15CE DUP4 PUSH2 0x10A2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x15E6 JUMPI PUSH2 0x15E5 PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E6420696E2074686520706F6F6C000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1622 PUSH1 0x1D DUP4 PUSH2 0x10E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x162D DUP3 PUSH2 0x15EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1651 DUP2 PUSH2 0x1615 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x166D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x167A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10AC JUMP JUMPDEST PUSH2 0x1687 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10AC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520666F722070656E616C7479 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C5 PUSH1 0x20 DUP4 PUSH2 0x10E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x16D0 DUP3 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16F4 DUP2 PUSH2 0x16B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1710 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x10AC JUMP JUMPDEST PUSH2 0x171D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10AC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 SWAP16 LOG4 0xAF 0xD STATICCALL SWAP14 0xC5 0xB9 SWAP2 CALLCODE 0xB8 SLT 0xC8 0xBB 0xC9 BYTE PUSH15 0x62B38317EF6D9FFE34CA34BFFC2664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"247:2438:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;361:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;923:81:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2492:191:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2276:93:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1172:298:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2295:191;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;290:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;328:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1552:411:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;361:39;;;;:::o;2074:89:1:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;923:81:3:-;967:7;993:4;986:11;;923:81;:::o;3299:116:1:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2492:191:6:-;549:6;535:20;;:10;:20;;;531:91;;578:33;;;;;;;;;;:::i;:::-;;;;;;;;531:91;2593:4:::1;2584:6;:13;;;;:::i;:::-;2575:22;;2635:6;2607:24;;:34;;;;;;;:::i;:::-;;;;;;;;2651:25;2657:10;2669:6;2651:5;:25::i;:::-;2492:191:::0;:::o;2276:93:1:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;1172:298:6:-;1265:4;1299;1290:6;:13;;;;:::i;:::-;1281:22;;1331:12;;1321:6;:22;;1313:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1400:6;1384:12;;:22;;;;;;;:::i;:::-;;;;;;;;1416:26;1431:2;1435:6;1416:14;:26::i;:::-;;1459:4;1452:11;;1172:298;;;;:::o;2295:191::-;2388:4;2379:6;:13;;;;:::i;:::-;2370:22;;2430:6;2402:24;;:34;;;;;;;:::i;:::-;;;;;;;;2446:33;2456:6;2464;2472;2446:9;:33::i;:::-;2295:191;;:::o;290:31::-;;;:::o;328:27::-;;;;:::o;3846:140:1:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;1552:411:6:-;549:6;535:20;;:10;:20;;;531:91;;578:33;;;;;;;;;;:::i;:::-;;;;;;;;531:91;1715:24:::1;;1705:6;:34;;1684:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;1822:4;1813:6;:13;;;;:::i;:::-;1804:22;;1864:6;1836:24;;:34;;;;;;;:::i;:::-;;;;;;;;1880:33;1890:6;1898;1906;1880:9;:33::i;:::-;1924:29;1938:6;1946;1924:13;:29::i;:::-;1552:411:::0;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:1:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;1969:320:6:-;2087:6;2065:18;2075:7;2065:9;:18::i;:::-;:28;;2044:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;2161:34;2171:7;2180:6;2188;2161:9;:34::i;:::-;2233:6;2205:24;;:34;;;;;;;:::i;:::-;;;;;;;;2263:7;2255:24;;;2272:6;2255:24;;;;;;:::i;:::-;;;;;;;;1969:320;;:::o;9949:432:1:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;1059:371:3:-;1153:30;1167:4;1173:2;1177:5;1153:13;:30::i;:::-;1214:1;1198:18;;:4;:18;;;1194:230;;1232:17;1252:5;:3;:5::i;:::-;1232:25;;1271:14;1288:13;:11;:13::i;:::-;1271:30;;1328:9;1319:6;:18;1315:99;;;1381:6;1389:9;1364:35;;;;;;;;;;;;:::i;:::-;;;;;;;;1315:99;1218:206;;1194:230;1059:371;;;:::o;6271:1107:1:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:77:8:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:246::-;803:1;813:113;827:6;824:1;821:13;813:113;;;912:1;907:3;903:11;897:18;893:1;888:3;884:11;877:39;849:2;846:1;842:10;837:15;;813:113;;;960:1;951:6;946:3;942:16;935:27;784:184;722:246;;;:::o;974:102::-;1015:6;1066:2;1062:7;1057:2;1050:5;1046:14;1042:28;1032:38;;974:102;;;:::o;1082:377::-;1170:3;1198:39;1231:5;1198:39;:::i;:::-;1253:71;1317:6;1312:3;1253:71;:::i;:::-;1246:78;;1333:65;1391:6;1386:3;1379:4;1372:5;1368:16;1333:65;:::i;:::-;1423:29;1445:6;1423:29;:::i;:::-;1418:3;1414:39;1407:46;;1174:285;1082:377;;;;:::o;1465:313::-;1578:4;1616:2;1605:9;1601:18;1593:26;;1665:9;1659:4;1655:20;1651:1;1640:9;1636:17;1629:47;1693:78;1766:4;1757:6;1693:78;:::i;:::-;1685:86;;1465:313;;;;:::o;1865:117::-;1974:1;1971;1964:12;2111:126;2148:7;2188:42;2181:5;2177:54;2166:65;;2111:126;;;:::o;2243:96::-;2280:7;2309:24;2327:5;2309:24;:::i;:::-;2298:35;;2243:96;;;:::o;2345:122::-;2418:24;2436:5;2418:24;:::i;:::-;2411:5;2408:35;2398:63;;2457:1;2454;2447:12;2398:63;2345:122;:::o;2473:139::-;2519:5;2557:6;2544:20;2535:29;;2573:33;2600:5;2573:33;:::i;:::-;2473:139;;;;:::o;2618:122::-;2691:24;2709:5;2691:24;:::i;:::-;2684:5;2681:35;2671:63;;2730:1;2727;2720:12;2671:63;2618:122;:::o;2746:139::-;2792:5;2830:6;2817:20;2808:29;;2846:33;2873:5;2846:33;:::i;:::-;2746:139;;;;:::o;2891:474::-;2959:6;2967;3016:2;3004:9;2995:7;2991:23;2987:32;2984:119;;;3022:79;;:::i;:::-;2984:119;3142:1;3167:53;3212:7;3203:6;3192:9;3188:22;3167:53;:::i;:::-;3157:63;;3113:117;3269:2;3295:53;3340:7;3331:6;3320:9;3316:22;3295:53;:::i;:::-;3285:63;;3240:118;2891:474;;;;;:::o;3371:90::-;3405:7;3448:5;3441:13;3434:21;3423:32;;3371:90;;;:::o;3467:109::-;3548:21;3563:5;3548:21;:::i;:::-;3543:3;3536:34;3467:109;;:::o;3582:210::-;3669:4;3707:2;3696:9;3692:18;3684:26;;3720:65;3782:1;3771:9;3767:17;3758:6;3720:65;:::i;:::-;3582:210;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:118::-;5610:24;5628:5;5610:24;:::i;:::-;5605:3;5598:37;5523:118;;:::o;5647:222::-;5740:4;5778:2;5767:9;5763:18;5755:26;;5791:71;5859:1;5848:9;5844:17;5835:6;5791:71;:::i;:::-;5647:222;;;;:::o;5875:474::-;5943:6;5951;6000:2;5988:9;5979:7;5975:23;5971:32;5968:119;;;6006:79;;:::i;:::-;5968:119;6126:1;6151:53;6196:7;6187:6;6176:9;6172:22;6151:53;:::i;:::-;6141:63;;6097:117;6253:2;6279:53;6324:7;6315:6;6304:9;6300:22;6279:53;:::i;:::-;6269:63;;6224:118;5875:474;;;;;:::o;6355:180::-;6403:77;6400:1;6393:88;6500:4;6497:1;6490:15;6524:4;6521:1;6514:15;6541:320;6585:6;6622:1;6616:4;6612:12;6602:22;;6669:1;6663:4;6659:12;6690:18;6680:81;;6746:4;6738:6;6734:17;6724:27;;6680:81;6808:2;6800:6;6797:14;6777:18;6774:38;6771:84;;6827:18;;:::i;:::-;6771:84;6592:269;6541:320;;;:::o;6867:171::-;7007:23;7003:1;6995:6;6991:14;6984:47;6867:171;:::o;7044:366::-;7186:3;7207:67;7271:2;7266:3;7207:67;:::i;:::-;7200:74;;7283:93;7372:3;7283:93;:::i;:::-;7401:2;7396:3;7392:12;7385:19;;7044:366;;;:::o;7416:419::-;7582:4;7620:2;7609:9;7605:18;7597:26;;7669:9;7663:4;7659:20;7655:1;7644:9;7640:17;7633:47;7697:131;7823:4;7697:131;:::i;:::-;7689:139;;7416:419;;;:::o;7841:180::-;7889:77;7886:1;7879:88;7986:4;7983:1;7976:15;8010:4;8007:1;8000:15;8027:410;8067:7;8090:20;8108:1;8090:20;:::i;:::-;8085:25;;8124:20;8142:1;8124:20;:::i;:::-;8119:25;;8179:1;8176;8172:9;8201:30;8219:11;8201:30;:::i;:::-;8190:41;;8380:1;8371:7;8367:15;8364:1;8361:22;8341:1;8334:9;8314:83;8291:139;;8410:18;;:::i;:::-;8291:139;8075:362;8027:410;;;;:::o;8443:191::-;8483:3;8502:20;8520:1;8502:20;:::i;:::-;8497:25;;8536:20;8554:1;8536:20;:::i;:::-;8531:25;;8579:1;8576;8572:9;8565:16;;8600:3;8597:1;8594:10;8591:36;;;8607:18;;:::i;:::-;8591:36;8443:191;;;;:::o;8640:176::-;8780:28;8776:1;8768:6;8764:14;8757:52;8640:176;:::o;8822:366::-;8964:3;8985:67;9049:2;9044:3;8985:67;:::i;:::-;8978:74;;9061:93;9150:3;9061:93;:::i;:::-;9179:2;9174:3;9170:12;9163:19;;8822:366;;;:::o;9194:419::-;9360:4;9398:2;9387:9;9383:18;9375:26;;9447:9;9441:4;9437:20;9433:1;9422:9;9418:17;9411:47;9475:131;9601:4;9475:131;:::i;:::-;9467:139;;9194:419;;;:::o;9619:194::-;9659:4;9679:20;9697:1;9679:20;:::i;:::-;9674:25;;9713:20;9731:1;9713:20;:::i;:::-;9708:25;;9757:1;9754;9750:9;9742:17;;9781:1;9775:4;9772:11;9769:37;;;9786:18;;:::i;:::-;9769:37;9619:194;;;;:::o;9819:179::-;9959:31;9955:1;9947:6;9943:14;9936:55;9819:179;:::o;10004:366::-;10146:3;10167:67;10231:2;10226:3;10167:67;:::i;:::-;10160:74;;10243:93;10332:3;10243:93;:::i;:::-;10361:2;10356:3;10352:12;10345:19;;10004:366;;;:::o;10376:419::-;10542:4;10580:2;10569:9;10565:18;10557:26;;10629:9;10623:4;10619:20;10615:1;10604:9;10600:17;10593:47;10657:131;10783:4;10657:131;:::i;:::-;10649:139;;10376:419;;;:::o;10801:442::-;10950:4;10988:2;10977:9;10973:18;10965:26;;11001:71;11069:1;11058:9;11054:17;11045:6;11001:71;:::i;:::-;11082:72;11150:2;11139:9;11135:18;11126:6;11082:72;:::i;:::-;11164;11232:2;11221:9;11217:18;11208:6;11164:72;:::i;:::-;10801:442;;;;;;:::o;11249:182::-;11389:34;11385:1;11377:6;11373:14;11366:58;11249:182;:::o;11437:366::-;11579:3;11600:67;11664:2;11659:3;11600:67;:::i;:::-;11593:74;;11676:93;11765:3;11676:93;:::i;:::-;11794:2;11789:3;11785:12;11778:19;;11437:366;;;:::o;11809:419::-;11975:4;12013:2;12002:9;11998:18;11990:26;;12062:9;12056:4;12052:20;12048:1;12037:9;12033:17;12026:47;12090:131;12216:4;12090:131;:::i;:::-;12082:139;;11809:419;;;:::o;12234:332::-;12355:4;12393:2;12382:9;12378:18;12370:26;;12406:71;12474:1;12463:9;12459:17;12450:6;12406:71;:::i;:::-;12487:72;12555:2;12544:9;12540:18;12531:6;12487:72;:::i;:::-;12234:332;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1195600","executionCost":"infinite","totalCost":"infinite"},"external":{"_owner()":"infinite","addToReversePool(address,uint256)":"infinite","allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2930","cap()":"infinite","decimals()":"388","marketSupply()":"2473","mintToReverseTransactionPool(uint256)":"infinite","name()":"infinite","reverseTransactionSupply()":"2453","reverseTransfer(address,address,uint256)":"infinite","symbol()":"infinite","totalSupply()":"2527","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"penalizeFraud(address,uint256)":"infinite"}},"methodIdentifiers":{"_owner()":"b2bdfa7b","addToReversePool(address,uint256)":"af521c8f","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","cap()":"355274ea","decimals()":"313ce567","marketSupply()":"bafb8e83","mintToReverseTransactionPool(uint256)":"7fe1f740","name()":"06fdde03","reverseTransactionSupply()":"044d1d4c","reverseTransfer(address,address,uint256)":"f0e6ea8d","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"max_supply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20InvalidCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"notOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"scammer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"penaltyAmount\",\"type\":\"uint256\"}],\"name\":\"Penalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addToReversePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintToReverseTransactionPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reverseTransactionSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"victim\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"reverseTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20ExceededCap(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidCap(uint256)\":[{\"details\":\"The supplied cap is not a valid cap.\"}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FoterreToken.sol\":\"FoterreToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Capped.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC20} from \\\"../ERC20.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\\n */\\nabstract contract ERC20Capped is ERC20 {\\n    uint256 private immutable _cap;\\n\\n    /**\\n     * @dev Total supply cap has been exceeded.\\n     */\\n    error ERC20ExceededCap(uint256 increasedSupply, uint256 cap);\\n\\n    /**\\n     * @dev The supplied cap is not a valid cap.\\n     */\\n    error ERC20InvalidCap(uint256 cap);\\n\\n    /**\\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\\n     * set once during construction.\\n     */\\n    constructor(uint256 cap_) {\\n        if (cap_ == 0) {\\n            revert ERC20InvalidCap(0);\\n        }\\n        _cap = cap_;\\n    }\\n\\n    /**\\n     * @dev Returns the cap on the token's total supply.\\n     */\\n    function cap() public view virtual returns (uint256) {\\n        return _cap;\\n    }\\n\\n    /**\\n     * @dev See {ERC20-_update}.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual override {\\n        super._update(from, to, value);\\n\\n        if (from == address(0)) {\\n            uint256 maxSupply = cap();\\n            uint256 supply = totalSupply();\\n            if (supply > maxSupply) {\\n                revert ERC20ExceededCap(supply, maxSupply);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9a961321311c070327b31fba89d821346225a411f946c9e84b330afdfdbb1d60\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/FoterreToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\\\";\\n\\n//Error Handling Section\\nerror notOwner(string message);\\n\\ncontract FoterreToken is ERC20Capped {\\n    address public immutable _owner;\\n\\n    uint256 public marketSupply;\\n    uint256 public reverseTransactionSupply;\\n\\n    event Penalty(address indexed scammer, uint256 penaltyAmount);\\n\\n    //Modifier Section\\n    modifier ownerAccess() {\\n        if (msg.sender != _owner) {\\n            revert notOwner(\\\"You are not the owner\\\");\\n        }\\n        _;\\n    }\\n\\n    constructor(\\n        uint256 max_supply\\n    ) ERC20(\\\"Foterre\\\", \\\"FOTE\\\") ERC20Capped(max_supply * 1e18) {\\n        _owner = msg.sender;\\n        uint256 initialTokenSupply = 120000000000 * 1e18; //50% of total supply\\n        uint256 initial_reversePool = 30000000000 * 1e18;\\n\\n        marketSupply = initialTokenSupply;\\n        reverseTransactionSupply = initial_reversePool;\\n\\n        _mint(_owner, initialTokenSupply);\\n        _mint(_owner, initial_reversePool);\\n    }\\n\\n    //Override transfer for having different supply pool\\n    function transfer(\\n        address to,\\n        uint256 amount\\n    ) public override returns (bool) {\\n        amount = amount * 1e18;\\n        require(amount <= marketSupply, \\\"Insufficient market supply\\\");\\n        marketSupply -= amount;\\n        super.transfer(to, amount);\\n        return true;\\n    }\\n\\n    //Owner called this function to send fund from reverse transaction pool\\n    function reverseTransfer(\\n        address victim,\\n        address target,\\n        uint256 amount\\n    ) public ownerAccess {\\n        require(\\n            amount <= reverseTransactionSupply,\\n            \\\"Insufficient fund in the pool\\\"\\n        );\\n        amount = amount * 1e18;\\n        reverseTransactionSupply -= amount;\\n        _transfer(_owner, victim, amount);\\n\\n        penalizeFraud(target, amount); //\\n    }\\n\\n    function penalizeFraud(address scammer, uint256 amount) internal {\\n        require(\\n            balanceOf(scammer) >= amount,\\n            \\\"Insufficient balance for penalty\\\"\\n        );\\n        _transfer(scammer, _owner, amount);\\n        reverseTransactionSupply += amount;\\n\\n        emit Penalty(scammer, amount); //\\n    }\\n\\n    function addToReversePool(address sender, uint256 amount) public {\\n        amount = amount * 1e18;\\n        reverseTransactionSupply += amount;\\n        _transfer(sender, _owner, amount);\\n    }\\n\\n    function mintToReverseTransactionPool(uint256 amount) public ownerAccess {\\n        amount = amount * 1e18;\\n        reverseTransactionSupply += amount;\\n        _mint(msg.sender, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xcce75504dcc0691be6171903b3f37f98a131deca6fe9e37eff6ffd9469286eec\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":159,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":165,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":167,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":169,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":171,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":898,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"marketSupply","offset":0,"slot":"5","type":"t_uint256"},{"astId":900,"contract":"contracts/FoterreToken.sol:FoterreToken","label":"reverseTransactionSupply","offset":0,"slot":"6","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Transaction.sol":{"Transaction":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"message","type":"string"},{"indexed":false,"internalType":"uint256","name":"datetime","type":"uint256"},{"indexed":false,"internalType":"string","name":"keyword","type":"string"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"message","type":"string"},{"internalType":"string","name":"keyword","type":"string"}],"name":"deployToBlockchain","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllTransactions","outputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"message","type":"string"},{"internalType":"uint256","name":"datetime","type":"uint256"},{"internalType":"string","name":"keyword","type":"string"}],"internalType":"struct Transaction.TransactionDetail[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTransactionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610e0c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806307e05ed11461004657806327506f53146100625780632e7700f014610080575b600080fd5b610060600480360381019061005b919061068c565b61009e565b005b61006a610252565b604051610077919061092c565b60405180910390f35b610088610495565b604051610095919061095d565b60405180910390f35b60016000808282546100b091906109a7565b9250508190555060016040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200142815260200183815250908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030190816101e89190610be7565b506080820151816004015560a08201518160050190816102089190610be7565b5050507f416cfa4330a4565f45c2fd2dd4826a83a37443aba2ce6f79477c7355afac35fa33858585428660405161024496959493929190610d67565b60405180910390a150505050565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561048c57838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201805461035f90610a0a565b80601f016020809104026020016040519081016040528092919081815260200182805461038b90610a0a565b80156103d85780601f106103ad576101008083540402835291602001916103d8565b820191906000526020600020905b8154815290600101906020018083116103bb57829003601f168201915b50505050508152602001600482015481526020016005820180546103fb90610a0a565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610a0a565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b50505050508152505081526020019060010190610276565b50505050905090565b60008054905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104dd826104b2565b9050919050565b6104ed816104d2565b81146104f857600080fd5b50565b60008135905061050a816104e4565b92915050565b6000819050919050565b61052381610510565b811461052e57600080fd5b50565b6000813590506105408161051a565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61059982610550565b810181811067ffffffffffffffff821117156105b8576105b7610561565b5b80604052505050565b60006105cb61049e565b90506105d78282610590565b919050565b600067ffffffffffffffff8211156105f7576105f6610561565b5b61060082610550565b9050602081019050919050565b82818337600083830152505050565b600061062f61062a846105dc565b6105c1565b90508281526020810184848401111561064b5761064a61054b565b5b61065684828561060d565b509392505050565b600082601f83011261067357610672610546565b5b813561068384826020860161061c565b91505092915050565b600080600080608085870312156106a6576106a56104a8565b5b60006106b4878288016104fb565b94505060206106c587828801610531565b935050604085013567ffffffffffffffff8111156106e6576106e56104ad565b5b6106f28782880161065e565b925050606085013567ffffffffffffffff811115610713576107126104ad565b5b61071f8782880161065e565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000610762826104b2565b9050919050565b61077281610757565b82525050565b61078181610510565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107c15780820151818401526020810190506107a6565b60008484015250505050565b60006107d882610787565b6107e28185610792565b93506107f28185602086016107a3565b6107fb81610550565b840191505092915050565b600060c08301600083015161081e6000860182610769565b5060208301516108316020860182610769565b5060408301516108446040860182610778565b506060830151848203606086015261085c82826107cd565b91505060808301516108716080860182610778565b5060a083015184820360a086015261088982826107cd565b9150508091505092915050565b60006108a28383610806565b905092915050565b6000602082019050919050565b60006108c28261072b565b6108cc8185610736565b9350836020820285016108de85610747565b8060005b8581101561091a57848403895281516108fb8582610896565b9450610906836108aa565b925060208a019950506001810190506108e2565b50829750879550505050505092915050565b6000602082019050818103600083015261094681846108b7565b905092915050565b61095781610510565b82525050565b6000602082019050610972600083018461094e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b282610510565b91506109bd83610510565b92508282019050808211156109d5576109d4610978565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610a2257607f821691505b602082108103610a3557610a346109db565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610a9d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610a60565b610aa78683610a60565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610ae4610adf610ada84610510565b610abf565b610510565b9050919050565b6000819050919050565b610afe83610ac9565b610b12610b0a82610aeb565b848454610a6d565b825550505050565b600090565b610b27610b1a565b610b32818484610af5565b505050565b5b81811015610b5657610b4b600082610b1f565b600181019050610b38565b5050565b601f821115610b9b57610b6c81610a3b565b610b7584610a50565b81016020851015610b84578190505b610b98610b9085610a50565b830182610b37565b50505b505050565b600082821c905092915050565b6000610bbe60001984600802610ba0565b1980831691505092915050565b6000610bd78383610bad565b9150826002028217905092915050565b610bf082610787565b67ffffffffffffffff811115610c0957610c08610561565b5b610c138254610a0a565b610c1e828285610b5a565b600060209050601f831160018114610c515760008415610c3f578287015190505b610c498582610bcb565b865550610cb1565b601f198416610c5f86610a3b565b60005b82811015610c8757848901518255600182019150602085019450602081019050610c62565b86831015610ca45784890151610ca0601f891682610bad565b8355505b6001600288020188555050505b505050505050565b610cc281610757565b82525050565b6000610ce3610cde610cd9846104b2565b610abf565b6104b2565b9050919050565b6000610cf582610cc8565b9050919050565b6000610d0782610cea565b9050919050565b610d1781610cfc565b82525050565b600082825260208201905092915050565b6000610d3982610787565b610d438185610d1d565b9350610d538185602086016107a3565b610d5c81610550565b840191505092915050565b600060c082019050610d7c6000830189610cb9565b610d896020830188610d0e565b610d96604083018761094e565b8181036060830152610da88186610d2e565b9050610db7608083018561094e565b81810360a0830152610dc98184610d2e565b905097965050505050505056fea264697066735822122071ec76cedeadda382edcf6a87c15af1d44827fdd27217493acdb9aee0670d5b264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE0C DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E05ED1 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x27506F53 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0x2E7700F0 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x68C JUMP JUMPDEST PUSH2 0x9E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x92C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH2 0x495 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x95D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0x9A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP2 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST POP POP POP PUSH32 0x416CFA4330A4565F45C2FD2DD4826A83A37443ABA2CE6F79477C7355AFAC35FA CALLER DUP6 DUP6 DUP6 TIMESTAMP DUP7 PUSH1 0x40 MLOAD PUSH2 0x244 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x48C JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x35F SWAP1 PUSH2 0xA0A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38B SWAP1 PUSH2 0xA0A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xA0A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xA0A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x276 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DD DUP3 PUSH2 0x4B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4ED DUP2 PUSH2 0x4D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x50A DUP2 PUSH2 0x4E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x523 DUP2 PUSH2 0x510 JUMP JUMPDEST DUP2 EQ PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x540 DUP2 PUSH2 0x51A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x599 DUP3 PUSH2 0x550 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x5B8 JUMPI PUSH2 0x5B7 PUSH2 0x561 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CB PUSH2 0x49E JUMP JUMPDEST SWAP1 POP PUSH2 0x5D7 DUP3 DUP3 PUSH2 0x590 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5F7 JUMPI PUSH2 0x5F6 PUSH2 0x561 JUMP JUMPDEST JUMPDEST PUSH2 0x600 DUP3 PUSH2 0x550 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62F PUSH2 0x62A DUP5 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x64B JUMPI PUSH2 0x64A PUSH2 0x54B JUMP JUMPDEST JUMPDEST PUSH2 0x656 DUP5 DUP3 DUP6 PUSH2 0x60D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x673 JUMPI PUSH2 0x672 PUSH2 0x546 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x683 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x61C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6A6 JUMPI PUSH2 0x6A5 PUSH2 0x4A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6B4 DUP8 DUP3 DUP9 ADD PUSH2 0x4FB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x6C5 DUP8 DUP3 DUP9 ADD PUSH2 0x531 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6E6 JUMPI PUSH2 0x6E5 PUSH2 0x4AD JUMP JUMPDEST JUMPDEST PUSH2 0x6F2 DUP8 DUP3 DUP9 ADD PUSH2 0x65E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x713 JUMPI PUSH2 0x712 PUSH2 0x4AD JUMP JUMPDEST JUMPDEST PUSH2 0x71F DUP8 DUP3 DUP9 ADD PUSH2 0x65E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x762 DUP3 PUSH2 0x4B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x772 DUP2 PUSH2 0x757 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x781 DUP2 PUSH2 0x510 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7C1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D8 DUP3 PUSH2 0x787 JUMP JUMPDEST PUSH2 0x7E2 DUP2 DUP6 PUSH2 0x792 JUMP JUMPDEST SWAP4 POP PUSH2 0x7F2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0x7FB DUP2 PUSH2 0x550 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x81E PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x769 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x831 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x769 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x844 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x778 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x85C DUP3 DUP3 PUSH2 0x7CD JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x871 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x778 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x889 DUP3 DUP3 PUSH2 0x7CD JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A2 DUP4 DUP4 PUSH2 0x806 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C2 DUP3 PUSH2 0x72B JUMP JUMPDEST PUSH2 0x8CC DUP2 DUP6 PUSH2 0x736 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x8DE DUP6 PUSH2 0x747 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x91A JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x8FB DUP6 DUP3 PUSH2 0x896 JUMP JUMPDEST SWAP5 POP PUSH2 0x906 DUP4 PUSH2 0x8AA JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8E2 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x946 DUP2 DUP5 PUSH2 0x8B7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x957 DUP2 PUSH2 0x510 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x972 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x94E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9B2 DUP3 PUSH2 0x510 JUMP JUMPDEST SWAP2 POP PUSH2 0x9BD DUP4 PUSH2 0x510 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x9D5 JUMPI PUSH2 0x9D4 PUSH2 0x978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xA22 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA35 JUMPI PUSH2 0xA34 PUSH2 0x9DB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0xA9D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0xAA7 DUP7 DUP4 PUSH2 0xA60 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE4 PUSH2 0xADF PUSH2 0xADA DUP5 PUSH2 0x510 JUMP JUMPDEST PUSH2 0xABF JUMP JUMPDEST PUSH2 0x510 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAFE DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0xB12 PUSH2 0xB0A DUP3 PUSH2 0xAEB JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xA6D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xB27 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0xB32 DUP2 DUP5 DUP5 PUSH2 0xAF5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB56 JUMPI PUSH2 0xB4B PUSH1 0x0 DUP3 PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xB38 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB9B JUMPI PUSH2 0xB6C DUP2 PUSH2 0xA3B JUMP JUMPDEST PUSH2 0xB75 DUP5 PUSH2 0xA50 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xB84 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xB98 PUSH2 0xB90 DUP6 PUSH2 0xA50 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xB37 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBE PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xBA0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD7 DUP4 DUP4 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBF0 DUP3 PUSH2 0x787 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC09 JUMPI PUSH2 0xC08 PUSH2 0x561 JUMP JUMPDEST JUMPDEST PUSH2 0xC13 DUP3 SLOAD PUSH2 0xA0A JUMP JUMPDEST PUSH2 0xC1E DUP3 DUP3 DUP6 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xC51 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xC3F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xC49 DUP6 DUP3 PUSH2 0xBCB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xCB1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xC5F DUP7 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC87 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC62 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xCA4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xCA0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xBAD JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCC2 DUP2 PUSH2 0x757 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE3 PUSH2 0xCDE PUSH2 0xCD9 DUP5 PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0xABF JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF5 DUP3 PUSH2 0xCC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD07 DUP3 PUSH2 0xCEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD17 DUP2 PUSH2 0xCFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD39 DUP3 PUSH2 0x787 JUMP JUMPDEST PUSH2 0xD43 DUP2 DUP6 PUSH2 0xD1D JUMP JUMPDEST SWAP4 POP PUSH2 0xD53 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0xD5C DUP2 PUSH2 0x550 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0xD7C PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0xCB9 JUMP JUMPDEST PUSH2 0xD89 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0xD0E JUMP JUMPDEST PUSH2 0xD96 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x94E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xDA8 DUP2 DUP7 PUSH2 0xD2E JUMP JUMPDEST SWAP1 POP PUSH2 0xDB7 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x94E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0xDC9 DUP2 DUP5 PUSH2 0xD2E JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xEC76CEDEADDA382EDCF6A87C15AF1D44827F 0xDD 0x27 0x21 PUSH21 0x93ACDB9AEE0670D5B264736F6C6343000814003300 ","sourceMap":"59:1343:7:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@deployToBlockchain_1205":{"entryPoint":158,"id":1205,"parameterSlots":4,"returnSlots":0},"@getAllTransactions_1215":{"entryPoint":594,"id":1215,"parameterSlots":0,"returnSlots":1},"@getTransactionCount_1223":{"entryPoint":1173,"id":1223,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":1564,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_payable":{"entryPoint":1275,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":1630,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1329,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":1676,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encodeUpdatedPos_t_struct$_TransactionDetail_$1159_memory_ptr_to_t_struct$_TransactionDetail_$1159_memory_ptr":{"entryPoint":2198,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_payable_to_t_address_fromStack":{"entryPoint":3342,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address":{"entryPoint":1897,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3257,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":2231,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":1997,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3374,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_TransactionDetail_$1159_memory_ptr_to_t_struct$_TransactionDetail_$1159_memory_ptr":{"entryPoint":2054,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":1912,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2382,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_address_payable_t_uint256_t_string_memory_ptr_t_uint256_t_string_memory_ptr__to_t_address_t_address_t_uint256_t_string_memory_ptr_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3431,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":2348,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2397,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1473,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1182,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1500,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr":{"entryPoint":1863,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":2619,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr":{"entryPoint":1835,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1927,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr":{"entryPoint":2218,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":1846,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":1938,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3357,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2471,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2906,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1879,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":1234,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1202,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1296,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2871,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_address_payable_to_t_address":{"entryPoint":3324,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":3306,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":3272,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":2761,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":3047,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":1549,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1955,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":2640,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2570,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":3019,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1424,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":2751,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2989,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2424,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":2523,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1377,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2795,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1350,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1355,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1197,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1192,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1360,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":2656,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2976,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2847,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2669,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2805,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":1252,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1306,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2842,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:17942:8","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:8","statements":[{"nodeType":"YulAssignment","src":"57:19:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:8"},"nodeType":"YulFunctionCall","src":"67:9:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:8"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:8","type":""}],"src":"7:75:8"},{"body":{"nodeType":"YulBlock","src":"177:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:8"},"nodeType":"YulFunctionCall","src":"187:12:8"},"nodeType":"YulExpressionStatement","src":"187:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:8"},{"body":{"nodeType":"YulBlock","src":"300:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:8"},"nodeType":"YulFunctionCall","src":"310:12:8"},"nodeType":"YulExpressionStatement","src":"310:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:8"},{"body":{"nodeType":"YulBlock","src":"379:81:8","statements":[{"nodeType":"YulAssignment","src":"389:65:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:8"},"nodeType":"YulFunctionCall","src":"400:54:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:8"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:8","type":""}],"src":"334:126:8"},{"body":{"nodeType":"YulBlock","src":"519:51:8","statements":[{"nodeType":"YulAssignment","src":"529:35:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"558:5:8"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"540:17:8"},"nodeType":"YulFunctionCall","src":"540:24:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"529:7:8"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"501:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"511:7:8","type":""}],"src":"466:104:8"},{"body":{"nodeType":"YulBlock","src":"627:87:8","statements":[{"body":{"nodeType":"YulBlock","src":"692:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"701:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"704:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"694:6:8"},"nodeType":"YulFunctionCall","src":"694:12:8"},"nodeType":"YulExpressionStatement","src":"694:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"650:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"683:5:8"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"657:25:8"},"nodeType":"YulFunctionCall","src":"657:32:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"647:2:8"},"nodeType":"YulFunctionCall","src":"647:43:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"640:6:8"},"nodeType":"YulFunctionCall","src":"640:51:8"},"nodeType":"YulIf","src":"637:71:8"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"620:5:8","type":""}],"src":"576:138:8"},{"body":{"nodeType":"YulBlock","src":"780:95:8","statements":[{"nodeType":"YulAssignment","src":"790:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"812:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"799:12:8"},"nodeType":"YulFunctionCall","src":"799:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"790:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"863:5:8"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"828:34:8"},"nodeType":"YulFunctionCall","src":"828:41:8"},"nodeType":"YulExpressionStatement","src":"828:41:8"}]},"name":"abi_decode_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"758:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"766:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"774:5:8","type":""}],"src":"720:155:8"},{"body":{"nodeType":"YulBlock","src":"926:32:8","statements":[{"nodeType":"YulAssignment","src":"936:16:8","value":{"name":"value","nodeType":"YulIdentifier","src":"947:5:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"936:7:8"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"908:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"918:7:8","type":""}],"src":"881:77:8"},{"body":{"nodeType":"YulBlock","src":"1007:79:8","statements":[{"body":{"nodeType":"YulBlock","src":"1064:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1073:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1076:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1066:6:8"},"nodeType":"YulFunctionCall","src":"1066:12:8"},"nodeType":"YulExpressionStatement","src":"1066:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1030:5:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1055:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1037:17:8"},"nodeType":"YulFunctionCall","src":"1037:24:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1027:2:8"},"nodeType":"YulFunctionCall","src":"1027:35:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1020:6:8"},"nodeType":"YulFunctionCall","src":"1020:43:8"},"nodeType":"YulIf","src":"1017:63:8"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1000:5:8","type":""}],"src":"964:122:8"},{"body":{"nodeType":"YulBlock","src":"1144:87:8","statements":[{"nodeType":"YulAssignment","src":"1154:29:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1176:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1163:12:8"},"nodeType":"YulFunctionCall","src":"1163:20:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1154:5:8"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1219:5:8"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1192:26:8"},"nodeType":"YulFunctionCall","src":"1192:33:8"},"nodeType":"YulExpressionStatement","src":"1192:33:8"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1122:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"1130:3:8","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1138:5:8","type":""}],"src":"1092:139:8"},{"body":{"nodeType":"YulBlock","src":"1326:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1343:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1346:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1336:6:8"},"nodeType":"YulFunctionCall","src":"1336:12:8"},"nodeType":"YulExpressionStatement","src":"1336:12:8"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1237:117:8"},{"body":{"nodeType":"YulBlock","src":"1449:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1466:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1469:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1459:6:8"},"nodeType":"YulFunctionCall","src":"1459:12:8"},"nodeType":"YulExpressionStatement","src":"1459:12:8"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"1360:117:8"},{"body":{"nodeType":"YulBlock","src":"1531:54:8","statements":[{"nodeType":"YulAssignment","src":"1541:38:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1559:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"1566:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1555:3:8"},"nodeType":"YulFunctionCall","src":"1555:14:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1575:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1571:3:8"},"nodeType":"YulFunctionCall","src":"1571:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1551:3:8"},"nodeType":"YulFunctionCall","src":"1551:28:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1541:6:8"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1514:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1524:6:8","type":""}],"src":"1483:102:8"},{"body":{"nodeType":"YulBlock","src":"1619:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1636:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1639:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1629:6:8"},"nodeType":"YulFunctionCall","src":"1629:88:8"},"nodeType":"YulExpressionStatement","src":"1629:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1733:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1736:4:8","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1726:6:8"},"nodeType":"YulFunctionCall","src":"1726:15:8"},"nodeType":"YulExpressionStatement","src":"1726:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1757:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1760:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1750:6:8"},"nodeType":"YulFunctionCall","src":"1750:15:8"},"nodeType":"YulExpressionStatement","src":"1750:15:8"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1591:180:8"},{"body":{"nodeType":"YulBlock","src":"1820:238:8","statements":[{"nodeType":"YulVariableDeclaration","src":"1830:58:8","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1852:6:8"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1882:4:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1860:21:8"},"nodeType":"YulFunctionCall","src":"1860:27:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1848:3:8"},"nodeType":"YulFunctionCall","src":"1848:40:8"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1834:10:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"1999:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2001:16:8"},"nodeType":"YulFunctionCall","src":"2001:18:8"},"nodeType":"YulExpressionStatement","src":"2001:18:8"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1942:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"1954:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1939:2:8"},"nodeType":"YulFunctionCall","src":"1939:34:8"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1978:10:8"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1990:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1975:2:8"},"nodeType":"YulFunctionCall","src":"1975:22:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1936:2:8"},"nodeType":"YulFunctionCall","src":"1936:62:8"},"nodeType":"YulIf","src":"1933:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2037:2:8","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2041:10:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2030:6:8"},"nodeType":"YulFunctionCall","src":"2030:22:8"},"nodeType":"YulExpressionStatement","src":"2030:22:8"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1806:6:8","type":""},{"name":"size","nodeType":"YulTypedName","src":"1814:4:8","type":""}],"src":"1777:281:8"},{"body":{"nodeType":"YulBlock","src":"2105:88:8","statements":[{"nodeType":"YulAssignment","src":"2115:30:8","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2125:18:8"},"nodeType":"YulFunctionCall","src":"2125:20:8"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2115:6:8"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2174:6:8"},{"name":"size","nodeType":"YulIdentifier","src":"2182:4:8"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2154:19:8"},"nodeType":"YulFunctionCall","src":"2154:33:8"},"nodeType":"YulExpressionStatement","src":"2154:33:8"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2089:4:8","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2098:6:8","type":""}],"src":"2064:129:8"},{"body":{"nodeType":"YulBlock","src":"2266:241:8","statements":[{"body":{"nodeType":"YulBlock","src":"2371:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2373:16:8"},"nodeType":"YulFunctionCall","src":"2373:18:8"},"nodeType":"YulExpressionStatement","src":"2373:18:8"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2343:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"2351:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2340:2:8"},"nodeType":"YulFunctionCall","src":"2340:30:8"},"nodeType":"YulIf","src":"2337:56:8"},{"nodeType":"YulAssignment","src":"2403:37:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2433:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2411:21:8"},"nodeType":"YulFunctionCall","src":"2411:29:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2403:4:8"}]},{"nodeType":"YulAssignment","src":"2477:23:8","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2489:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"2495:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2485:3:8"},"nodeType":"YulFunctionCall","src":"2485:15:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2477:4:8"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2250:6:8","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2261:4:8","type":""}],"src":"2199:308:8"},{"body":{"nodeType":"YulBlock","src":"2577:82:8","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2600:3:8"},{"name":"src","nodeType":"YulIdentifier","src":"2605:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"2610:6:8"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2587:12:8"},"nodeType":"YulFunctionCall","src":"2587:30:8"},"nodeType":"YulExpressionStatement","src":"2587:30:8"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2637:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"2642:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:8"},"nodeType":"YulFunctionCall","src":"2633:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"2651:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2626:6:8"},"nodeType":"YulFunctionCall","src":"2626:27:8"},"nodeType":"YulExpressionStatement","src":"2626:27:8"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2559:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2564:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"2569:6:8","type":""}],"src":"2513:146:8"},{"body":{"nodeType":"YulBlock","src":"2749:341:8","statements":[{"nodeType":"YulAssignment","src":"2759:75:8","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2826:6:8"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2784:41:8"},"nodeType":"YulFunctionCall","src":"2784:49:8"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2768:15:8"},"nodeType":"YulFunctionCall","src":"2768:66:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2759:5:8"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2850:5:8"},{"name":"length","nodeType":"YulIdentifier","src":"2857:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2843:6:8"},"nodeType":"YulFunctionCall","src":"2843:21:8"},"nodeType":"YulExpressionStatement","src":"2843:21:8"},{"nodeType":"YulVariableDeclaration","src":"2873:27:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2888:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"2895:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:8"},"nodeType":"YulFunctionCall","src":"2884:16:8"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2877:3:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2938:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2940:77:8"},"nodeType":"YulFunctionCall","src":"2940:79:8"},"nodeType":"YulExpressionStatement","src":"2940:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2919:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"2924:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2915:3:8"},"nodeType":"YulFunctionCall","src":"2915:16:8"},{"name":"end","nodeType":"YulIdentifier","src":"2933:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2912:2:8"},"nodeType":"YulFunctionCall","src":"2912:25:8"},"nodeType":"YulIf","src":"2909:112:8"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3067:3:8"},{"name":"dst","nodeType":"YulIdentifier","src":"3072:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"3077:6:8"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"3030:36:8"},"nodeType":"YulFunctionCall","src":"3030:54:8"},"nodeType":"YulExpressionStatement","src":"3030:54:8"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2722:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"2727:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"2735:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2743:5:8","type":""}],"src":"2665:425:8"},{"body":{"nodeType":"YulBlock","src":"3172:278:8","statements":[{"body":{"nodeType":"YulBlock","src":"3221:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3223:77:8"},"nodeType":"YulFunctionCall","src":"3223:79:8"},"nodeType":"YulExpressionStatement","src":"3223:79:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3200:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3208:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3196:3:8"},"nodeType":"YulFunctionCall","src":"3196:17:8"},{"name":"end","nodeType":"YulIdentifier","src":"3215:3:8"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3192:3:8"},"nodeType":"YulFunctionCall","src":"3192:27:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3185:6:8"},"nodeType":"YulFunctionCall","src":"3185:35:8"},"nodeType":"YulIf","src":"3182:122:8"},{"nodeType":"YulVariableDeclaration","src":"3313:34:8","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3340:6:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3327:12:8"},"nodeType":"YulFunctionCall","src":"3327:20:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3317:6:8","type":""}]},{"nodeType":"YulAssignment","src":"3356:88:8","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3417:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3425:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3413:3:8"},"nodeType":"YulFunctionCall","src":"3413:17:8"},{"name":"length","nodeType":"YulIdentifier","src":"3432:6:8"},{"name":"end","nodeType":"YulIdentifier","src":"3440:3:8"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3365:47:8"},"nodeType":"YulFunctionCall","src":"3365:79:8"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3356:5:8"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3150:6:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"3158:3:8","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3166:5:8","type":""}],"src":"3110:340:8"},{"body":{"nodeType":"YulBlock","src":"3601:996:8","statements":[{"body":{"nodeType":"YulBlock","src":"3648:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3650:77:8"},"nodeType":"YulFunctionCall","src":"3650:79:8"},"nodeType":"YulExpressionStatement","src":"3650:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3622:7:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"3631:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3618:3:8"},"nodeType":"YulFunctionCall","src":"3618:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"3643:3:8","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3614:3:8"},"nodeType":"YulFunctionCall","src":"3614:33:8"},"nodeType":"YulIf","src":"3611:120:8"},{"nodeType":"YulBlock","src":"3741:125:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3756:15:8","value":{"kind":"number","nodeType":"YulLiteral","src":"3770:1:8","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3760:6:8","type":""}]},{"nodeType":"YulAssignment","src":"3785:71:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3828:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"3839:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3824:3:8"},"nodeType":"YulFunctionCall","src":"3824:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3848:7:8"}],"functionName":{"name":"abi_decode_t_address_payable","nodeType":"YulIdentifier","src":"3795:28:8"},"nodeType":"YulFunctionCall","src":"3795:61:8"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3785:6:8"}]}]},{"nodeType":"YulBlock","src":"3876:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"3891:16:8","value":{"kind":"number","nodeType":"YulLiteral","src":"3905:2:8","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3895:6:8","type":""}]},{"nodeType":"YulAssignment","src":"3921:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3956:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"3967:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3952:3:8"},"nodeType":"YulFunctionCall","src":"3952:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3976:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3931:20:8"},"nodeType":"YulFunctionCall","src":"3931:53:8"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3921:6:8"}]}]},{"nodeType":"YulBlock","src":"4004:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4019:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4050:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4061:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4046:3:8"},"nodeType":"YulFunctionCall","src":"4046:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4033:12:8"},"nodeType":"YulFunctionCall","src":"4033:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4023:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"4112:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4114:77:8"},"nodeType":"YulFunctionCall","src":"4114:79:8"},"nodeType":"YulExpressionStatement","src":"4114:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4084:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"4092:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4081:2:8"},"nodeType":"YulFunctionCall","src":"4081:30:8"},"nodeType":"YulIf","src":"4078:117:8"},{"nodeType":"YulAssignment","src":"4209:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4254:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4265:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4250:3:8"},"nodeType":"YulFunctionCall","src":"4250:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4274:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4219:30:8"},"nodeType":"YulFunctionCall","src":"4219:63:8"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4209:6:8"}]}]},{"nodeType":"YulBlock","src":"4302:288:8","statements":[{"nodeType":"YulVariableDeclaration","src":"4317:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4348:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"4359:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4344:3:8"},"nodeType":"YulFunctionCall","src":"4344:18:8"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4331:12:8"},"nodeType":"YulFunctionCall","src":"4331:32:8"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4321:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"4410:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4412:77:8"},"nodeType":"YulFunctionCall","src":"4412:79:8"},"nodeType":"YulExpressionStatement","src":"4412:79:8"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4382:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"4390:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4379:2:8"},"nodeType":"YulFunctionCall","src":"4379:30:8"},"nodeType":"YulIf","src":"4376:117:8"},{"nodeType":"YulAssignment","src":"4507:73:8","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4552:9:8"},{"name":"offset","nodeType":"YulIdentifier","src":"4563:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4548:3:8"},"nodeType":"YulFunctionCall","src":"4548:22:8"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4572:7:8"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4517:30:8"},"nodeType":"YulFunctionCall","src":"4517:63:8"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4507:6:8"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3547:9:8","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3558:7:8","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3570:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3578:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3586:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3594:6:8","type":""}],"src":"3456:1141:8"},{"body":{"nodeType":"YulBlock","src":"4712:40:8","statements":[{"nodeType":"YulAssignment","src":"4723:22:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4739:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4733:5:8"},"nodeType":"YulFunctionCall","src":"4733:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4723:6:8"}]}]},"name":"array_length_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4695:5:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4705:6:8","type":""}],"src":"4603:149:8"},{"body":{"nodeType":"YulBlock","src":"4904:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4921:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"4926:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4914:6:8"},"nodeType":"YulFunctionCall","src":"4914:19:8"},"nodeType":"YulExpressionStatement","src":"4914:19:8"},{"nodeType":"YulAssignment","src":"4942:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4961:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"4966:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4957:3:8"},"nodeType":"YulFunctionCall","src":"4957:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4942:11:8"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4876:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"4881:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4892:11:8","type":""}],"src":"4758:219:8"},{"body":{"nodeType":"YulBlock","src":"5090:60:8","statements":[{"nodeType":"YulAssignment","src":"5100:11:8","value":{"name":"ptr","nodeType":"YulIdentifier","src":"5108:3:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5100:4:8"}]},{"nodeType":"YulAssignment","src":"5121:22:8","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5133:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"5138:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5129:3:8"},"nodeType":"YulFunctionCall","src":"5129:14:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5121:4:8"}]}]},"name":"array_dataslot_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"5077:3:8","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"5085:4:8","type":""}],"src":"4983:167:8"},{"body":{"nodeType":"YulBlock","src":"5201:51:8","statements":[{"nodeType":"YulAssignment","src":"5211:35:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5240:5:8"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5222:17:8"},"nodeType":"YulFunctionCall","src":"5222:24:8"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5211:7:8"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5183:5:8","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5193:7:8","type":""}],"src":"5156:96:8"},{"body":{"nodeType":"YulBlock","src":"5313:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5330:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5353:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5335:17:8"},"nodeType":"YulFunctionCall","src":"5335:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5323:6:8"},"nodeType":"YulFunctionCall","src":"5323:37:8"},"nodeType":"YulExpressionStatement","src":"5323:37:8"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5301:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5308:3:8","type":""}],"src":"5258:108:8"},{"body":{"nodeType":"YulBlock","src":"5427:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5444:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5467:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5449:17:8"},"nodeType":"YulFunctionCall","src":"5449:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5437:6:8"},"nodeType":"YulFunctionCall","src":"5437:37:8"},"nodeType":"YulExpressionStatement","src":"5437:37:8"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5415:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5422:3:8","type":""}],"src":"5372:108:8"},{"body":{"nodeType":"YulBlock","src":"5545:40:8","statements":[{"nodeType":"YulAssignment","src":"5556:22:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5572:5:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5566:5:8"},"nodeType":"YulFunctionCall","src":"5566:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5556:6:8"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5528:5:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5538:6:8","type":""}],"src":"5486:99:8"},{"body":{"nodeType":"YulBlock","src":"5677:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5694:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"5699:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5687:6:8"},"nodeType":"YulFunctionCall","src":"5687:19:8"},"nodeType":"YulExpressionStatement","src":"5687:19:8"},{"nodeType":"YulAssignment","src":"5715:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5734:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"5739:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5730:3:8"},"nodeType":"YulFunctionCall","src":"5730:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5715:11:8"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5649:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"5654:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5665:11:8","type":""}],"src":"5591:159:8"},{"body":{"nodeType":"YulBlock","src":"5818:184:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5828:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"5837:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5832:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"5897:63:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5922:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"5927:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5918:3:8"},"nodeType":"YulFunctionCall","src":"5918:11:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5941:3:8"},{"name":"i","nodeType":"YulIdentifier","src":"5946:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5937:3:8"},"nodeType":"YulFunctionCall","src":"5937:11:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5931:5:8"},"nodeType":"YulFunctionCall","src":"5931:18:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5911:6:8"},"nodeType":"YulFunctionCall","src":"5911:39:8"},"nodeType":"YulExpressionStatement","src":"5911:39:8"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5858:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"5861:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5855:2:8"},"nodeType":"YulFunctionCall","src":"5855:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5869:19:8","statements":[{"nodeType":"YulAssignment","src":"5871:15:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5880:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"5883:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5876:3:8"},"nodeType":"YulFunctionCall","src":"5876:10:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5871:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"5851:3:8","statements":[]},"src":"5847:113:8"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5980:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"5985:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5976:3:8"},"nodeType":"YulFunctionCall","src":"5976:16:8"},{"kind":"number","nodeType":"YulLiteral","src":"5994:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5969:6:8"},"nodeType":"YulFunctionCall","src":"5969:27:8"},"nodeType":"YulExpressionStatement","src":"5969:27:8"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5800:3:8","type":""},{"name":"dst","nodeType":"YulTypedName","src":"5805:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"5810:6:8","type":""}],"src":"5756:246:8"},{"body":{"nodeType":"YulBlock","src":"6090:275:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6100:53:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6147:5:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6114:32:8"},"nodeType":"YulFunctionCall","src":"6114:39:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6104:6:8","type":""}]},{"nodeType":"YulAssignment","src":"6162:68:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6218:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"6223:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6169:48:8"},"nodeType":"YulFunctionCall","src":"6169:61:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6162:3:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6278:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"6285:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6274:3:8"},"nodeType":"YulFunctionCall","src":"6274:16:8"},{"name":"pos","nodeType":"YulIdentifier","src":"6292:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"6297:6:8"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"6239:34:8"},"nodeType":"YulFunctionCall","src":"6239:65:8"},"nodeType":"YulExpressionStatement","src":"6239:65:8"},{"nodeType":"YulAssignment","src":"6313:46:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6324:3:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6351:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6329:21:8"},"nodeType":"YulFunctionCall","src":"6329:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6320:3:8"},"nodeType":"YulFunctionCall","src":"6320:39:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6313:3:8"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6071:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6078:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6086:3:8","type":""}],"src":"6008:357:8"},{"body":{"nodeType":"YulBlock","src":"6589:1268:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6599:26:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6615:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"6620:4:8","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6611:3:8"},"nodeType":"YulFunctionCall","src":"6611:14:8"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"6603:4:8","type":""}]},{"nodeType":"YulBlock","src":"6635:166:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6672:43:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6702:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"6709:4:8","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6698:3:8"},"nodeType":"YulFunctionCall","src":"6698:16:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6692:5:8"},"nodeType":"YulFunctionCall","src":"6692:23:8"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6676:12:8","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6762:12:8"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6780:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"6785:4:8","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6776:3:8"},"nodeType":"YulFunctionCall","src":"6776:14:8"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"6728:33:8"},"nodeType":"YulFunctionCall","src":"6728:63:8"},"nodeType":"YulExpressionStatement","src":"6728:63:8"}]},{"nodeType":"YulBlock","src":"6811:169:8","statements":[{"nodeType":"YulVariableDeclaration","src":"6851:43:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6881:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"6888:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6877:3:8"},"nodeType":"YulFunctionCall","src":"6877:16:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6871:5:8"},"nodeType":"YulFunctionCall","src":"6871:23:8"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6855:12:8","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6941:12:8"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6959:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"6964:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6955:3:8"},"nodeType":"YulFunctionCall","src":"6955:14:8"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"6907:33:8"},"nodeType":"YulFunctionCall","src":"6907:63:8"},"nodeType":"YulExpressionStatement","src":"6907:63:8"}]},{"nodeType":"YulBlock","src":"6990:166:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7027:43:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7057:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"7064:4:8","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7053:3:8"},"nodeType":"YulFunctionCall","src":"7053:16:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7047:5:8"},"nodeType":"YulFunctionCall","src":"7047:23:8"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7031:12:8","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7117:12:8"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7135:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"7140:4:8","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7131:3:8"},"nodeType":"YulFunctionCall","src":"7131:14:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7083:33:8"},"nodeType":"YulFunctionCall","src":"7083:63:8"},"nodeType":"YulExpressionStatement","src":"7083:63:8"}]},{"nodeType":"YulBlock","src":"7166:238:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7204:43:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7234:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"7241:4:8","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7230:3:8"},"nodeType":"YulFunctionCall","src":"7230:16:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7224:5:8"},"nodeType":"YulFunctionCall","src":"7224:23:8"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7208:12:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7272:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"7277:4:8","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7268:3:8"},"nodeType":"YulFunctionCall","src":"7268:14:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7288:4:8"},{"name":"pos","nodeType":"YulIdentifier","src":"7294:3:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7284:3:8"},"nodeType":"YulFunctionCall","src":"7284:14:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7261:6:8"},"nodeType":"YulFunctionCall","src":"7261:38:8"},"nodeType":"YulExpressionStatement","src":"7261:38:8"},{"nodeType":"YulAssignment","src":"7312:81:8","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7374:12:8"},{"name":"tail","nodeType":"YulIdentifier","src":"7388:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7320:53:8"},"nodeType":"YulFunctionCall","src":"7320:73:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7312:4:8"}]}]},{"nodeType":"YulBlock","src":"7414:168:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7453:43:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7483:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"7490:4:8","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7479:3:8"},"nodeType":"YulFunctionCall","src":"7479:16:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7473:5:8"},"nodeType":"YulFunctionCall","src":"7473:23:8"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7457:12:8","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7543:12:8"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7561:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"7566:4:8","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7557:3:8"},"nodeType":"YulFunctionCall","src":"7557:14:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7509:33:8"},"nodeType":"YulFunctionCall","src":"7509:63:8"},"nodeType":"YulExpressionStatement","src":"7509:63:8"}]},{"nodeType":"YulBlock","src":"7592:238:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7630:43:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7660:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"7667:4:8","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7656:3:8"},"nodeType":"YulFunctionCall","src":"7656:16:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7650:5:8"},"nodeType":"YulFunctionCall","src":"7650:23:8"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"7634:12:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7698:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"7703:4:8","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7694:3:8"},"nodeType":"YulFunctionCall","src":"7694:14:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7714:4:8"},{"name":"pos","nodeType":"YulIdentifier","src":"7720:3:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7710:3:8"},"nodeType":"YulFunctionCall","src":"7710:14:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7687:6:8"},"nodeType":"YulFunctionCall","src":"7687:38:8"},"nodeType":"YulExpressionStatement","src":"7687:38:8"},{"nodeType":"YulAssignment","src":"7738:81:8","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"7800:12:8"},{"name":"tail","nodeType":"YulIdentifier","src":"7814:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7746:53:8"},"nodeType":"YulFunctionCall","src":"7746:73:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7738:4:8"}]}]},{"nodeType":"YulAssignment","src":"7840:11:8","value":{"name":"tail","nodeType":"YulIdentifier","src":"7847:4:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7840:3:8"}]}]},"name":"abi_encode_t_struct$_TransactionDetail_$1159_memory_ptr_to_t_struct$_TransactionDetail_$1159_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6568:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6575:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6584:3:8","type":""}],"src":"6455:1402:8"},{"body":{"nodeType":"YulBlock","src":"8013:146:8","statements":[{"nodeType":"YulAssignment","src":"8023:130:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8141:6:8"},{"name":"pos","nodeType":"YulIdentifier","src":"8149:3:8"}],"functionName":{"name":"abi_encode_t_struct$_TransactionDetail_$1159_memory_ptr_to_t_struct$_TransactionDetail_$1159_memory_ptr","nodeType":"YulIdentifier","src":"8037:103:8"},"nodeType":"YulFunctionCall","src":"8037:116:8"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"8023:10:8"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_TransactionDetail_$1159_memory_ptr_to_t_struct$_TransactionDetail_$1159_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"7986:6:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7994:3:8","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"8002:10:8","type":""}],"src":"7863:296:8"},{"body":{"nodeType":"YulBlock","src":"8275:38:8","statements":[{"nodeType":"YulAssignment","src":"8285:22:8","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8297:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"8302:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:8"},"nodeType":"YulFunctionCall","src":"8293:14:8"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"8285:4:8"}]}]},"name":"array_nextElement_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8262:3:8","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"8270:4:8","type":""}],"src":"8165:148:8"},{"body":{"nodeType":"YulBlock","src":"8601:997:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8611:103:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8708:5:8"}],"functionName":{"name":"array_length_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8625:82:8"},"nodeType":"YulFunctionCall","src":"8625:89:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8615:6:8","type":""}]},{"nodeType":"YulAssignment","src":"8723:128:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8839:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"8844:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8730:108:8"},"nodeType":"YulFunctionCall","src":"8730:121:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8723:3:8"}]},{"nodeType":"YulVariableDeclaration","src":"8860:20:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"8877:3:8"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"8864:9:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8889:39:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8905:3:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8914:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"8922:4:8","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8910:3:8"},"nodeType":"YulFunctionCall","src":"8910:17:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8901:3:8"},"nodeType":"YulFunctionCall","src":"8901:27:8"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"8893:4:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8937:106:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9037:5:8"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8952:84:8"},"nodeType":"YulFunctionCall","src":"8952:91:8"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"8941:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9052:21:8","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"9066:7:8"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"9056:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"9142:411:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9163:3:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9172:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"9178:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9168:3:8"},"nodeType":"YulFunctionCall","src":"9168:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9156:6:8"},"nodeType":"YulFunctionCall","src":"9156:33:8"},"nodeType":"YulExpressionStatement","src":"9156:33:8"},{"nodeType":"YulVariableDeclaration","src":"9202:34:8","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9229:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9223:5:8"},"nodeType":"YulFunctionCall","src":"9223:13:8"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"9206:13:8","type":""}]},{"nodeType":"YulAssignment","src":"9249:142:8","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"9371:13:8"},{"name":"tail","nodeType":"YulIdentifier","src":"9386:4:8"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_TransactionDetail_$1159_memory_ptr_to_t_struct$_TransactionDetail_$1159_memory_ptr","nodeType":"YulIdentifier","src":"9257:113:8"},"nodeType":"YulFunctionCall","src":"9257:134:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9249:4:8"}]},{"nodeType":"YulAssignment","src":"9404:105:8","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9502:6:8"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9414:87:8"},"nodeType":"YulFunctionCall","src":"9414:95:8"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9404:6:8"}]},{"nodeType":"YulAssignment","src":"9522:21:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9533:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"9538:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9529:3:8"},"nodeType":"YulFunctionCall","src":"9529:14:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9522:3:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9104:1:8"},{"name":"length","nodeType":"YulIdentifier","src":"9107:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9101:2:8"},"nodeType":"YulFunctionCall","src":"9101:13:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9115:18:8","statements":[{"nodeType":"YulAssignment","src":"9117:14:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9126:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"9129:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9122:3:8"},"nodeType":"YulFunctionCall","src":"9122:9:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9117:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"9086:14:8","statements":[{"nodeType":"YulVariableDeclaration","src":"9088:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"9097:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9092:1:8","type":""}]}]},"src":"9082:471:8"},{"nodeType":"YulAssignment","src":"9562:11:8","value":{"name":"tail","nodeType":"YulIdentifier","src":"9569:4:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9562:3:8"}]},{"nodeType":"YulAssignment","src":"9582:10:8","value":{"name":"pos","nodeType":"YulIdentifier","src":"9589:3:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9582:3:8"}]}]},"name":"abi_encode_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8580:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8587:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8596:3:8","type":""}],"src":"8407:1191:8"},{"body":{"nodeType":"YulBlock","src":"9822:295:8","statements":[{"nodeType":"YulAssignment","src":"9832:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9844:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9855:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9840:3:8"},"nodeType":"YulFunctionCall","src":"9840:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9832:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9879:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"9890:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9875:3:8"},"nodeType":"YulFunctionCall","src":"9875:17:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9898:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"9904:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9894:3:8"},"nodeType":"YulFunctionCall","src":"9894:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9868:6:8"},"nodeType":"YulFunctionCall","src":"9868:47:8"},"nodeType":"YulExpressionStatement","src":"9868:47:8"},{"nodeType":"YulAssignment","src":"9924:186:8","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10096:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"10105:4:8"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9932:163:8"},"nodeType":"YulFunctionCall","src":"9932:178:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9924:4:8"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9794:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9806:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9817:4:8","type":""}],"src":"9604:513:8"},{"body":{"nodeType":"YulBlock","src":"10188:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10205:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10228:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10210:17:8"},"nodeType":"YulFunctionCall","src":"10210:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10198:6:8"},"nodeType":"YulFunctionCall","src":"10198:37:8"},"nodeType":"YulExpressionStatement","src":"10198:37:8"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10176:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10183:3:8","type":""}],"src":"10123:118:8"},{"body":{"nodeType":"YulBlock","src":"10345:124:8","statements":[{"nodeType":"YulAssignment","src":"10355:26:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10367:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10378:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10363:3:8"},"nodeType":"YulFunctionCall","src":"10363:18:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10355:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10435:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10448:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"10459:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10444:3:8"},"nodeType":"YulFunctionCall","src":"10444:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10391:43:8"},"nodeType":"YulFunctionCall","src":"10391:71:8"},"nodeType":"YulExpressionStatement","src":"10391:71:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10317:9:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10329:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10340:4:8","type":""}],"src":"10247:222:8"},{"body":{"nodeType":"YulBlock","src":"10503:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10520:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10523:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10513:6:8"},"nodeType":"YulFunctionCall","src":"10513:88:8"},"nodeType":"YulExpressionStatement","src":"10513:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10617:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10620:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10610:6:8"},"nodeType":"YulFunctionCall","src":"10610:15:8"},"nodeType":"YulExpressionStatement","src":"10610:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10641:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10644:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10634:6:8"},"nodeType":"YulFunctionCall","src":"10634:15:8"},"nodeType":"YulExpressionStatement","src":"10634:15:8"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10475:180:8"},{"body":{"nodeType":"YulBlock","src":"10705:147:8","statements":[{"nodeType":"YulAssignment","src":"10715:25:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10738:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10720:17:8"},"nodeType":"YulFunctionCall","src":"10720:20:8"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"10715:1:8"}]},{"nodeType":"YulAssignment","src":"10749:25:8","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10772:1:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10754:17:8"},"nodeType":"YulFunctionCall","src":"10754:20:8"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"10749:1:8"}]},{"nodeType":"YulAssignment","src":"10783:16:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10794:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"10797:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10790:3:8"},"nodeType":"YulFunctionCall","src":"10790:9:8"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10783:3:8"}]},{"body":{"nodeType":"YulBlock","src":"10823:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10825:16:8"},"nodeType":"YulFunctionCall","src":"10825:18:8"},"nodeType":"YulExpressionStatement","src":"10825:18:8"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10815:1:8"},{"name":"sum","nodeType":"YulIdentifier","src":"10818:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10812:2:8"},"nodeType":"YulFunctionCall","src":"10812:10:8"},"nodeType":"YulIf","src":"10809:36:8"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10692:1:8","type":""},{"name":"y","nodeType":"YulTypedName","src":"10695:1:8","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"10701:3:8","type":""}],"src":"10661:191:8"},{"body":{"nodeType":"YulBlock","src":"10886:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10903:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10906:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10896:6:8"},"nodeType":"YulFunctionCall","src":"10896:88:8"},"nodeType":"YulExpressionStatement","src":"10896:88:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11000:1:8","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11003:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10993:6:8"},"nodeType":"YulFunctionCall","src":"10993:15:8"},"nodeType":"YulExpressionStatement","src":"10993:15:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11024:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11027:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11017:6:8"},"nodeType":"YulFunctionCall","src":"11017:15:8"},"nodeType":"YulExpressionStatement","src":"11017:15:8"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10858:180:8"},{"body":{"nodeType":"YulBlock","src":"11095:269:8","statements":[{"nodeType":"YulAssignment","src":"11105:22:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11119:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"11125:1:8","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11115:3:8"},"nodeType":"YulFunctionCall","src":"11115:12:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11105:6:8"}]},{"nodeType":"YulVariableDeclaration","src":"11136:38:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11166:4:8"},{"kind":"number","nodeType":"YulLiteral","src":"11172:1:8","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11162:3:8"},"nodeType":"YulFunctionCall","src":"11162:12:8"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"11140:18:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"11213:51:8","statements":[{"nodeType":"YulAssignment","src":"11227:27:8","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11241:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"11249:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11237:3:8"},"nodeType":"YulFunctionCall","src":"11237:17:8"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11227:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11193:18:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11186:6:8"},"nodeType":"YulFunctionCall","src":"11186:26:8"},"nodeType":"YulIf","src":"11183:81:8"},{"body":{"nodeType":"YulBlock","src":"11316:42:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"11330:16:8"},"nodeType":"YulFunctionCall","src":"11330:18:8"},"nodeType":"YulExpressionStatement","src":"11330:18:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11280:18:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11303:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"11311:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11300:2:8"},"nodeType":"YulFunctionCall","src":"11300:14:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11277:2:8"},"nodeType":"YulFunctionCall","src":"11277:38:8"},"nodeType":"YulIf","src":"11274:84:8"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11079:4:8","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11088:6:8","type":""}],"src":"11044:320:8"},{"body":{"nodeType":"YulBlock","src":"11424:87:8","statements":[{"nodeType":"YulAssignment","src":"11434:11:8","value":{"name":"ptr","nodeType":"YulIdentifier","src":"11442:3:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11434:4:8"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11462:1:8","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"11465:3:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11455:6:8"},"nodeType":"YulFunctionCall","src":"11455:14:8"},"nodeType":"YulExpressionStatement","src":"11455:14:8"},{"nodeType":"YulAssignment","src":"11478:26:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11496:1:8","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11499:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"11486:9:8"},"nodeType":"YulFunctionCall","src":"11486:18:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11478:4:8"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11411:3:8","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"11419:4:8","type":""}],"src":"11370:141:8"},{"body":{"nodeType":"YulBlock","src":"11561:49:8","statements":[{"nodeType":"YulAssignment","src":"11571:33:8","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11589:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"11596:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11585:3:8"},"nodeType":"YulFunctionCall","src":"11585:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"11601:2:8","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11581:3:8"},"nodeType":"YulFunctionCall","src":"11581:23:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11571:6:8"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11544:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11554:6:8","type":""}],"src":"11517:93:8"},{"body":{"nodeType":"YulBlock","src":"11669:54:8","statements":[{"nodeType":"YulAssignment","src":"11679:37:8","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"11704:4:8"},{"name":"value","nodeType":"YulIdentifier","src":"11710:5:8"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11700:3:8"},"nodeType":"YulFunctionCall","src":"11700:16:8"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"11679:8:8"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"11644:4:8","type":""},{"name":"value","nodeType":"YulTypedName","src":"11650:5:8","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"11660:8:8","type":""}],"src":"11616:107:8"},{"body":{"nodeType":"YulBlock","src":"11805:317:8","statements":[{"nodeType":"YulVariableDeclaration","src":"11815:35:8","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"11836:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"11848:1:8","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11832:3:8"},"nodeType":"YulFunctionCall","src":"11832:18:8"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"11819:9:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11859:109:8","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"11890:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"11901:66:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"11871:18:8"},"nodeType":"YulFunctionCall","src":"11871:97:8"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"11863:4:8","type":""}]},{"nodeType":"YulAssignment","src":"11977:51:8","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"12008:9:8"},{"name":"toInsert","nodeType":"YulIdentifier","src":"12019:8:8"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"11989:18:8"},"nodeType":"YulFunctionCall","src":"11989:39:8"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"11977:8:8"}]},{"nodeType":"YulAssignment","src":"12037:30:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12050:5:8"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"12061:4:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12057:3:8"},"nodeType":"YulFunctionCall","src":"12057:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12046:3:8"},"nodeType":"YulFunctionCall","src":"12046:21:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12037:5:8"}]},{"nodeType":"YulAssignment","src":"12076:40:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12089:5:8"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"12100:8:8"},{"name":"mask","nodeType":"YulIdentifier","src":"12110:4:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12096:3:8"},"nodeType":"YulFunctionCall","src":"12096:19:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"12086:2:8"},"nodeType":"YulFunctionCall","src":"12086:30:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12076:6:8"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11766:5:8","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"11773:10:8","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"11785:8:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11798:6:8","type":""}],"src":"11729:393:8"},{"body":{"nodeType":"YulBlock","src":"12160:28:8","statements":[{"nodeType":"YulAssignment","src":"12170:12:8","value":{"name":"value","nodeType":"YulIdentifier","src":"12177:5:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12170:3:8"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12146:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12156:3:8","type":""}],"src":"12128:60:8"},{"body":{"nodeType":"YulBlock","src":"12254:82:8","statements":[{"nodeType":"YulAssignment","src":"12264:66:8","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12322:5:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12304:17:8"},"nodeType":"YulFunctionCall","src":"12304:24:8"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"12295:8:8"},"nodeType":"YulFunctionCall","src":"12295:34:8"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12277:17:8"},"nodeType":"YulFunctionCall","src":"12277:53:8"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12264:9:8"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12234:5:8","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12244:9:8","type":""}],"src":"12194:142:8"},{"body":{"nodeType":"YulBlock","src":"12389:28:8","statements":[{"nodeType":"YulAssignment","src":"12399:12:8","value":{"name":"value","nodeType":"YulIdentifier","src":"12406:5:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12399:3:8"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12375:5:8","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12385:3:8","type":""}],"src":"12342:75:8"},{"body":{"nodeType":"YulBlock","src":"12499:193:8","statements":[{"nodeType":"YulVariableDeclaration","src":"12509:63:8","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"12564:7:8"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12533:30:8"},"nodeType":"YulFunctionCall","src":"12533:39:8"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"12513:16:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12588:4:8"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12628:4:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12622:5:8"},"nodeType":"YulFunctionCall","src":"12622:11:8"},{"name":"offset","nodeType":"YulIdentifier","src":"12635:6:8"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"12667:16:8"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"12643:23:8"},"nodeType":"YulFunctionCall","src":"12643:41:8"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"12594:27:8"},"nodeType":"YulFunctionCall","src":"12594:91:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12581:6:8"},"nodeType":"YulFunctionCall","src":"12581:105:8"},"nodeType":"YulExpressionStatement","src":"12581:105:8"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"12476:4:8","type":""},{"name":"offset","nodeType":"YulTypedName","src":"12482:6:8","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"12490:7:8","type":""}],"src":"12423:269:8"},{"body":{"nodeType":"YulBlock","src":"12747:24:8","statements":[{"nodeType":"YulAssignment","src":"12757:8:8","value":{"kind":"number","nodeType":"YulLiteral","src":"12764:1:8","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12757:3:8"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12743:3:8","type":""}],"src":"12698:73:8"},{"body":{"nodeType":"YulBlock","src":"12830:136:8","statements":[{"nodeType":"YulVariableDeclaration","src":"12840:46:8","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"12854:30:8"},"nodeType":"YulFunctionCall","src":"12854:32:8"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"12844:6:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12939:4:8"},{"name":"offset","nodeType":"YulIdentifier","src":"12945:6:8"},{"name":"zero_0","nodeType":"YulIdentifier","src":"12953:6:8"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12895:43:8"},"nodeType":"YulFunctionCall","src":"12895:65:8"},"nodeType":"YulExpressionStatement","src":"12895:65:8"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"12816:4:8","type":""},{"name":"offset","nodeType":"YulTypedName","src":"12822:6:8","type":""}],"src":"12777:189:8"},{"body":{"nodeType":"YulBlock","src":"13022:136:8","statements":[{"body":{"nodeType":"YulBlock","src":"13089:63:8","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13133:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"13140:1:8","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"13103:29:8"},"nodeType":"YulFunctionCall","src":"13103:39:8"},"nodeType":"YulExpressionStatement","src":"13103:39:8"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13042:5:8"},{"name":"end","nodeType":"YulIdentifier","src":"13049:3:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13039:2:8"},"nodeType":"YulFunctionCall","src":"13039:14:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13054:26:8","statements":[{"nodeType":"YulAssignment","src":"13056:22:8","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13069:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"13076:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13065:3:8"},"nodeType":"YulFunctionCall","src":"13065:13:8"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"13056:5:8"}]}]},"pre":{"nodeType":"YulBlock","src":"13036:2:8","statements":[]},"src":"13032:120:8"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"13010:5:8","type":""},{"name":"end","nodeType":"YulTypedName","src":"13017:3:8","type":""}],"src":"12972:186:8"},{"body":{"nodeType":"YulBlock","src":"13243:464:8","statements":[{"body":{"nodeType":"YulBlock","src":"13269:431:8","statements":[{"nodeType":"YulVariableDeclaration","src":"13283:54:8","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13331:5:8"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"13299:31:8"},"nodeType":"YulFunctionCall","src":"13299:38:8"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"13287:8:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13350:63:8","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"13373:8:8"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"13401:10:8"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"13383:17:8"},"nodeType":"YulFunctionCall","src":"13383:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13369:3:8"},"nodeType":"YulFunctionCall","src":"13369:44:8"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"13354:11:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"13570:27:8","statements":[{"nodeType":"YulAssignment","src":"13572:23:8","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"13587:8:8"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"13572:11:8"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"13554:10:8"},{"kind":"number","nodeType":"YulLiteral","src":"13566:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13551:2:8"},"nodeType":"YulFunctionCall","src":"13551:18:8"},"nodeType":"YulIf","src":"13548:49:8"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"13639:11:8"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"13656:8:8"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"13684:3:8"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"13666:17:8"},"nodeType":"YulFunctionCall","src":"13666:22:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13652:3:8"},"nodeType":"YulFunctionCall","src":"13652:37:8"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"13610:28:8"},"nodeType":"YulFunctionCall","src":"13610:80:8"},"nodeType":"YulExpressionStatement","src":"13610:80:8"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"13260:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"13265:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13257:2:8"},"nodeType":"YulFunctionCall","src":"13257:11:8"},"nodeType":"YulIf","src":"13254:446:8"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"13219:5:8","type":""},{"name":"len","nodeType":"YulTypedName","src":"13226:3:8","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"13231:10:8","type":""}],"src":"13164:543:8"},{"body":{"nodeType":"YulBlock","src":"13776:54:8","statements":[{"nodeType":"YulAssignment","src":"13786:37:8","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"13811:4:8"},{"name":"value","nodeType":"YulIdentifier","src":"13817:5:8"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13807:3:8"},"nodeType":"YulFunctionCall","src":"13807:16:8"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"13786:8:8"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"13751:4:8","type":""},{"name":"value","nodeType":"YulTypedName","src":"13757:5:8","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"13767:8:8","type":""}],"src":"13713:117:8"},{"body":{"nodeType":"YulBlock","src":"13887:118:8","statements":[{"nodeType":"YulVariableDeclaration","src":"13897:68:8","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13946:1:8","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"13949:5:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13942:3:8"},"nodeType":"YulFunctionCall","src":"13942:13:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13961:1:8","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13957:3:8"},"nodeType":"YulFunctionCall","src":"13957:6:8"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"13913:28:8"},"nodeType":"YulFunctionCall","src":"13913:51:8"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13909:3:8"},"nodeType":"YulFunctionCall","src":"13909:56:8"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"13901:4:8","type":""}]},{"nodeType":"YulAssignment","src":"13974:25:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13988:4:8"},{"name":"mask","nodeType":"YulIdentifier","src":"13994:4:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13984:3:8"},"nodeType":"YulFunctionCall","src":"13984:15:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"13974:6:8"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"13864:4:8","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"13870:5:8","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"13880:6:8","type":""}],"src":"13836:169:8"},{"body":{"nodeType":"YulBlock","src":"14091:214:8","statements":[{"nodeType":"YulAssignment","src":"14224:37:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14251:4:8"},{"name":"len","nodeType":"YulIdentifier","src":"14257:3:8"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"14232:18:8"},"nodeType":"YulFunctionCall","src":"14232:29:8"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14224:4:8"}]},{"nodeType":"YulAssignment","src":"14270:29:8","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14281:4:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14291:1:8","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"14294:3:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14287:3:8"},"nodeType":"YulFunctionCall","src":"14287:11:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14278:2:8"},"nodeType":"YulFunctionCall","src":"14278:21:8"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"14270:4:8"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14072:4:8","type":""},{"name":"len","nodeType":"YulTypedName","src":"14078:3:8","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"14086:4:8","type":""}],"src":"14010:295:8"},{"body":{"nodeType":"YulBlock","src":"14402:1303:8","statements":[{"nodeType":"YulVariableDeclaration","src":"14413:51:8","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14460:3:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14427:32:8"},"nodeType":"YulFunctionCall","src":"14427:37:8"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"14417:6:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"14549:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14551:16:8"},"nodeType":"YulFunctionCall","src":"14551:18:8"},"nodeType":"YulExpressionStatement","src":"14551:18:8"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14521:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"14529:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14518:2:8"},"nodeType":"YulFunctionCall","src":"14518:30:8"},"nodeType":"YulIf","src":"14515:56:8"},{"nodeType":"YulVariableDeclaration","src":"14581:52:8","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14627:4:8"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14621:5:8"},"nodeType":"YulFunctionCall","src":"14621:11:8"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"14595:25:8"},"nodeType":"YulFunctionCall","src":"14595:38:8"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"14585:6:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14726:4:8"},{"name":"oldLen","nodeType":"YulIdentifier","src":"14732:6:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"14740:6:8"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"14680:45:8"},"nodeType":"YulFunctionCall","src":"14680:67:8"},"nodeType":"YulExpressionStatement","src":"14680:67:8"},{"nodeType":"YulVariableDeclaration","src":"14757:18:8","value":{"kind":"number","nodeType":"YulLiteral","src":"14774:1:8","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"14761:9:8","type":""}]},{"nodeType":"YulAssignment","src":"14785:17:8","value":{"kind":"number","nodeType":"YulLiteral","src":"14798:4:8","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"14785:9:8"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"14849:611:8","statements":[{"nodeType":"YulVariableDeclaration","src":"14863:37:8","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14882:6:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14894:4:8","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14890:3:8"},"nodeType":"YulFunctionCall","src":"14890:9:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14878:3:8"},"nodeType":"YulFunctionCall","src":"14878:22:8"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"14867:7:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14914:51:8","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14960:4:8"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"14928:31:8"},"nodeType":"YulFunctionCall","src":"14928:37:8"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"14918:6:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14978:10:8","value":{"kind":"number","nodeType":"YulLiteral","src":"14987:1:8","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14982:1:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"15046:163:8","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15071:6:8"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15089:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15094:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15085:3:8"},"nodeType":"YulFunctionCall","src":"15085:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15079:5:8"},"nodeType":"YulFunctionCall","src":"15079:26:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15064:6:8"},"nodeType":"YulFunctionCall","src":"15064:42:8"},"nodeType":"YulExpressionStatement","src":"15064:42:8"},{"nodeType":"YulAssignment","src":"15123:24:8","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15137:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"15145:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15133:3:8"},"nodeType":"YulFunctionCall","src":"15133:14:8"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15123:6:8"}]},{"nodeType":"YulAssignment","src":"15164:31:8","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"15181:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"15192:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15177:3:8"},"nodeType":"YulFunctionCall","src":"15177:18:8"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"15164:9:8"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15012:1:8"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"15015:7:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15009:2:8"},"nodeType":"YulFunctionCall","src":"15009:14:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15024:21:8","statements":[{"nodeType":"YulAssignment","src":"15026:17:8","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15035:1:8"},{"kind":"number","nodeType":"YulLiteral","src":"15038:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15031:3:8"},"nodeType":"YulFunctionCall","src":"15031:12:8"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"15026:1:8"}]}]},"pre":{"nodeType":"YulBlock","src":"15005:3:8","statements":[]},"src":"15001:208:8"},{"body":{"nodeType":"YulBlock","src":"15245:156:8","statements":[{"nodeType":"YulVariableDeclaration","src":"15263:43:8","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15290:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15295:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15286:3:8"},"nodeType":"YulFunctionCall","src":"15286:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15280:5:8"},"nodeType":"YulFunctionCall","src":"15280:26:8"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"15267:9:8","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15330:6:8"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"15357:9:8"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"15372:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"15380:4:8","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15368:3:8"},"nodeType":"YulFunctionCall","src":"15368:17:8"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"15338:18:8"},"nodeType":"YulFunctionCall","src":"15338:48:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15323:6:8"},"nodeType":"YulFunctionCall","src":"15323:64:8"},"nodeType":"YulExpressionStatement","src":"15323:64:8"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"15228:7:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"15237:6:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15225:2:8"},"nodeType":"YulFunctionCall","src":"15225:19:8"},"nodeType":"YulIf","src":"15222:179:8"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15421:4:8"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"15435:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"15443:1:8","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15431:3:8"},"nodeType":"YulFunctionCall","src":"15431:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"15447:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15427:3:8"},"nodeType":"YulFunctionCall","src":"15427:22:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15414:6:8"},"nodeType":"YulFunctionCall","src":"15414:36:8"},"nodeType":"YulExpressionStatement","src":"15414:36:8"}]},"nodeType":"YulCase","src":"14842:618:8","value":{"kind":"number","nodeType":"YulLiteral","src":"14847:1:8","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"15477:222:8","statements":[{"nodeType":"YulVariableDeclaration","src":"15491:14:8","value":{"kind":"number","nodeType":"YulLiteral","src":"15504:1:8","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"15495:5:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"15528:67:8","statements":[{"nodeType":"YulAssignment","src":"15546:35:8","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15565:3:8"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15570:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15561:3:8"},"nodeType":"YulFunctionCall","src":"15561:19:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15555:5:8"},"nodeType":"YulFunctionCall","src":"15555:26:8"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15546:5:8"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"15521:6:8"},"nodeType":"YulIf","src":"15518:77:8"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15615:4:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15674:5:8"},{"name":"newLen","nodeType":"YulIdentifier","src":"15681:6:8"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"15621:52:8"},"nodeType":"YulFunctionCall","src":"15621:67:8"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15608:6:8"},"nodeType":"YulFunctionCall","src":"15608:81:8"},"nodeType":"YulExpressionStatement","src":"15608:81:8"}]},"nodeType":"YulCase","src":"15469:230:8","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14822:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"14830:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14819:2:8"},"nodeType":"YulFunctionCall","src":"14819:14:8"},"nodeType":"YulSwitch","src":"14812:887:8"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"14391:4:8","type":""},{"name":"src","nodeType":"YulTypedName","src":"14397:3:8","type":""}],"src":"14310:1395:8"},{"body":{"nodeType":"YulBlock","src":"15776:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15793:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15816:5:8"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"15798:17:8"},"nodeType":"YulFunctionCall","src":"15798:24:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15786:6:8"},"nodeType":"YulFunctionCall","src":"15786:37:8"},"nodeType":"YulExpressionStatement","src":"15786:37:8"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15764:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15771:3:8","type":""}],"src":"15711:118:8"},{"body":{"nodeType":"YulBlock","src":"15895:82:8","statements":[{"nodeType":"YulAssignment","src":"15905:66:8","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15963:5:8"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"15945:17:8"},"nodeType":"YulFunctionCall","src":"15945:24:8"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"15936:8:8"},"nodeType":"YulFunctionCall","src":"15936:34:8"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"15918:17:8"},"nodeType":"YulFunctionCall","src":"15918:53:8"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"15905:9:8"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15875:5:8","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"15885:9:8","type":""}],"src":"15835:142:8"},{"body":{"nodeType":"YulBlock","src":"16043:66:8","statements":[{"nodeType":"YulAssignment","src":"16053:50:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16097:5:8"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"16066:30:8"},"nodeType":"YulFunctionCall","src":"16066:37:8"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"16053:9:8"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16023:5:8","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"16033:9:8","type":""}],"src":"15983:126:8"},{"body":{"nodeType":"YulBlock","src":"16183:66:8","statements":[{"nodeType":"YulAssignment","src":"16193:50:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16237:5:8"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"16206:30:8"},"nodeType":"YulFunctionCall","src":"16206:37:8"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"16193:9:8"}]}]},"name":"convert_t_address_payable_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16163:5:8","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"16173:9:8","type":""}],"src":"16115:134:8"},{"body":{"nodeType":"YulBlock","src":"16328:74:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16345:3:8"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16389:5:8"}],"functionName":{"name":"convert_t_address_payable_to_t_address","nodeType":"YulIdentifier","src":"16350:38:8"},"nodeType":"YulFunctionCall","src":"16350:45:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16338:6:8"},"nodeType":"YulFunctionCall","src":"16338:58:8"},"nodeType":"YulExpressionStatement","src":"16338:58:8"}]},"name":"abi_encode_t_address_payable_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16316:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16323:3:8","type":""}],"src":"16255:147:8"},{"body":{"nodeType":"YulBlock","src":"16504:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16521:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"16526:6:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16514:6:8"},"nodeType":"YulFunctionCall","src":"16514:19:8"},"nodeType":"YulExpressionStatement","src":"16514:19:8"},{"nodeType":"YulAssignment","src":"16542:29:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16561:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"16566:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16557:3:8"},"nodeType":"YulFunctionCall","src":"16557:14:8"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16542:11:8"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16476:3:8","type":""},{"name":"length","nodeType":"YulTypedName","src":"16481:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16492:11:8","type":""}],"src":"16408:169:8"},{"body":{"nodeType":"YulBlock","src":"16675:285:8","statements":[{"nodeType":"YulVariableDeclaration","src":"16685:53:8","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16732:5:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16699:32:8"},"nodeType":"YulFunctionCall","src":"16699:39:8"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16689:6:8","type":""}]},{"nodeType":"YulAssignment","src":"16747:78:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16813:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"16818:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16754:58:8"},"nodeType":"YulFunctionCall","src":"16754:71:8"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16747:3:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16873:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"16880:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16869:3:8"},"nodeType":"YulFunctionCall","src":"16869:16:8"},{"name":"pos","nodeType":"YulIdentifier","src":"16887:3:8"},{"name":"length","nodeType":"YulIdentifier","src":"16892:6:8"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"16834:34:8"},"nodeType":"YulFunctionCall","src":"16834:65:8"},"nodeType":"YulExpressionStatement","src":"16834:65:8"},{"nodeType":"YulAssignment","src":"16908:46:8","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16919:3:8"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16946:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"16924:21:8"},"nodeType":"YulFunctionCall","src":"16924:29:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16915:3:8"},"nodeType":"YulFunctionCall","src":"16915:39:8"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16908:3:8"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16656:5:8","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16663:3:8","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16671:3:8","type":""}],"src":"16583:377:8"},{"body":{"nodeType":"YulBlock","src":"17252:687:8","statements":[{"nodeType":"YulAssignment","src":"17262:27:8","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17274:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"17285:3:8","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17270:3:8"},"nodeType":"YulFunctionCall","src":"17270:19:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17262:4:8"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17343:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17356:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"17367:1:8","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17352:3:8"},"nodeType":"YulFunctionCall","src":"17352:17:8"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17299:43:8"},"nodeType":"YulFunctionCall","src":"17299:71:8"},"nodeType":"YulExpressionStatement","src":"17299:71:8"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17432:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17445:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"17456:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17441:3:8"},"nodeType":"YulFunctionCall","src":"17441:18:8"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17380:51:8"},"nodeType":"YulFunctionCall","src":"17380:80:8"},"nodeType":"YulExpressionStatement","src":"17380:80:8"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17514:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17527:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"17538:2:8","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17523:3:8"},"nodeType":"YulFunctionCall","src":"17523:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17470:43:8"},"nodeType":"YulFunctionCall","src":"17470:72:8"},"nodeType":"YulExpressionStatement","src":"17470:72:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17563:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"17574:2:8","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17559:3:8"},"nodeType":"YulFunctionCall","src":"17559:18:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17583:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"17589:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17579:3:8"},"nodeType":"YulFunctionCall","src":"17579:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17552:6:8"},"nodeType":"YulFunctionCall","src":"17552:48:8"},"nodeType":"YulExpressionStatement","src":"17552:48:8"},{"nodeType":"YulAssignment","src":"17609:86:8","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17681:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"17690:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17617:63:8"},"nodeType":"YulFunctionCall","src":"17617:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17609:4:8"}]},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"17749:6:8"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17762:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"17773:3:8","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17758:3:8"},"nodeType":"YulFunctionCall","src":"17758:19:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17705:43:8"},"nodeType":"YulFunctionCall","src":"17705:73:8"},"nodeType":"YulExpressionStatement","src":"17705:73:8"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17799:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"17810:3:8","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17795:3:8"},"nodeType":"YulFunctionCall","src":"17795:19:8"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17820:4:8"},{"name":"headStart","nodeType":"YulIdentifier","src":"17826:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17816:3:8"},"nodeType":"YulFunctionCall","src":"17816:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17788:6:8"},"nodeType":"YulFunctionCall","src":"17788:49:8"},"nodeType":"YulExpressionStatement","src":"17788:49:8"},{"nodeType":"YulAssignment","src":"17846:86:8","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"17918:6:8"},{"name":"tail","nodeType":"YulIdentifier","src":"17927:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17854:63:8"},"nodeType":"YulFunctionCall","src":"17854:78:8"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17846:4:8"}]}]},"name":"abi_encode_tuple_t_address_t_address_payable_t_uint256_t_string_memory_ptr_t_uint256_t_string_memory_ptr__to_t_address_t_address_t_uint256_t_string_memory_ptr_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17184:9:8","type":""},{"name":"value5","nodeType":"YulTypedName","src":"17196:6:8","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17204:6:8","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17212:6:8","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17220:6:8","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17228:6:8","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17236:6:8","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17247:4:8","type":""}],"src":"16966:973:8"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct Transaction.TransactionDetail -> struct Transaction.TransactionDetail\n    function abi_encode_t_struct$_TransactionDetail_$1159_memory_ptr_to_t_struct$_TransactionDetail_$1159_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // sender\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // message\n\n            let memberValue0 := mload(add(value, 0x60))\n\n            mstore(add(pos, 0x60), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // datetime\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // keyword\n\n            let memberValue0 := mload(add(value, 0xa0))\n\n            mstore(add(pos, 0xa0), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_TransactionDetail_$1159_memory_ptr_to_t_struct$_TransactionDetail_$1159_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_TransactionDetail_$1159_memory_ptr_to_t_struct$_TransactionDetail_$1159_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Transaction.TransactionDetail[] -> struct Transaction.TransactionDetail[]\n    function abi_encode_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_TransactionDetail_$1159_memory_ptr_to_t_struct$_TransactionDetail_$1159_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TransactionDetail_$1159_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256_t_string_memory_ptr_t_uint256_t_string_memory_ptr__to_t_address_t_address_t_uint256_t_string_memory_ptr_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value5,  tail)\n\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806307e05ed11461004657806327506f53146100625780632e7700f014610080575b600080fd5b610060600480360381019061005b919061068c565b61009e565b005b61006a610252565b604051610077919061092c565b60405180910390f35b610088610495565b604051610095919061095d565b60405180910390f35b60016000808282546100b091906109a7565b9250508190555060016040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200142815260200183815250908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030190816101e89190610be7565b506080820151816004015560a08201518160050190816102089190610be7565b5050507f416cfa4330a4565f45c2fd2dd4826a83a37443aba2ce6f79477c7355afac35fa33858585428660405161024496959493929190610d67565b60405180910390a150505050565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561048c57838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201805461035f90610a0a565b80601f016020809104026020016040519081016040528092919081815260200182805461038b90610a0a565b80156103d85780601f106103ad576101008083540402835291602001916103d8565b820191906000526020600020905b8154815290600101906020018083116103bb57829003601f168201915b50505050508152602001600482015481526020016005820180546103fb90610a0a565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610a0a565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b50505050508152505081526020019060010190610276565b50505050905090565b60008054905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104dd826104b2565b9050919050565b6104ed816104d2565b81146104f857600080fd5b50565b60008135905061050a816104e4565b92915050565b6000819050919050565b61052381610510565b811461052e57600080fd5b50565b6000813590506105408161051a565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61059982610550565b810181811067ffffffffffffffff821117156105b8576105b7610561565b5b80604052505050565b60006105cb61049e565b90506105d78282610590565b919050565b600067ffffffffffffffff8211156105f7576105f6610561565b5b61060082610550565b9050602081019050919050565b82818337600083830152505050565b600061062f61062a846105dc565b6105c1565b90508281526020810184848401111561064b5761064a61054b565b5b61065684828561060d565b509392505050565b600082601f83011261067357610672610546565b5b813561068384826020860161061c565b91505092915050565b600080600080608085870312156106a6576106a56104a8565b5b60006106b4878288016104fb565b94505060206106c587828801610531565b935050604085013567ffffffffffffffff8111156106e6576106e56104ad565b5b6106f28782880161065e565b925050606085013567ffffffffffffffff811115610713576107126104ad565b5b61071f8782880161065e565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000610762826104b2565b9050919050565b61077281610757565b82525050565b61078181610510565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107c15780820151818401526020810190506107a6565b60008484015250505050565b60006107d882610787565b6107e28185610792565b93506107f28185602086016107a3565b6107fb81610550565b840191505092915050565b600060c08301600083015161081e6000860182610769565b5060208301516108316020860182610769565b5060408301516108446040860182610778565b506060830151848203606086015261085c82826107cd565b91505060808301516108716080860182610778565b5060a083015184820360a086015261088982826107cd565b9150508091505092915050565b60006108a28383610806565b905092915050565b6000602082019050919050565b60006108c28261072b565b6108cc8185610736565b9350836020820285016108de85610747565b8060005b8581101561091a57848403895281516108fb8582610896565b9450610906836108aa565b925060208a019950506001810190506108e2565b50829750879550505050505092915050565b6000602082019050818103600083015261094681846108b7565b905092915050565b61095781610510565b82525050565b6000602082019050610972600083018461094e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b282610510565b91506109bd83610510565b92508282019050808211156109d5576109d4610978565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610a2257607f821691505b602082108103610a3557610a346109db565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610a9d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610a60565b610aa78683610a60565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610ae4610adf610ada84610510565b610abf565b610510565b9050919050565b6000819050919050565b610afe83610ac9565b610b12610b0a82610aeb565b848454610a6d565b825550505050565b600090565b610b27610b1a565b610b32818484610af5565b505050565b5b81811015610b5657610b4b600082610b1f565b600181019050610b38565b5050565b601f821115610b9b57610b6c81610a3b565b610b7584610a50565b81016020851015610b84578190505b610b98610b9085610a50565b830182610b37565b50505b505050565b600082821c905092915050565b6000610bbe60001984600802610ba0565b1980831691505092915050565b6000610bd78383610bad565b9150826002028217905092915050565b610bf082610787565b67ffffffffffffffff811115610c0957610c08610561565b5b610c138254610a0a565b610c1e828285610b5a565b600060209050601f831160018114610c515760008415610c3f578287015190505b610c498582610bcb565b865550610cb1565b601f198416610c5f86610a3b565b60005b82811015610c8757848901518255600182019150602085019450602081019050610c62565b86831015610ca45784890151610ca0601f891682610bad565b8355505b6001600288020188555050505b505050505050565b610cc281610757565b82525050565b6000610ce3610cde610cd9846104b2565b610abf565b6104b2565b9050919050565b6000610cf582610cc8565b9050919050565b6000610d0782610cea565b9050919050565b610d1781610cfc565b82525050565b600082825260208201905092915050565b6000610d3982610787565b610d438185610d1d565b9350610d538185602086016107a3565b610d5c81610550565b840191505092915050565b600060c082019050610d7c6000830189610cb9565b610d896020830188610d0e565b610d96604083018761094e565b8181036060830152610da88186610d2e565b9050610db7608083018561094e565b81810360a0830152610dc98184610d2e565b905097965050505050505056fea264697066735822122071ec76cedeadda382edcf6a87c15af1d44827fdd27217493acdb9aee0670d5b264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E05ED1 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x27506F53 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0x2E7700F0 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x68C JUMP JUMPDEST PUSH2 0x9E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x92C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH2 0x495 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x95D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0x9A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP2 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST POP POP POP PUSH32 0x416CFA4330A4565F45C2FD2DD4826A83A37443ABA2CE6F79477C7355AFAC35FA CALLER DUP6 DUP6 DUP6 TIMESTAMP DUP7 PUSH1 0x40 MLOAD PUSH2 0x244 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x48C JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x35F SWAP1 PUSH2 0xA0A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38B SWAP1 PUSH2 0xA0A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xA0A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xA0A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x276 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DD DUP3 PUSH2 0x4B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4ED DUP2 PUSH2 0x4D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x50A DUP2 PUSH2 0x4E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x523 DUP2 PUSH2 0x510 JUMP JUMPDEST DUP2 EQ PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x540 DUP2 PUSH2 0x51A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x599 DUP3 PUSH2 0x550 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x5B8 JUMPI PUSH2 0x5B7 PUSH2 0x561 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CB PUSH2 0x49E JUMP JUMPDEST SWAP1 POP PUSH2 0x5D7 DUP3 DUP3 PUSH2 0x590 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5F7 JUMPI PUSH2 0x5F6 PUSH2 0x561 JUMP JUMPDEST JUMPDEST PUSH2 0x600 DUP3 PUSH2 0x550 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62F PUSH2 0x62A DUP5 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x64B JUMPI PUSH2 0x64A PUSH2 0x54B JUMP JUMPDEST JUMPDEST PUSH2 0x656 DUP5 DUP3 DUP6 PUSH2 0x60D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x673 JUMPI PUSH2 0x672 PUSH2 0x546 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x683 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x61C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6A6 JUMPI PUSH2 0x6A5 PUSH2 0x4A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6B4 DUP8 DUP3 DUP9 ADD PUSH2 0x4FB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x6C5 DUP8 DUP3 DUP9 ADD PUSH2 0x531 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6E6 JUMPI PUSH2 0x6E5 PUSH2 0x4AD JUMP JUMPDEST JUMPDEST PUSH2 0x6F2 DUP8 DUP3 DUP9 ADD PUSH2 0x65E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x713 JUMPI PUSH2 0x712 PUSH2 0x4AD JUMP JUMPDEST JUMPDEST PUSH2 0x71F DUP8 DUP3 DUP9 ADD PUSH2 0x65E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x762 DUP3 PUSH2 0x4B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x772 DUP2 PUSH2 0x757 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x781 DUP2 PUSH2 0x510 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7C1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D8 DUP3 PUSH2 0x787 JUMP JUMPDEST PUSH2 0x7E2 DUP2 DUP6 PUSH2 0x792 JUMP JUMPDEST SWAP4 POP PUSH2 0x7F2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0x7FB DUP2 PUSH2 0x550 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x81E PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x769 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x831 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x769 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x844 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x778 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x85C DUP3 DUP3 PUSH2 0x7CD JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x871 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x778 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x889 DUP3 DUP3 PUSH2 0x7CD JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A2 DUP4 DUP4 PUSH2 0x806 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C2 DUP3 PUSH2 0x72B JUMP JUMPDEST PUSH2 0x8CC DUP2 DUP6 PUSH2 0x736 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x8DE DUP6 PUSH2 0x747 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x91A JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x8FB DUP6 DUP3 PUSH2 0x896 JUMP JUMPDEST SWAP5 POP PUSH2 0x906 DUP4 PUSH2 0x8AA JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8E2 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x946 DUP2 DUP5 PUSH2 0x8B7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x957 DUP2 PUSH2 0x510 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x972 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x94E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9B2 DUP3 PUSH2 0x510 JUMP JUMPDEST SWAP2 POP PUSH2 0x9BD DUP4 PUSH2 0x510 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x9D5 JUMPI PUSH2 0x9D4 PUSH2 0x978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xA22 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA35 JUMPI PUSH2 0xA34 PUSH2 0x9DB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0xA9D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0xAA7 DUP7 DUP4 PUSH2 0xA60 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE4 PUSH2 0xADF PUSH2 0xADA DUP5 PUSH2 0x510 JUMP JUMPDEST PUSH2 0xABF JUMP JUMPDEST PUSH2 0x510 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAFE DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0xB12 PUSH2 0xB0A DUP3 PUSH2 0xAEB JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xA6D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xB27 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0xB32 DUP2 DUP5 DUP5 PUSH2 0xAF5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB56 JUMPI PUSH2 0xB4B PUSH1 0x0 DUP3 PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xB38 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB9B JUMPI PUSH2 0xB6C DUP2 PUSH2 0xA3B JUMP JUMPDEST PUSH2 0xB75 DUP5 PUSH2 0xA50 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xB84 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xB98 PUSH2 0xB90 DUP6 PUSH2 0xA50 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xB37 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBE PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xBA0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD7 DUP4 DUP4 PUSH2 0xBAD JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBF0 DUP3 PUSH2 0x787 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC09 JUMPI PUSH2 0xC08 PUSH2 0x561 JUMP JUMPDEST JUMPDEST PUSH2 0xC13 DUP3 SLOAD PUSH2 0xA0A JUMP JUMPDEST PUSH2 0xC1E DUP3 DUP3 DUP6 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xC51 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xC3F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xC49 DUP6 DUP3 PUSH2 0xBCB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xCB1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xC5F DUP7 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC87 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC62 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xCA4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xCA0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xBAD JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCC2 DUP2 PUSH2 0x757 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE3 PUSH2 0xCDE PUSH2 0xCD9 DUP5 PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0xABF JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCF5 DUP3 PUSH2 0xCC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD07 DUP3 PUSH2 0xCEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD17 DUP2 PUSH2 0xCFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD39 DUP3 PUSH2 0x787 JUMP JUMPDEST PUSH2 0xD43 DUP2 DUP6 PUSH2 0xD1D JUMP JUMPDEST SWAP4 POP PUSH2 0xD53 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0xD5C DUP2 PUSH2 0x550 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0xD7C PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0xCB9 JUMP JUMPDEST PUSH2 0xD89 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0xD0E JUMP JUMPDEST PUSH2 0xD96 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x94E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xDA8 DUP2 DUP7 PUSH2 0xD2E JUMP JUMPDEST SWAP1 POP PUSH2 0xDB7 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x94E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0xDC9 DUP2 DUP5 PUSH2 0xD2E JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xEC76CEDEADDA382EDCF6A87C15AF1D44827F 0xDD 0x27 0x21 PUSH21 0x93ACDB9AEE0670D5B264736F6C6343000814003300 ","sourceMap":"59:1343:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;521:618;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1145:148;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1299:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;521:618;710:1;690:16;;:21;;;;;;;:::i;:::-;;;;;;;;721:17;757:193;;;;;;;;792:10;757:193;;;;;;820:9;757:193;;;;;;847:6;757:193;;;;871:7;757:193;;;;896:15;757:193;;;;929:7;757:193;;;721:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;976:156;998:10;1022:9;1045:6;1065:7;1086:15;1115:7;976:156;;;;;;;;;;;:::i;:::-;;;;;;;;521:618;;;;:::o;1145:148::-;1220:26;1269:17;1262:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1145:148;:::o;1299:101::-;1351:7;1377:16;;1370:23;;1299:101;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:104::-;511:7;540:24;558:5;540:24;:::i;:::-;529:35;;466:104;;;:::o;576:138::-;657:32;683:5;657:32;:::i;:::-;650:5;647:43;637:71;;704:1;701;694:12;637:71;576:138;:::o;720:155::-;774:5;812:6;799:20;790:29;;828:41;863:5;828:41;:::i;:::-;720:155;;;;:::o;881:77::-;918:7;947:5;936:16;;881:77;;;:::o;964:122::-;1037:24;1055:5;1037:24;:::i;:::-;1030:5;1027:35;1017:63;;1076:1;1073;1066:12;1017:63;964:122;:::o;1092:139::-;1138:5;1176:6;1163:20;1154:29;;1192:33;1219:5;1192:33;:::i;:::-;1092:139;;;;:::o;1237:117::-;1346:1;1343;1336:12;1360:117;1469:1;1466;1459:12;1483:102;1524:6;1575:2;1571:7;1566:2;1559:5;1555:14;1551:28;1541:38;;1483:102;;;:::o;1591:180::-;1639:77;1636:1;1629:88;1736:4;1733:1;1726:15;1760:4;1757:1;1750:15;1777:281;1860:27;1882:4;1860:27;:::i;:::-;1852:6;1848:40;1990:6;1978:10;1975:22;1954:18;1942:10;1939:34;1936:62;1933:88;;;2001:18;;:::i;:::-;1933:88;2041:10;2037:2;2030:22;1820:238;1777:281;;:::o;2064:129::-;2098:6;2125:20;;:::i;:::-;2115:30;;2154:33;2182:4;2174:6;2154:33;:::i;:::-;2064:129;;;:::o;2199:308::-;2261:4;2351:18;2343:6;2340:30;2337:56;;;2373:18;;:::i;:::-;2337:56;2411:29;2433:6;2411:29;:::i;:::-;2403:37;;2495:4;2489;2485:15;2477:23;;2199:308;;;:::o;2513:146::-;2610:6;2605:3;2600;2587:30;2651:1;2642:6;2637:3;2633:16;2626:27;2513:146;;;:::o;2665:425::-;2743:5;2768:66;2784:49;2826:6;2784:49;:::i;:::-;2768:66;:::i;:::-;2759:75;;2857:6;2850:5;2843:21;2895:4;2888:5;2884:16;2933:3;2924:6;2919:3;2915:16;2912:25;2909:112;;;2940:79;;:::i;:::-;2909:112;3030:54;3077:6;3072:3;3067;3030:54;:::i;:::-;2749:341;2665:425;;;;;:::o;3110:340::-;3166:5;3215:3;3208:4;3200:6;3196:17;3192:27;3182:122;;3223:79;;:::i;:::-;3182:122;3340:6;3327:20;3365:79;3440:3;3432:6;3425:4;3417:6;3413:17;3365:79;:::i;:::-;3356:88;;3172:278;3110:340;;;;:::o;3456:1141::-;3570:6;3578;3586;3594;3643:3;3631:9;3622:7;3618:23;3614:33;3611:120;;;3650:79;;:::i;:::-;3611:120;3770:1;3795:61;3848:7;3839:6;3828:9;3824:22;3795:61;:::i;:::-;3785:71;;3741:125;3905:2;3931:53;3976:7;3967:6;3956:9;3952:22;3931:53;:::i;:::-;3921:63;;3876:118;4061:2;4050:9;4046:18;4033:32;4092:18;4084:6;4081:30;4078:117;;;4114:79;;:::i;:::-;4078:117;4219:63;4274:7;4265:6;4254:9;4250:22;4219:63;:::i;:::-;4209:73;;4004:288;4359:2;4348:9;4344:18;4331:32;4390:18;4382:6;4379:30;4376:117;;;4412:79;;:::i;:::-;4376:117;4517:63;4572:7;4563:6;4552:9;4548:22;4517:63;:::i;:::-;4507:73;;4302:288;3456:1141;;;;;;;:::o;4603:149::-;4705:6;4739:5;4733:12;4723:22;;4603:149;;;:::o;4758:219::-;4892:11;4926:6;4921:3;4914:19;4966:4;4961:3;4957:14;4942:29;;4758:219;;;;:::o;4983:167::-;5085:4;5108:3;5100:11;;5138:4;5133:3;5129:14;5121:22;;4983:167;;;:::o;5156:96::-;5193:7;5222:24;5240:5;5222:24;:::i;:::-;5211:35;;5156:96;;;:::o;5258:108::-;5335:24;5353:5;5335:24;:::i;:::-;5330:3;5323:37;5258:108;;:::o;5372:::-;5449:24;5467:5;5449:24;:::i;:::-;5444:3;5437:37;5372:108;;:::o;5486:99::-;5538:6;5572:5;5566:12;5556:22;;5486:99;;;:::o;5591:159::-;5665:11;5699:6;5694:3;5687:19;5739:4;5734:3;5730:14;5715:29;;5591:159;;;;:::o;5756:246::-;5837:1;5847:113;5861:6;5858:1;5855:13;5847:113;;;5946:1;5941:3;5937:11;5931:18;5927:1;5922:3;5918:11;5911:39;5883:2;5880:1;5876:10;5871:15;;5847:113;;;5994:1;5985:6;5980:3;5976:16;5969:27;5818:184;5756:246;;;:::o;6008:357::-;6086:3;6114:39;6147:5;6114:39;:::i;:::-;6169:61;6223:6;6218:3;6169:61;:::i;:::-;6162:68;;6239:65;6297:6;6292:3;6285:4;6278:5;6274:16;6239:65;:::i;:::-;6329:29;6351:6;6329:29;:::i;:::-;6324:3;6320:39;6313:46;;6090:275;6008:357;;;;:::o;6455:1402::-;6584:3;6620:4;6615:3;6611:14;6709:4;6702:5;6698:16;6692:23;6728:63;6785:4;6780:3;6776:14;6762:12;6728:63;:::i;:::-;6635:166;6888:4;6881:5;6877:16;6871:23;6907:63;6964:4;6959:3;6955:14;6941:12;6907:63;:::i;:::-;6811:169;7064:4;7057:5;7053:16;7047:23;7083:63;7140:4;7135:3;7131:14;7117:12;7083:63;:::i;:::-;6990:166;7241:4;7234:5;7230:16;7224:23;7294:3;7288:4;7284:14;7277:4;7272:3;7268:14;7261:38;7320:73;7388:4;7374:12;7320:73;:::i;:::-;7312:81;;7166:238;7490:4;7483:5;7479:16;7473:23;7509:63;7566:4;7561:3;7557:14;7543:12;7509:63;:::i;:::-;7414:168;7667:4;7660:5;7656:16;7650:23;7720:3;7714:4;7710:14;7703:4;7698:3;7694:14;7687:38;7746:73;7814:4;7800:12;7746:73;:::i;:::-;7738:81;;7592:238;7847:4;7840:11;;6589:1268;6455:1402;;;;:::o;7863:296::-;8002:10;8037:116;8149:3;8141:6;8037:116;:::i;:::-;8023:130;;7863:296;;;;:::o;8165:148::-;8270:4;8302;8297:3;8293:14;8285:22;;8165:148;;;:::o;8407:1191::-;8596:3;8625:89;8708:5;8625:89;:::i;:::-;8730:121;8844:6;8839:3;8730:121;:::i;:::-;8723:128;;8877:3;8922:4;8914:6;8910:17;8905:3;8901:27;8952:91;9037:5;8952:91;:::i;:::-;9066:7;9097:1;9082:471;9107:6;9104:1;9101:13;9082:471;;;9178:9;9172:4;9168:20;9163:3;9156:33;9229:6;9223:13;9257:134;9386:4;9371:13;9257:134;:::i;:::-;9249:142;;9414:95;9502:6;9414:95;:::i;:::-;9404:105;;9538:4;9533:3;9529:14;9522:21;;9142:411;9129:1;9126;9122:9;9117:14;;9082:471;;;9086:14;9569:4;9562:11;;9589:3;9582:10;;8601:997;;;;;8407:1191;;;;:::o;9604:513::-;9817:4;9855:2;9844:9;9840:18;9832:26;;9904:9;9898:4;9894:20;9890:1;9879:9;9875:17;9868:47;9932:178;10105:4;10096:6;9932:178;:::i;:::-;9924:186;;9604:513;;;;:::o;10123:118::-;10210:24;10228:5;10210:24;:::i;:::-;10205:3;10198:37;10123:118;;:::o;10247:222::-;10340:4;10378:2;10367:9;10363:18;10355:26;;10391:71;10459:1;10448:9;10444:17;10435:6;10391:71;:::i;:::-;10247:222;;;;:::o;10475:180::-;10523:77;10520:1;10513:88;10620:4;10617:1;10610:15;10644:4;10641:1;10634:15;10661:191;10701:3;10720:20;10738:1;10720:20;:::i;:::-;10715:25;;10754:20;10772:1;10754:20;:::i;:::-;10749:25;;10797:1;10794;10790:9;10783:16;;10818:3;10815:1;10812:10;10809:36;;;10825:18;;:::i;:::-;10809:36;10661:191;;;;:::o;10858:180::-;10906:77;10903:1;10896:88;11003:4;11000:1;10993:15;11027:4;11024:1;11017:15;11044:320;11088:6;11125:1;11119:4;11115:12;11105:22;;11172:1;11166:4;11162:12;11193:18;11183:81;;11249:4;11241:6;11237:17;11227:27;;11183:81;11311:2;11303:6;11300:14;11280:18;11277:38;11274:84;;11330:18;;:::i;:::-;11274:84;11095:269;11044:320;;;:::o;11370:141::-;11419:4;11442:3;11434:11;;11465:3;11462:1;11455:14;11499:4;11496:1;11486:18;11478:26;;11370:141;;;:::o;11517:93::-;11554:6;11601:2;11596;11589:5;11585:14;11581:23;11571:33;;11517:93;;;:::o;11616:107::-;11660:8;11710:5;11704:4;11700:16;11679:37;;11616:107;;;;:::o;11729:393::-;11798:6;11848:1;11836:10;11832:18;11871:97;11901:66;11890:9;11871:97;:::i;:::-;11989:39;12019:8;12008:9;11989:39;:::i;:::-;11977:51;;12061:4;12057:9;12050:5;12046:21;12037:30;;12110:4;12100:8;12096:19;12089:5;12086:30;12076:40;;11805:317;;11729:393;;;;;:::o;12128:60::-;12156:3;12177:5;12170:12;;12128:60;;;:::o;12194:142::-;12244:9;12277:53;12295:34;12304:24;12322:5;12304:24;:::i;:::-;12295:34;:::i;:::-;12277:53;:::i;:::-;12264:66;;12194:142;;;:::o;12342:75::-;12385:3;12406:5;12399:12;;12342:75;;;:::o;12423:269::-;12533:39;12564:7;12533:39;:::i;:::-;12594:91;12643:41;12667:16;12643:41;:::i;:::-;12635:6;12628:4;12622:11;12594:91;:::i;:::-;12588:4;12581:105;12499:193;12423:269;;;:::o;12698:73::-;12743:3;12698:73;:::o;12777:189::-;12854:32;;:::i;:::-;12895:65;12953:6;12945;12939:4;12895:65;:::i;:::-;12830:136;12777:189;;:::o;12972:186::-;13032:120;13049:3;13042:5;13039:14;13032:120;;;13103:39;13140:1;13133:5;13103:39;:::i;:::-;13076:1;13069:5;13065:13;13056:22;;13032:120;;;12972:186;;:::o;13164:543::-;13265:2;13260:3;13257:11;13254:446;;;13299:38;13331:5;13299:38;:::i;:::-;13383:29;13401:10;13383:29;:::i;:::-;13373:8;13369:44;13566:2;13554:10;13551:18;13548:49;;;13587:8;13572:23;;13548:49;13610:80;13666:22;13684:3;13666:22;:::i;:::-;13656:8;13652:37;13639:11;13610:80;:::i;:::-;13269:431;;13254:446;13164:543;;;:::o;13713:117::-;13767:8;13817:5;13811:4;13807:16;13786:37;;13713:117;;;;:::o;13836:169::-;13880:6;13913:51;13961:1;13957:6;13949:5;13946:1;13942:13;13913:51;:::i;:::-;13909:56;13994:4;13988;13984:15;13974:25;;13887:118;13836:169;;;;:::o;14010:295::-;14086:4;14232:29;14257:3;14251:4;14232:29;:::i;:::-;14224:37;;14294:3;14291:1;14287:11;14281:4;14278:21;14270:29;;14010:295;;;;:::o;14310:1395::-;14427:37;14460:3;14427:37;:::i;:::-;14529:18;14521:6;14518:30;14515:56;;;14551:18;;:::i;:::-;14515:56;14595:38;14627:4;14621:11;14595:38;:::i;:::-;14680:67;14740:6;14732;14726:4;14680:67;:::i;:::-;14774:1;14798:4;14785:17;;14830:2;14822:6;14819:14;14847:1;14842:618;;;;15504:1;15521:6;15518:77;;;15570:9;15565:3;15561:19;15555:26;15546:35;;15518:77;15621:67;15681:6;15674:5;15621:67;:::i;:::-;15615:4;15608:81;15477:222;14812:887;;14842:618;14894:4;14890:9;14882:6;14878:22;14928:37;14960:4;14928:37;:::i;:::-;14987:1;15001:208;15015:7;15012:1;15009:14;15001:208;;;15094:9;15089:3;15085:19;15079:26;15071:6;15064:42;15145:1;15137:6;15133:14;15123:24;;15192:2;15181:9;15177:18;15164:31;;15038:4;15035:1;15031:12;15026:17;;15001:208;;;15237:6;15228:7;15225:19;15222:179;;;15295:9;15290:3;15286:19;15280:26;15338:48;15380:4;15372:6;15368:17;15357:9;15338:48;:::i;:::-;15330:6;15323:64;15245:156;15222:179;15447:1;15443;15435:6;15431:14;15427:22;15421:4;15414:36;14849:611;;;14812:887;;14402:1303;;;14310:1395;;:::o;15711:118::-;15798:24;15816:5;15798:24;:::i;:::-;15793:3;15786:37;15711:118;;:::o;15835:142::-;15885:9;15918:53;15936:34;15945:24;15963:5;15945:24;:::i;:::-;15936:34;:::i;:::-;15918:53;:::i;:::-;15905:66;;15835:142;;;:::o;15983:126::-;16033:9;16066:37;16097:5;16066:37;:::i;:::-;16053:50;;15983:126;;;:::o;16115:134::-;16173:9;16206:37;16237:5;16206:37;:::i;:::-;16193:50;;16115:134;;;:::o;16255:147::-;16350:45;16389:5;16350:45;:::i;:::-;16345:3;16338:58;16255:147;;:::o;16408:169::-;16492:11;16526:6;16521:3;16514:19;16566:4;16561:3;16557:14;16542:29;;16408:169;;;;:::o;16583:377::-;16671:3;16699:39;16732:5;16699:39;:::i;:::-;16754:71;16818:6;16813:3;16754:71;:::i;:::-;16747:78;;16834:65;16892:6;16887:3;16880:4;16873:5;16869:16;16834:65;:::i;:::-;16924:29;16946:6;16924:29;:::i;:::-;16919:3;16915:39;16908:46;;16675:285;16583:377;;;;:::o;16966:973::-;17247:4;17285:3;17274:9;17270:19;17262:27;;17299:71;17367:1;17356:9;17352:17;17343:6;17299:71;:::i;:::-;17380:80;17456:2;17445:9;17441:18;17432:6;17380:80;:::i;:::-;17470:72;17538:2;17527:9;17523:18;17514:6;17470:72;:::i;:::-;17589:9;17583:4;17579:20;17574:2;17563:9;17559:18;17552:48;17617:78;17690:4;17681:6;17617:78;:::i;:::-;17609:86;;17705:73;17773:3;17762:9;17758:19;17749:6;17705:73;:::i;:::-;17826:9;17820:4;17816:20;17810:3;17799:9;17795:19;17788:49;17854:78;17927:4;17918:6;17854:78;:::i;:::-;17846:86;;16966:973;;;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"719200","executionCost":"753","totalCost":"719953"},"external":{"deployToBlockchain(address,uint256,string,string)":"infinite","getAllTransactions()":"infinite","getTransactionCount()":"2459"}},"methodIdentifiers":{"deployToBlockchain(address,uint256,string,string)":"07e05ed1","getAllTransactions()":"27506f53","getTransactionCount()":"2e7700f0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"datetime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"keyword\",\"type\":\"string\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"keyword\",\"type\":\"string\"}],\"name\":\"deployToBlockchain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTransactions\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"datetime\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"keyword\",\"type\":\"string\"}],\"internalType\":\"struct Transaction.TransactionDetail[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransactionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Transaction.sol\":\"Transaction\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Transaction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.18;\\n\\ncontract Transaction {\\n    uint256 transactionCount;\\n\\n    event Transfer(\\n        address sender,\\n        address recipient,\\n        uint amount,\\n        string message,\\n        uint256 datetime,\\n        string keyword\\n    );\\n\\n    struct TransactionDetail {\\n        address sender;\\n        address recipient;\\n        uint256 amount;\\n        string message;\\n        uint256 datetime;\\n        string keyword;\\n    }\\n\\n    TransactionDetail[] transactionStruct;\\n\\n    function deployToBlockchain(\\n        address payable recipient,\\n        uint amount,\\n        string memory message,\\n        string memory keyword\\n    ) public {\\n        transactionCount += 1;\\n        transactionStruct.push(\\n            TransactionDetail(\\n                msg.sender,\\n                recipient,\\n                amount,\\n                message,\\n                block.timestamp,\\n                keyword\\n            )\\n        );\\n\\n        emit Transfer(\\n            msg.sender,\\n            recipient,\\n            amount,\\n            message,\\n            block.timestamp,\\n            keyword\\n        );\\n    }\\n\\n    function getAllTransactions()\\n        public\\n        view\\n        returns (TransactionDetail[] memory)\\n    {\\n        return transactionStruct;\\n    }\\n\\n    function getTransactionCount() public view returns (uint256) {\\n        return transactionCount;\\n    }\\n}\\n\",\"keccak256\":\"0x5d2594f34992318be26f17ae6a03663f0042c03d304b110dadc4a33cc2dbceb7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1132,"contract":"contracts/Transaction.sol:Transaction","label":"transactionCount","offset":0,"slot":"0","type":"t_uint256"},{"astId":1163,"contract":"contracts/Transaction.sol:Transaction","label":"transactionStruct","offset":0,"slot":"1","type":"t_array(t_struct(TransactionDetail)1159_storage)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(TransactionDetail)1159_storage)dyn_storage":{"base":"t_struct(TransactionDetail)1159_storage","encoding":"dynamic_array","label":"struct Transaction.TransactionDetail[]","numberOfBytes":"32"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(TransactionDetail)1159_storage":{"encoding":"inplace","label":"struct Transaction.TransactionDetail","members":[{"astId":1148,"contract":"contracts/Transaction.sol:Transaction","label":"sender","offset":0,"slot":"0","type":"t_address"},{"astId":1150,"contract":"contracts/Transaction.sol:Transaction","label":"recipient","offset":0,"slot":"1","type":"t_address"},{"astId":1152,"contract":"contracts/Transaction.sol:Transaction","label":"amount","offset":0,"slot":"2","type":"t_uint256"},{"astId":1154,"contract":"contracts/Transaction.sol:Transaction","label":"message","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1156,"contract":"contracts/Transaction.sol:Transaction","label":"datetime","offset":0,"slot":"4","type":"t_uint256"},{"astId":1158,"contract":"contracts/Transaction.sol:Transaction","label":"keyword","offset":0,"slot":"5","type":"t_string_storage"}],"numberOfBytes":"192"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}